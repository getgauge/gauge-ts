// source: messages.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var spec_pb = require('./spec_pb.js');
goog.object.extend(proto, spec_pb);
goog.exportSymbol('proto.gauge.messages.CacheFileRequest', null, global);
goog.exportSymbol('proto.gauge.messages.CacheFileRequest.FileStatus', null, global);
goog.exportSymbol('proto.gauge.messages.Empty', null, global);
goog.exportSymbol('proto.gauge.messages.ExecuteStepRequest', null, global);
goog.exportSymbol('proto.gauge.messages.ExecutionArg', null, global);
goog.exportSymbol('proto.gauge.messages.ExecutionEndingRequest', null, global);
goog.exportSymbol('proto.gauge.messages.ExecutionInfo', null, global);
goog.exportSymbol('proto.gauge.messages.ExecutionStartingRequest', null, global);
goog.exportSymbol('proto.gauge.messages.ExecutionStatusResponse', null, global);
goog.exportSymbol('proto.gauge.messages.FileChanges', null, global);
goog.exportSymbol('proto.gauge.messages.FileDiff', null, global);
goog.exportSymbol('proto.gauge.messages.ImplementationFileGlobPatternRequest', null, global);
goog.exportSymbol('proto.gauge.messages.ImplementationFileGlobPatternResponse', null, global);
goog.exportSymbol('proto.gauge.messages.ImplementationFileListRequest', null, global);
goog.exportSymbol('proto.gauge.messages.ImplementationFileListResponse', null, global);
goog.exportSymbol('proto.gauge.messages.KeepAlive', null, global);
goog.exportSymbol('proto.gauge.messages.KillProcessRequest', null, global);
goog.exportSymbol('proto.gauge.messages.Message', null, global);
goog.exportSymbol('proto.gauge.messages.Message.MessageType', null, global);
goog.exportSymbol('proto.gauge.messages.ParameterPosition', null, global);
goog.exportSymbol('proto.gauge.messages.RefactorRequest', null, global);
goog.exportSymbol('proto.gauge.messages.RefactorResponse', null, global);
goog.exportSymbol('proto.gauge.messages.ScenarioDataStoreInitRequest', null, global);
goog.exportSymbol('proto.gauge.messages.ScenarioExecutionEndingRequest', null, global);
goog.exportSymbol('proto.gauge.messages.ScenarioExecutionStartingRequest', null, global);
goog.exportSymbol('proto.gauge.messages.ScenarioInfo', null, global);
goog.exportSymbol('proto.gauge.messages.SpecDataStoreInitRequest', null, global);
goog.exportSymbol('proto.gauge.messages.SpecDetails', null, global);
goog.exportSymbol('proto.gauge.messages.SpecDetails.SpecDetail', null, global);
goog.exportSymbol('proto.gauge.messages.SpecExecutionEndingRequest', null, global);
goog.exportSymbol('proto.gauge.messages.SpecExecutionStartingRequest', null, global);
goog.exportSymbol('proto.gauge.messages.SpecInfo', null, global);
goog.exportSymbol('proto.gauge.messages.StepExecutionEndingRequest', null, global);
goog.exportSymbol('proto.gauge.messages.StepExecutionStartingRequest', null, global);
goog.exportSymbol('proto.gauge.messages.StepInfo', null, global);
goog.exportSymbol('proto.gauge.messages.StepNameRequest', null, global);
goog.exportSymbol('proto.gauge.messages.StepNameResponse', null, global);
goog.exportSymbol('proto.gauge.messages.StepNamesRequest', null, global);
goog.exportSymbol('proto.gauge.messages.StepNamesResponse', null, global);
goog.exportSymbol('proto.gauge.messages.StepPositionsRequest', null, global);
goog.exportSymbol('proto.gauge.messages.StepPositionsResponse', null, global);
goog.exportSymbol('proto.gauge.messages.StepPositionsResponse.StepPosition', null, global);
goog.exportSymbol('proto.gauge.messages.StepValidateRequest', null, global);
goog.exportSymbol('proto.gauge.messages.StepValidateResponse', null, global);
goog.exportSymbol('proto.gauge.messages.StepValidateResponse.ErrorType', null, global);
goog.exportSymbol('proto.gauge.messages.StubImplementationCodeRequest', null, global);
goog.exportSymbol('proto.gauge.messages.SuiteDataStoreInitRequest', null, global);
goog.exportSymbol('proto.gauge.messages.SuiteExecutionResult', null, global);
goog.exportSymbol('proto.gauge.messages.SuiteExecutionResultItem', null, global);
goog.exportSymbol('proto.gauge.messages.TextDiff', null, global);
goog.exportSymbol('proto.gauge.messages.UnsupportedMessageResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.KillProcessRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gauge.messages.KillProcessRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.KillProcessRequest.displayName = 'proto.gauge.messages.KillProcessRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.ExecutionStatusResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gauge.messages.ExecutionStatusResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.ExecutionStatusResponse.displayName = 'proto.gauge.messages.ExecutionStatusResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.ExecutionStartingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gauge.messages.ExecutionStartingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.ExecutionStartingRequest.displayName = 'proto.gauge.messages.ExecutionStartingRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.ExecutionEndingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gauge.messages.ExecutionEndingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.ExecutionEndingRequest.displayName = 'proto.gauge.messages.ExecutionEndingRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.SpecExecutionStartingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gauge.messages.SpecExecutionStartingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.SpecExecutionStartingRequest.displayName = 'proto.gauge.messages.SpecExecutionStartingRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.SpecExecutionEndingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gauge.messages.SpecExecutionEndingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.SpecExecutionEndingRequest.displayName = 'proto.gauge.messages.SpecExecutionEndingRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.ScenarioExecutionStartingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gauge.messages.ScenarioExecutionStartingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.ScenarioExecutionStartingRequest.displayName = 'proto.gauge.messages.ScenarioExecutionStartingRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.ScenarioExecutionEndingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gauge.messages.ScenarioExecutionEndingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.ScenarioExecutionEndingRequest.displayName = 'proto.gauge.messages.ScenarioExecutionEndingRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.StepExecutionStartingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gauge.messages.StepExecutionStartingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.StepExecutionStartingRequest.displayName = 'proto.gauge.messages.StepExecutionStartingRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.StepExecutionEndingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gauge.messages.StepExecutionEndingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.StepExecutionEndingRequest.displayName = 'proto.gauge.messages.StepExecutionEndingRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.ExecutionArg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gauge.messages.ExecutionArg.repeatedFields_, null);
};
goog.inherits(proto.gauge.messages.ExecutionArg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.ExecutionArg.displayName = 'proto.gauge.messages.ExecutionArg';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.ExecutionInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gauge.messages.ExecutionInfo.repeatedFields_, null);
};
goog.inherits(proto.gauge.messages.ExecutionInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.ExecutionInfo.displayName = 'proto.gauge.messages.ExecutionInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.SpecInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gauge.messages.SpecInfo.repeatedFields_, null);
};
goog.inherits(proto.gauge.messages.SpecInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.SpecInfo.displayName = 'proto.gauge.messages.SpecInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.ScenarioInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gauge.messages.ScenarioInfo.repeatedFields_, null);
};
goog.inherits(proto.gauge.messages.ScenarioInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.ScenarioInfo.displayName = 'proto.gauge.messages.ScenarioInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.StepInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gauge.messages.StepInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.StepInfo.displayName = 'proto.gauge.messages.StepInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.ExecuteStepRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gauge.messages.ExecuteStepRequest.repeatedFields_, null);
};
goog.inherits(proto.gauge.messages.ExecuteStepRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.ExecuteStepRequest.displayName = 'proto.gauge.messages.ExecuteStepRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.StepValidateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gauge.messages.StepValidateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.StepValidateRequest.displayName = 'proto.gauge.messages.StepValidateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.StepValidateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gauge.messages.StepValidateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.StepValidateResponse.displayName = 'proto.gauge.messages.StepValidateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.SuiteExecutionResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gauge.messages.SuiteExecutionResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.SuiteExecutionResult.displayName = 'proto.gauge.messages.SuiteExecutionResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.SuiteExecutionResultItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gauge.messages.SuiteExecutionResultItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.SuiteExecutionResultItem.displayName = 'proto.gauge.messages.SuiteExecutionResultItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.StepNamesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gauge.messages.StepNamesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.StepNamesRequest.displayName = 'proto.gauge.messages.StepNamesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.StepNamesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gauge.messages.StepNamesResponse.repeatedFields_, null);
};
goog.inherits(proto.gauge.messages.StepNamesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.StepNamesResponse.displayName = 'proto.gauge.messages.StepNamesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.ScenarioDataStoreInitRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gauge.messages.ScenarioDataStoreInitRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.ScenarioDataStoreInitRequest.displayName = 'proto.gauge.messages.ScenarioDataStoreInitRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.SpecDataStoreInitRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gauge.messages.SpecDataStoreInitRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.SpecDataStoreInitRequest.displayName = 'proto.gauge.messages.SpecDataStoreInitRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.SuiteDataStoreInitRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gauge.messages.SuiteDataStoreInitRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.SuiteDataStoreInitRequest.displayName = 'proto.gauge.messages.SuiteDataStoreInitRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.ParameterPosition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gauge.messages.ParameterPosition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.ParameterPosition.displayName = 'proto.gauge.messages.ParameterPosition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.RefactorRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gauge.messages.RefactorRequest.repeatedFields_, null);
};
goog.inherits(proto.gauge.messages.RefactorRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.RefactorRequest.displayName = 'proto.gauge.messages.RefactorRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.FileChanges = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gauge.messages.FileChanges.repeatedFields_, null);
};
goog.inherits(proto.gauge.messages.FileChanges, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.FileChanges.displayName = 'proto.gauge.messages.FileChanges';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.RefactorResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gauge.messages.RefactorResponse.repeatedFields_, null);
};
goog.inherits(proto.gauge.messages.RefactorResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.RefactorResponse.displayName = 'proto.gauge.messages.RefactorResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.StepNameRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gauge.messages.StepNameRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.StepNameRequest.displayName = 'proto.gauge.messages.StepNameRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.StepNameResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gauge.messages.StepNameResponse.repeatedFields_, null);
};
goog.inherits(proto.gauge.messages.StepNameResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.StepNameResponse.displayName = 'proto.gauge.messages.StepNameResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.UnsupportedMessageResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gauge.messages.UnsupportedMessageResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.UnsupportedMessageResponse.displayName = 'proto.gauge.messages.UnsupportedMessageResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.CacheFileRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gauge.messages.CacheFileRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.CacheFileRequest.displayName = 'proto.gauge.messages.CacheFileRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.StepPositionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gauge.messages.StepPositionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.StepPositionsRequest.displayName = 'proto.gauge.messages.StepPositionsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.StepPositionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gauge.messages.StepPositionsResponse.repeatedFields_, null);
};
goog.inherits(proto.gauge.messages.StepPositionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.StepPositionsResponse.displayName = 'proto.gauge.messages.StepPositionsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.StepPositionsResponse.StepPosition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gauge.messages.StepPositionsResponse.StepPosition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.StepPositionsResponse.StepPosition.displayName = 'proto.gauge.messages.StepPositionsResponse.StepPosition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.ImplementationFileGlobPatternRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gauge.messages.ImplementationFileGlobPatternRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.ImplementationFileGlobPatternRequest.displayName = 'proto.gauge.messages.ImplementationFileGlobPatternRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.ImplementationFileGlobPatternResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gauge.messages.ImplementationFileGlobPatternResponse.repeatedFields_, null);
};
goog.inherits(proto.gauge.messages.ImplementationFileGlobPatternResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.ImplementationFileGlobPatternResponse.displayName = 'proto.gauge.messages.ImplementationFileGlobPatternResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.ImplementationFileListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gauge.messages.ImplementationFileListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.ImplementationFileListRequest.displayName = 'proto.gauge.messages.ImplementationFileListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.ImplementationFileListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gauge.messages.ImplementationFileListResponse.repeatedFields_, null);
};
goog.inherits(proto.gauge.messages.ImplementationFileListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.ImplementationFileListResponse.displayName = 'proto.gauge.messages.ImplementationFileListResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.StubImplementationCodeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gauge.messages.StubImplementationCodeRequest.repeatedFields_, null);
};
goog.inherits(proto.gauge.messages.StubImplementationCodeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.StubImplementationCodeRequest.displayName = 'proto.gauge.messages.StubImplementationCodeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.TextDiff = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gauge.messages.TextDiff, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.TextDiff.displayName = 'proto.gauge.messages.TextDiff';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.FileDiff = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gauge.messages.FileDiff.repeatedFields_, null);
};
goog.inherits(proto.gauge.messages.FileDiff, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.FileDiff.displayName = 'proto.gauge.messages.FileDiff';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.KeepAlive = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gauge.messages.KeepAlive, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.KeepAlive.displayName = 'proto.gauge.messages.KeepAlive';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.SpecDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gauge.messages.SpecDetails.repeatedFields_, null);
};
goog.inherits(proto.gauge.messages.SpecDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.SpecDetails.displayName = 'proto.gauge.messages.SpecDetails';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.SpecDetails.SpecDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gauge.messages.SpecDetails.SpecDetail.repeatedFields_, null);
};
goog.inherits(proto.gauge.messages.SpecDetails.SpecDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.SpecDetails.SpecDetail.displayName = 'proto.gauge.messages.SpecDetails.SpecDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.Empty = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gauge.messages.Empty, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.Empty.displayName = 'proto.gauge.messages.Empty';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.Message = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gauge.messages.Message, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.Message.displayName = 'proto.gauge.messages.Message';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.KillProcessRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.KillProcessRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.KillProcessRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.KillProcessRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.KillProcessRequest}
 */
proto.gauge.messages.KillProcessRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.KillProcessRequest;
  return proto.gauge.messages.KillProcessRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.KillProcessRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.KillProcessRequest}
 */
proto.gauge.messages.KillProcessRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.KillProcessRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.KillProcessRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.KillProcessRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.KillProcessRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.ExecutionStatusResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.ExecutionStatusResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.ExecutionStatusResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ExecutionStatusResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    executionresult: (f = msg.getExecutionresult()) && spec_pb.ProtoExecutionResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.ExecutionStatusResponse}
 */
proto.gauge.messages.ExecutionStatusResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.ExecutionStatusResponse;
  return proto.gauge.messages.ExecutionStatusResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.ExecutionStatusResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.ExecutionStatusResponse}
 */
proto.gauge.messages.ExecutionStatusResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new spec_pb.ProtoExecutionResult;
      reader.readMessage(value,spec_pb.ProtoExecutionResult.deserializeBinaryFromReader);
      msg.setExecutionresult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.ExecutionStatusResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.ExecutionStatusResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.ExecutionStatusResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ExecutionStatusResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExecutionresult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      spec_pb.ProtoExecutionResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional ProtoExecutionResult executionResult = 1;
 * @return {?proto.gauge.messages.ProtoExecutionResult}
 */
proto.gauge.messages.ExecutionStatusResponse.prototype.getExecutionresult = function() {
  return /** @type{?proto.gauge.messages.ProtoExecutionResult} */ (
    jspb.Message.getWrapperField(this, spec_pb.ProtoExecutionResult, 1));
};


/**
 * @param {?proto.gauge.messages.ProtoExecutionResult|undefined} value
 * @return {!proto.gauge.messages.ExecutionStatusResponse} returns this
*/
proto.gauge.messages.ExecutionStatusResponse.prototype.setExecutionresult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.ExecutionStatusResponse} returns this
 */
proto.gauge.messages.ExecutionStatusResponse.prototype.clearExecutionresult = function() {
  return this.setExecutionresult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.ExecutionStatusResponse.prototype.hasExecutionresult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.ExecutionStartingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.ExecutionStartingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.ExecutionStartingRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ExecutionStartingRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    currentexecutioninfo: (f = msg.getCurrentexecutioninfo()) && proto.gauge.messages.ExecutionInfo.toObject(includeInstance, f),
    suiteresult: (f = msg.getSuiteresult()) && spec_pb.ProtoSuiteResult.toObject(includeInstance, f),
    stream: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.ExecutionStartingRequest}
 */
proto.gauge.messages.ExecutionStartingRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.ExecutionStartingRequest;
  return proto.gauge.messages.ExecutionStartingRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.ExecutionStartingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.ExecutionStartingRequest}
 */
proto.gauge.messages.ExecutionStartingRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gauge.messages.ExecutionInfo;
      reader.readMessage(value,proto.gauge.messages.ExecutionInfo.deserializeBinaryFromReader);
      msg.setCurrentexecutioninfo(value);
      break;
    case 2:
      var value = new spec_pb.ProtoSuiteResult;
      reader.readMessage(value,spec_pb.ProtoSuiteResult.deserializeBinaryFromReader);
      msg.setSuiteresult(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStream(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.ExecutionStartingRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.ExecutionStartingRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.ExecutionStartingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ExecutionStartingRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrentexecutioninfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gauge.messages.ExecutionInfo.serializeBinaryToWriter
    );
  }
  f = message.getSuiteresult();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      spec_pb.ProtoSuiteResult.serializeBinaryToWriter
    );
  }
  f = message.getStream();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional ExecutionInfo currentExecutionInfo = 1;
 * @return {?proto.gauge.messages.ExecutionInfo}
 */
proto.gauge.messages.ExecutionStartingRequest.prototype.getCurrentexecutioninfo = function() {
  return /** @type{?proto.gauge.messages.ExecutionInfo} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.ExecutionInfo, 1));
};


/**
 * @param {?proto.gauge.messages.ExecutionInfo|undefined} value
 * @return {!proto.gauge.messages.ExecutionStartingRequest} returns this
*/
proto.gauge.messages.ExecutionStartingRequest.prototype.setCurrentexecutioninfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.ExecutionStartingRequest} returns this
 */
proto.gauge.messages.ExecutionStartingRequest.prototype.clearCurrentexecutioninfo = function() {
  return this.setCurrentexecutioninfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.ExecutionStartingRequest.prototype.hasCurrentexecutioninfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ProtoSuiteResult suiteResult = 2;
 * @return {?proto.gauge.messages.ProtoSuiteResult}
 */
proto.gauge.messages.ExecutionStartingRequest.prototype.getSuiteresult = function() {
  return /** @type{?proto.gauge.messages.ProtoSuiteResult} */ (
    jspb.Message.getWrapperField(this, spec_pb.ProtoSuiteResult, 2));
};


/**
 * @param {?proto.gauge.messages.ProtoSuiteResult|undefined} value
 * @return {!proto.gauge.messages.ExecutionStartingRequest} returns this
*/
proto.gauge.messages.ExecutionStartingRequest.prototype.setSuiteresult = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.ExecutionStartingRequest} returns this
 */
proto.gauge.messages.ExecutionStartingRequest.prototype.clearSuiteresult = function() {
  return this.setSuiteresult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.ExecutionStartingRequest.prototype.hasSuiteresult = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 stream = 3;
 * @return {number}
 */
proto.gauge.messages.ExecutionStartingRequest.prototype.getStream = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.gauge.messages.ExecutionStartingRequest} returns this
 */
proto.gauge.messages.ExecutionStartingRequest.prototype.setStream = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.ExecutionEndingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.ExecutionEndingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.ExecutionEndingRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ExecutionEndingRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    currentexecutioninfo: (f = msg.getCurrentexecutioninfo()) && proto.gauge.messages.ExecutionInfo.toObject(includeInstance, f),
    suiteresult: (f = msg.getSuiteresult()) && spec_pb.ProtoSuiteResult.toObject(includeInstance, f),
    stream: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.ExecutionEndingRequest}
 */
proto.gauge.messages.ExecutionEndingRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.ExecutionEndingRequest;
  return proto.gauge.messages.ExecutionEndingRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.ExecutionEndingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.ExecutionEndingRequest}
 */
proto.gauge.messages.ExecutionEndingRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gauge.messages.ExecutionInfo;
      reader.readMessage(value,proto.gauge.messages.ExecutionInfo.deserializeBinaryFromReader);
      msg.setCurrentexecutioninfo(value);
      break;
    case 2:
      var value = new spec_pb.ProtoSuiteResult;
      reader.readMessage(value,spec_pb.ProtoSuiteResult.deserializeBinaryFromReader);
      msg.setSuiteresult(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStream(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.ExecutionEndingRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.ExecutionEndingRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.ExecutionEndingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ExecutionEndingRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrentexecutioninfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gauge.messages.ExecutionInfo.serializeBinaryToWriter
    );
  }
  f = message.getSuiteresult();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      spec_pb.ProtoSuiteResult.serializeBinaryToWriter
    );
  }
  f = message.getStream();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional ExecutionInfo currentExecutionInfo = 1;
 * @return {?proto.gauge.messages.ExecutionInfo}
 */
proto.gauge.messages.ExecutionEndingRequest.prototype.getCurrentexecutioninfo = function() {
  return /** @type{?proto.gauge.messages.ExecutionInfo} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.ExecutionInfo, 1));
};


/**
 * @param {?proto.gauge.messages.ExecutionInfo|undefined} value
 * @return {!proto.gauge.messages.ExecutionEndingRequest} returns this
*/
proto.gauge.messages.ExecutionEndingRequest.prototype.setCurrentexecutioninfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.ExecutionEndingRequest} returns this
 */
proto.gauge.messages.ExecutionEndingRequest.prototype.clearCurrentexecutioninfo = function() {
  return this.setCurrentexecutioninfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.ExecutionEndingRequest.prototype.hasCurrentexecutioninfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ProtoSuiteResult suiteResult = 2;
 * @return {?proto.gauge.messages.ProtoSuiteResult}
 */
proto.gauge.messages.ExecutionEndingRequest.prototype.getSuiteresult = function() {
  return /** @type{?proto.gauge.messages.ProtoSuiteResult} */ (
    jspb.Message.getWrapperField(this, spec_pb.ProtoSuiteResult, 2));
};


/**
 * @param {?proto.gauge.messages.ProtoSuiteResult|undefined} value
 * @return {!proto.gauge.messages.ExecutionEndingRequest} returns this
*/
proto.gauge.messages.ExecutionEndingRequest.prototype.setSuiteresult = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.ExecutionEndingRequest} returns this
 */
proto.gauge.messages.ExecutionEndingRequest.prototype.clearSuiteresult = function() {
  return this.setSuiteresult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.ExecutionEndingRequest.prototype.hasSuiteresult = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 stream = 3;
 * @return {number}
 */
proto.gauge.messages.ExecutionEndingRequest.prototype.getStream = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.gauge.messages.ExecutionEndingRequest} returns this
 */
proto.gauge.messages.ExecutionEndingRequest.prototype.setStream = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.SpecExecutionStartingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.SpecExecutionStartingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.SpecExecutionStartingRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.SpecExecutionStartingRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    currentexecutioninfo: (f = msg.getCurrentexecutioninfo()) && proto.gauge.messages.ExecutionInfo.toObject(includeInstance, f),
    specresult: (f = msg.getSpecresult()) && spec_pb.ProtoSpecResult.toObject(includeInstance, f),
    stream: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.SpecExecutionStartingRequest}
 */
proto.gauge.messages.SpecExecutionStartingRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.SpecExecutionStartingRequest;
  return proto.gauge.messages.SpecExecutionStartingRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.SpecExecutionStartingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.SpecExecutionStartingRequest}
 */
proto.gauge.messages.SpecExecutionStartingRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gauge.messages.ExecutionInfo;
      reader.readMessage(value,proto.gauge.messages.ExecutionInfo.deserializeBinaryFromReader);
      msg.setCurrentexecutioninfo(value);
      break;
    case 2:
      var value = new spec_pb.ProtoSpecResult;
      reader.readMessage(value,spec_pb.ProtoSpecResult.deserializeBinaryFromReader);
      msg.setSpecresult(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStream(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.SpecExecutionStartingRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.SpecExecutionStartingRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.SpecExecutionStartingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.SpecExecutionStartingRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrentexecutioninfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gauge.messages.ExecutionInfo.serializeBinaryToWriter
    );
  }
  f = message.getSpecresult();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      spec_pb.ProtoSpecResult.serializeBinaryToWriter
    );
  }
  f = message.getStream();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional ExecutionInfo currentExecutionInfo = 1;
 * @return {?proto.gauge.messages.ExecutionInfo}
 */
proto.gauge.messages.SpecExecutionStartingRequest.prototype.getCurrentexecutioninfo = function() {
  return /** @type{?proto.gauge.messages.ExecutionInfo} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.ExecutionInfo, 1));
};


/**
 * @param {?proto.gauge.messages.ExecutionInfo|undefined} value
 * @return {!proto.gauge.messages.SpecExecutionStartingRequest} returns this
*/
proto.gauge.messages.SpecExecutionStartingRequest.prototype.setCurrentexecutioninfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.SpecExecutionStartingRequest} returns this
 */
proto.gauge.messages.SpecExecutionStartingRequest.prototype.clearCurrentexecutioninfo = function() {
  return this.setCurrentexecutioninfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.SpecExecutionStartingRequest.prototype.hasCurrentexecutioninfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ProtoSpecResult specResult = 2;
 * @return {?proto.gauge.messages.ProtoSpecResult}
 */
proto.gauge.messages.SpecExecutionStartingRequest.prototype.getSpecresult = function() {
  return /** @type{?proto.gauge.messages.ProtoSpecResult} */ (
    jspb.Message.getWrapperField(this, spec_pb.ProtoSpecResult, 2));
};


/**
 * @param {?proto.gauge.messages.ProtoSpecResult|undefined} value
 * @return {!proto.gauge.messages.SpecExecutionStartingRequest} returns this
*/
proto.gauge.messages.SpecExecutionStartingRequest.prototype.setSpecresult = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.SpecExecutionStartingRequest} returns this
 */
proto.gauge.messages.SpecExecutionStartingRequest.prototype.clearSpecresult = function() {
  return this.setSpecresult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.SpecExecutionStartingRequest.prototype.hasSpecresult = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 stream = 3;
 * @return {number}
 */
proto.gauge.messages.SpecExecutionStartingRequest.prototype.getStream = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.gauge.messages.SpecExecutionStartingRequest} returns this
 */
proto.gauge.messages.SpecExecutionStartingRequest.prototype.setStream = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.SpecExecutionEndingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.SpecExecutionEndingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.SpecExecutionEndingRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.SpecExecutionEndingRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    currentexecutioninfo: (f = msg.getCurrentexecutioninfo()) && proto.gauge.messages.ExecutionInfo.toObject(includeInstance, f),
    specresult: (f = msg.getSpecresult()) && spec_pb.ProtoSpecResult.toObject(includeInstance, f),
    stream: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.SpecExecutionEndingRequest}
 */
proto.gauge.messages.SpecExecutionEndingRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.SpecExecutionEndingRequest;
  return proto.gauge.messages.SpecExecutionEndingRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.SpecExecutionEndingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.SpecExecutionEndingRequest}
 */
proto.gauge.messages.SpecExecutionEndingRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gauge.messages.ExecutionInfo;
      reader.readMessage(value,proto.gauge.messages.ExecutionInfo.deserializeBinaryFromReader);
      msg.setCurrentexecutioninfo(value);
      break;
    case 2:
      var value = new spec_pb.ProtoSpecResult;
      reader.readMessage(value,spec_pb.ProtoSpecResult.deserializeBinaryFromReader);
      msg.setSpecresult(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStream(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.SpecExecutionEndingRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.SpecExecutionEndingRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.SpecExecutionEndingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.SpecExecutionEndingRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrentexecutioninfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gauge.messages.ExecutionInfo.serializeBinaryToWriter
    );
  }
  f = message.getSpecresult();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      spec_pb.ProtoSpecResult.serializeBinaryToWriter
    );
  }
  f = message.getStream();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional ExecutionInfo currentExecutionInfo = 1;
 * @return {?proto.gauge.messages.ExecutionInfo}
 */
proto.gauge.messages.SpecExecutionEndingRequest.prototype.getCurrentexecutioninfo = function() {
  return /** @type{?proto.gauge.messages.ExecutionInfo} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.ExecutionInfo, 1));
};


/**
 * @param {?proto.gauge.messages.ExecutionInfo|undefined} value
 * @return {!proto.gauge.messages.SpecExecutionEndingRequest} returns this
*/
proto.gauge.messages.SpecExecutionEndingRequest.prototype.setCurrentexecutioninfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.SpecExecutionEndingRequest} returns this
 */
proto.gauge.messages.SpecExecutionEndingRequest.prototype.clearCurrentexecutioninfo = function() {
  return this.setCurrentexecutioninfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.SpecExecutionEndingRequest.prototype.hasCurrentexecutioninfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ProtoSpecResult specResult = 2;
 * @return {?proto.gauge.messages.ProtoSpecResult}
 */
proto.gauge.messages.SpecExecutionEndingRequest.prototype.getSpecresult = function() {
  return /** @type{?proto.gauge.messages.ProtoSpecResult} */ (
    jspb.Message.getWrapperField(this, spec_pb.ProtoSpecResult, 2));
};


/**
 * @param {?proto.gauge.messages.ProtoSpecResult|undefined} value
 * @return {!proto.gauge.messages.SpecExecutionEndingRequest} returns this
*/
proto.gauge.messages.SpecExecutionEndingRequest.prototype.setSpecresult = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.SpecExecutionEndingRequest} returns this
 */
proto.gauge.messages.SpecExecutionEndingRequest.prototype.clearSpecresult = function() {
  return this.setSpecresult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.SpecExecutionEndingRequest.prototype.hasSpecresult = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 stream = 3;
 * @return {number}
 */
proto.gauge.messages.SpecExecutionEndingRequest.prototype.getStream = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.gauge.messages.SpecExecutionEndingRequest} returns this
 */
proto.gauge.messages.SpecExecutionEndingRequest.prototype.setStream = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.ScenarioExecutionStartingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.ScenarioExecutionStartingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.ScenarioExecutionStartingRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ScenarioExecutionStartingRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    currentexecutioninfo: (f = msg.getCurrentexecutioninfo()) && proto.gauge.messages.ExecutionInfo.toObject(includeInstance, f),
    scenarioresult: (f = msg.getScenarioresult()) && spec_pb.ProtoScenarioResult.toObject(includeInstance, f),
    stream: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.ScenarioExecutionStartingRequest}
 */
proto.gauge.messages.ScenarioExecutionStartingRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.ScenarioExecutionStartingRequest;
  return proto.gauge.messages.ScenarioExecutionStartingRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.ScenarioExecutionStartingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.ScenarioExecutionStartingRequest}
 */
proto.gauge.messages.ScenarioExecutionStartingRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gauge.messages.ExecutionInfo;
      reader.readMessage(value,proto.gauge.messages.ExecutionInfo.deserializeBinaryFromReader);
      msg.setCurrentexecutioninfo(value);
      break;
    case 2:
      var value = new spec_pb.ProtoScenarioResult;
      reader.readMessage(value,spec_pb.ProtoScenarioResult.deserializeBinaryFromReader);
      msg.setScenarioresult(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStream(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.ScenarioExecutionStartingRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.ScenarioExecutionStartingRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.ScenarioExecutionStartingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ScenarioExecutionStartingRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrentexecutioninfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gauge.messages.ExecutionInfo.serializeBinaryToWriter
    );
  }
  f = message.getScenarioresult();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      spec_pb.ProtoScenarioResult.serializeBinaryToWriter
    );
  }
  f = message.getStream();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional ExecutionInfo currentExecutionInfo = 1;
 * @return {?proto.gauge.messages.ExecutionInfo}
 */
proto.gauge.messages.ScenarioExecutionStartingRequest.prototype.getCurrentexecutioninfo = function() {
  return /** @type{?proto.gauge.messages.ExecutionInfo} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.ExecutionInfo, 1));
};


/**
 * @param {?proto.gauge.messages.ExecutionInfo|undefined} value
 * @return {!proto.gauge.messages.ScenarioExecutionStartingRequest} returns this
*/
proto.gauge.messages.ScenarioExecutionStartingRequest.prototype.setCurrentexecutioninfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.ScenarioExecutionStartingRequest} returns this
 */
proto.gauge.messages.ScenarioExecutionStartingRequest.prototype.clearCurrentexecutioninfo = function() {
  return this.setCurrentexecutioninfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.ScenarioExecutionStartingRequest.prototype.hasCurrentexecutioninfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ProtoScenarioResult scenarioResult = 2;
 * @return {?proto.gauge.messages.ProtoScenarioResult}
 */
proto.gauge.messages.ScenarioExecutionStartingRequest.prototype.getScenarioresult = function() {
  return /** @type{?proto.gauge.messages.ProtoScenarioResult} */ (
    jspb.Message.getWrapperField(this, spec_pb.ProtoScenarioResult, 2));
};


/**
 * @param {?proto.gauge.messages.ProtoScenarioResult|undefined} value
 * @return {!proto.gauge.messages.ScenarioExecutionStartingRequest} returns this
*/
proto.gauge.messages.ScenarioExecutionStartingRequest.prototype.setScenarioresult = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.ScenarioExecutionStartingRequest} returns this
 */
proto.gauge.messages.ScenarioExecutionStartingRequest.prototype.clearScenarioresult = function() {
  return this.setScenarioresult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.ScenarioExecutionStartingRequest.prototype.hasScenarioresult = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 stream = 3;
 * @return {number}
 */
proto.gauge.messages.ScenarioExecutionStartingRequest.prototype.getStream = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.gauge.messages.ScenarioExecutionStartingRequest} returns this
 */
proto.gauge.messages.ScenarioExecutionStartingRequest.prototype.setStream = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.ScenarioExecutionEndingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.ScenarioExecutionEndingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.ScenarioExecutionEndingRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ScenarioExecutionEndingRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    currentexecutioninfo: (f = msg.getCurrentexecutioninfo()) && proto.gauge.messages.ExecutionInfo.toObject(includeInstance, f),
    scenarioresult: (f = msg.getScenarioresult()) && spec_pb.ProtoScenarioResult.toObject(includeInstance, f),
    stream: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.ScenarioExecutionEndingRequest}
 */
proto.gauge.messages.ScenarioExecutionEndingRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.ScenarioExecutionEndingRequest;
  return proto.gauge.messages.ScenarioExecutionEndingRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.ScenarioExecutionEndingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.ScenarioExecutionEndingRequest}
 */
proto.gauge.messages.ScenarioExecutionEndingRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gauge.messages.ExecutionInfo;
      reader.readMessage(value,proto.gauge.messages.ExecutionInfo.deserializeBinaryFromReader);
      msg.setCurrentexecutioninfo(value);
      break;
    case 2:
      var value = new spec_pb.ProtoScenarioResult;
      reader.readMessage(value,spec_pb.ProtoScenarioResult.deserializeBinaryFromReader);
      msg.setScenarioresult(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStream(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.ScenarioExecutionEndingRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.ScenarioExecutionEndingRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.ScenarioExecutionEndingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ScenarioExecutionEndingRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrentexecutioninfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gauge.messages.ExecutionInfo.serializeBinaryToWriter
    );
  }
  f = message.getScenarioresult();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      spec_pb.ProtoScenarioResult.serializeBinaryToWriter
    );
  }
  f = message.getStream();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional ExecutionInfo currentExecutionInfo = 1;
 * @return {?proto.gauge.messages.ExecutionInfo}
 */
proto.gauge.messages.ScenarioExecutionEndingRequest.prototype.getCurrentexecutioninfo = function() {
  return /** @type{?proto.gauge.messages.ExecutionInfo} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.ExecutionInfo, 1));
};


/**
 * @param {?proto.gauge.messages.ExecutionInfo|undefined} value
 * @return {!proto.gauge.messages.ScenarioExecutionEndingRequest} returns this
*/
proto.gauge.messages.ScenarioExecutionEndingRequest.prototype.setCurrentexecutioninfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.ScenarioExecutionEndingRequest} returns this
 */
proto.gauge.messages.ScenarioExecutionEndingRequest.prototype.clearCurrentexecutioninfo = function() {
  return this.setCurrentexecutioninfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.ScenarioExecutionEndingRequest.prototype.hasCurrentexecutioninfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ProtoScenarioResult scenarioResult = 2;
 * @return {?proto.gauge.messages.ProtoScenarioResult}
 */
proto.gauge.messages.ScenarioExecutionEndingRequest.prototype.getScenarioresult = function() {
  return /** @type{?proto.gauge.messages.ProtoScenarioResult} */ (
    jspb.Message.getWrapperField(this, spec_pb.ProtoScenarioResult, 2));
};


/**
 * @param {?proto.gauge.messages.ProtoScenarioResult|undefined} value
 * @return {!proto.gauge.messages.ScenarioExecutionEndingRequest} returns this
*/
proto.gauge.messages.ScenarioExecutionEndingRequest.prototype.setScenarioresult = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.ScenarioExecutionEndingRequest} returns this
 */
proto.gauge.messages.ScenarioExecutionEndingRequest.prototype.clearScenarioresult = function() {
  return this.setScenarioresult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.ScenarioExecutionEndingRequest.prototype.hasScenarioresult = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 stream = 3;
 * @return {number}
 */
proto.gauge.messages.ScenarioExecutionEndingRequest.prototype.getStream = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.gauge.messages.ScenarioExecutionEndingRequest} returns this
 */
proto.gauge.messages.ScenarioExecutionEndingRequest.prototype.setStream = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.StepExecutionStartingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.StepExecutionStartingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.StepExecutionStartingRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.StepExecutionStartingRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    currentexecutioninfo: (f = msg.getCurrentexecutioninfo()) && proto.gauge.messages.ExecutionInfo.toObject(includeInstance, f),
    stepresult: (f = msg.getStepresult()) && spec_pb.ProtoStepResult.toObject(includeInstance, f),
    stream: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.StepExecutionStartingRequest}
 */
proto.gauge.messages.StepExecutionStartingRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.StepExecutionStartingRequest;
  return proto.gauge.messages.StepExecutionStartingRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.StepExecutionStartingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.StepExecutionStartingRequest}
 */
proto.gauge.messages.StepExecutionStartingRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gauge.messages.ExecutionInfo;
      reader.readMessage(value,proto.gauge.messages.ExecutionInfo.deserializeBinaryFromReader);
      msg.setCurrentexecutioninfo(value);
      break;
    case 2:
      var value = new spec_pb.ProtoStepResult;
      reader.readMessage(value,spec_pb.ProtoStepResult.deserializeBinaryFromReader);
      msg.setStepresult(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStream(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.StepExecutionStartingRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.StepExecutionStartingRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.StepExecutionStartingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.StepExecutionStartingRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrentexecutioninfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gauge.messages.ExecutionInfo.serializeBinaryToWriter
    );
  }
  f = message.getStepresult();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      spec_pb.ProtoStepResult.serializeBinaryToWriter
    );
  }
  f = message.getStream();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional ExecutionInfo currentExecutionInfo = 1;
 * @return {?proto.gauge.messages.ExecutionInfo}
 */
proto.gauge.messages.StepExecutionStartingRequest.prototype.getCurrentexecutioninfo = function() {
  return /** @type{?proto.gauge.messages.ExecutionInfo} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.ExecutionInfo, 1));
};


/**
 * @param {?proto.gauge.messages.ExecutionInfo|undefined} value
 * @return {!proto.gauge.messages.StepExecutionStartingRequest} returns this
*/
proto.gauge.messages.StepExecutionStartingRequest.prototype.setCurrentexecutioninfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.StepExecutionStartingRequest} returns this
 */
proto.gauge.messages.StepExecutionStartingRequest.prototype.clearCurrentexecutioninfo = function() {
  return this.setCurrentexecutioninfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.StepExecutionStartingRequest.prototype.hasCurrentexecutioninfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ProtoStepResult stepResult = 2;
 * @return {?proto.gauge.messages.ProtoStepResult}
 */
proto.gauge.messages.StepExecutionStartingRequest.prototype.getStepresult = function() {
  return /** @type{?proto.gauge.messages.ProtoStepResult} */ (
    jspb.Message.getWrapperField(this, spec_pb.ProtoStepResult, 2));
};


/**
 * @param {?proto.gauge.messages.ProtoStepResult|undefined} value
 * @return {!proto.gauge.messages.StepExecutionStartingRequest} returns this
*/
proto.gauge.messages.StepExecutionStartingRequest.prototype.setStepresult = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.StepExecutionStartingRequest} returns this
 */
proto.gauge.messages.StepExecutionStartingRequest.prototype.clearStepresult = function() {
  return this.setStepresult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.StepExecutionStartingRequest.prototype.hasStepresult = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 stream = 3;
 * @return {number}
 */
proto.gauge.messages.StepExecutionStartingRequest.prototype.getStream = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.gauge.messages.StepExecutionStartingRequest} returns this
 */
proto.gauge.messages.StepExecutionStartingRequest.prototype.setStream = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.StepExecutionEndingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.StepExecutionEndingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.StepExecutionEndingRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.StepExecutionEndingRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    currentexecutioninfo: (f = msg.getCurrentexecutioninfo()) && proto.gauge.messages.ExecutionInfo.toObject(includeInstance, f),
    stepresult: (f = msg.getStepresult()) && spec_pb.ProtoStepResult.toObject(includeInstance, f),
    stream: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.StepExecutionEndingRequest}
 */
proto.gauge.messages.StepExecutionEndingRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.StepExecutionEndingRequest;
  return proto.gauge.messages.StepExecutionEndingRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.StepExecutionEndingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.StepExecutionEndingRequest}
 */
proto.gauge.messages.StepExecutionEndingRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gauge.messages.ExecutionInfo;
      reader.readMessage(value,proto.gauge.messages.ExecutionInfo.deserializeBinaryFromReader);
      msg.setCurrentexecutioninfo(value);
      break;
    case 2:
      var value = new spec_pb.ProtoStepResult;
      reader.readMessage(value,spec_pb.ProtoStepResult.deserializeBinaryFromReader);
      msg.setStepresult(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStream(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.StepExecutionEndingRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.StepExecutionEndingRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.StepExecutionEndingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.StepExecutionEndingRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrentexecutioninfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gauge.messages.ExecutionInfo.serializeBinaryToWriter
    );
  }
  f = message.getStepresult();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      spec_pb.ProtoStepResult.serializeBinaryToWriter
    );
  }
  f = message.getStream();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional ExecutionInfo currentExecutionInfo = 1;
 * @return {?proto.gauge.messages.ExecutionInfo}
 */
proto.gauge.messages.StepExecutionEndingRequest.prototype.getCurrentexecutioninfo = function() {
  return /** @type{?proto.gauge.messages.ExecutionInfo} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.ExecutionInfo, 1));
};


/**
 * @param {?proto.gauge.messages.ExecutionInfo|undefined} value
 * @return {!proto.gauge.messages.StepExecutionEndingRequest} returns this
*/
proto.gauge.messages.StepExecutionEndingRequest.prototype.setCurrentexecutioninfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.StepExecutionEndingRequest} returns this
 */
proto.gauge.messages.StepExecutionEndingRequest.prototype.clearCurrentexecutioninfo = function() {
  return this.setCurrentexecutioninfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.StepExecutionEndingRequest.prototype.hasCurrentexecutioninfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ProtoStepResult stepResult = 2;
 * @return {?proto.gauge.messages.ProtoStepResult}
 */
proto.gauge.messages.StepExecutionEndingRequest.prototype.getStepresult = function() {
  return /** @type{?proto.gauge.messages.ProtoStepResult} */ (
    jspb.Message.getWrapperField(this, spec_pb.ProtoStepResult, 2));
};


/**
 * @param {?proto.gauge.messages.ProtoStepResult|undefined} value
 * @return {!proto.gauge.messages.StepExecutionEndingRequest} returns this
*/
proto.gauge.messages.StepExecutionEndingRequest.prototype.setStepresult = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.StepExecutionEndingRequest} returns this
 */
proto.gauge.messages.StepExecutionEndingRequest.prototype.clearStepresult = function() {
  return this.setStepresult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.StepExecutionEndingRequest.prototype.hasStepresult = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 stream = 3;
 * @return {number}
 */
proto.gauge.messages.StepExecutionEndingRequest.prototype.getStream = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.gauge.messages.StepExecutionEndingRequest} returns this
 */
proto.gauge.messages.StepExecutionEndingRequest.prototype.setStream = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gauge.messages.ExecutionArg.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.ExecutionArg.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.ExecutionArg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.ExecutionArg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ExecutionArg.toObject = function(includeInstance, msg) {
  var f, obj = {
    flagname: jspb.Message.getFieldWithDefault(msg, 1, ""),
    flagvalueList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.ExecutionArg}
 */
proto.gauge.messages.ExecutionArg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.ExecutionArg;
  return proto.gauge.messages.ExecutionArg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.ExecutionArg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.ExecutionArg}
 */
proto.gauge.messages.ExecutionArg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFlagname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addFlagvalue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.ExecutionArg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.ExecutionArg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.ExecutionArg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ExecutionArg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFlagname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFlagvalueList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional string flagName = 1;
 * @return {string}
 */
proto.gauge.messages.ExecutionArg.prototype.getFlagname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.ExecutionArg} returns this
 */
proto.gauge.messages.ExecutionArg.prototype.setFlagname = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string flagValue = 2;
 * @return {!Array<string>}
 */
proto.gauge.messages.ExecutionArg.prototype.getFlagvalueList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gauge.messages.ExecutionArg} returns this
 */
proto.gauge.messages.ExecutionArg.prototype.setFlagvalueList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ExecutionArg} returns this
 */
proto.gauge.messages.ExecutionArg.prototype.addFlagvalue = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ExecutionArg} returns this
 */
proto.gauge.messages.ExecutionArg.prototype.clearFlagvalueList = function() {
  return this.setFlagvalueList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gauge.messages.ExecutionInfo.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.ExecutionInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.ExecutionInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.ExecutionInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ExecutionInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    currentspec: (f = msg.getCurrentspec()) && proto.gauge.messages.SpecInfo.toObject(includeInstance, f),
    currentscenario: (f = msg.getCurrentscenario()) && proto.gauge.messages.ScenarioInfo.toObject(includeInstance, f),
    currentstep: (f = msg.getCurrentstep()) && proto.gauge.messages.StepInfo.toObject(includeInstance, f),
    stacktrace: jspb.Message.getFieldWithDefault(msg, 4, ""),
    projectname: jspb.Message.getFieldWithDefault(msg, 5, ""),
    executionargsList: jspb.Message.toObjectList(msg.getExecutionargsList(),
    proto.gauge.messages.ExecutionArg.toObject, includeInstance),
    numberofexecutionstreams: jspb.Message.getFieldWithDefault(msg, 7, 0),
    runnerid: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.ExecutionInfo}
 */
proto.gauge.messages.ExecutionInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.ExecutionInfo;
  return proto.gauge.messages.ExecutionInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.ExecutionInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.ExecutionInfo}
 */
proto.gauge.messages.ExecutionInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gauge.messages.SpecInfo;
      reader.readMessage(value,proto.gauge.messages.SpecInfo.deserializeBinaryFromReader);
      msg.setCurrentspec(value);
      break;
    case 2:
      var value = new proto.gauge.messages.ScenarioInfo;
      reader.readMessage(value,proto.gauge.messages.ScenarioInfo.deserializeBinaryFromReader);
      msg.setCurrentscenario(value);
      break;
    case 3:
      var value = new proto.gauge.messages.StepInfo;
      reader.readMessage(value,proto.gauge.messages.StepInfo.deserializeBinaryFromReader);
      msg.setCurrentstep(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setStacktrace(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectname(value);
      break;
    case 6:
      var value = new proto.gauge.messages.ExecutionArg;
      reader.readMessage(value,proto.gauge.messages.ExecutionArg.deserializeBinaryFromReader);
      msg.addExecutionargs(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumberofexecutionstreams(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRunnerid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.ExecutionInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.ExecutionInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.ExecutionInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ExecutionInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrentspec();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gauge.messages.SpecInfo.serializeBinaryToWriter
    );
  }
  f = message.getCurrentscenario();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gauge.messages.ScenarioInfo.serializeBinaryToWriter
    );
  }
  f = message.getCurrentstep();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.gauge.messages.StepInfo.serializeBinaryToWriter
    );
  }
  f = message.getStacktrace();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getProjectname();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getExecutionargsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.gauge.messages.ExecutionArg.serializeBinaryToWriter
    );
  }
  f = message.getNumberofexecutionstreams();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getRunnerid();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
};


/**
 * optional SpecInfo currentSpec = 1;
 * @return {?proto.gauge.messages.SpecInfo}
 */
proto.gauge.messages.ExecutionInfo.prototype.getCurrentspec = function() {
  return /** @type{?proto.gauge.messages.SpecInfo} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.SpecInfo, 1));
};


/**
 * @param {?proto.gauge.messages.SpecInfo|undefined} value
 * @return {!proto.gauge.messages.ExecutionInfo} returns this
*/
proto.gauge.messages.ExecutionInfo.prototype.setCurrentspec = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.ExecutionInfo} returns this
 */
proto.gauge.messages.ExecutionInfo.prototype.clearCurrentspec = function() {
  return this.setCurrentspec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.ExecutionInfo.prototype.hasCurrentspec = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ScenarioInfo currentScenario = 2;
 * @return {?proto.gauge.messages.ScenarioInfo}
 */
proto.gauge.messages.ExecutionInfo.prototype.getCurrentscenario = function() {
  return /** @type{?proto.gauge.messages.ScenarioInfo} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.ScenarioInfo, 2));
};


/**
 * @param {?proto.gauge.messages.ScenarioInfo|undefined} value
 * @return {!proto.gauge.messages.ExecutionInfo} returns this
*/
proto.gauge.messages.ExecutionInfo.prototype.setCurrentscenario = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.ExecutionInfo} returns this
 */
proto.gauge.messages.ExecutionInfo.prototype.clearCurrentscenario = function() {
  return this.setCurrentscenario(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.ExecutionInfo.prototype.hasCurrentscenario = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional StepInfo currentStep = 3;
 * @return {?proto.gauge.messages.StepInfo}
 */
proto.gauge.messages.ExecutionInfo.prototype.getCurrentstep = function() {
  return /** @type{?proto.gauge.messages.StepInfo} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.StepInfo, 3));
};


/**
 * @param {?proto.gauge.messages.StepInfo|undefined} value
 * @return {!proto.gauge.messages.ExecutionInfo} returns this
*/
proto.gauge.messages.ExecutionInfo.prototype.setCurrentstep = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.ExecutionInfo} returns this
 */
proto.gauge.messages.ExecutionInfo.prototype.clearCurrentstep = function() {
  return this.setCurrentstep(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.ExecutionInfo.prototype.hasCurrentstep = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string stacktrace = 4;
 * @return {string}
 */
proto.gauge.messages.ExecutionInfo.prototype.getStacktrace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.ExecutionInfo} returns this
 */
proto.gauge.messages.ExecutionInfo.prototype.setStacktrace = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string projectName = 5;
 * @return {string}
 */
proto.gauge.messages.ExecutionInfo.prototype.getProjectname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.ExecutionInfo} returns this
 */
proto.gauge.messages.ExecutionInfo.prototype.setProjectname = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated ExecutionArg ExecutionArgs = 6;
 * @return {!Array<!proto.gauge.messages.ExecutionArg>}
 */
proto.gauge.messages.ExecutionInfo.prototype.getExecutionargsList = function() {
  return /** @type{!Array<!proto.gauge.messages.ExecutionArg>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gauge.messages.ExecutionArg, 6));
};


/**
 * @param {!Array<!proto.gauge.messages.ExecutionArg>} value
 * @return {!proto.gauge.messages.ExecutionInfo} returns this
*/
proto.gauge.messages.ExecutionInfo.prototype.setExecutionargsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.gauge.messages.ExecutionArg=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ExecutionArg}
 */
proto.gauge.messages.ExecutionInfo.prototype.addExecutionargs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.gauge.messages.ExecutionArg, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ExecutionInfo} returns this
 */
proto.gauge.messages.ExecutionInfo.prototype.clearExecutionargsList = function() {
  return this.setExecutionargsList([]);
};


/**
 * optional int32 numberOfExecutionStreams = 7;
 * @return {number}
 */
proto.gauge.messages.ExecutionInfo.prototype.getNumberofexecutionstreams = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.gauge.messages.ExecutionInfo} returns this
 */
proto.gauge.messages.ExecutionInfo.prototype.setNumberofexecutionstreams = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 runnerId = 8;
 * @return {number}
 */
proto.gauge.messages.ExecutionInfo.prototype.getRunnerid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.gauge.messages.ExecutionInfo} returns this
 */
proto.gauge.messages.ExecutionInfo.prototype.setRunnerid = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gauge.messages.SpecInfo.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.SpecInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.SpecInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.SpecInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.SpecInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    filename: jspb.Message.getFieldWithDefault(msg, 2, ""),
    isfailed: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    tagsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.SpecInfo}
 */
proto.gauge.messages.SpecInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.SpecInfo;
  return proto.gauge.messages.SpecInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.SpecInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.SpecInfo}
 */
proto.gauge.messages.SpecInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilename(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsfailed(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.SpecInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.SpecInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.SpecInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.SpecInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFilename();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIsfailed();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.gauge.messages.SpecInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.SpecInfo} returns this
 */
proto.gauge.messages.SpecInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string fileName = 2;
 * @return {string}
 */
proto.gauge.messages.SpecInfo.prototype.getFilename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.SpecInfo} returns this
 */
proto.gauge.messages.SpecInfo.prototype.setFilename = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool isFailed = 3;
 * @return {boolean}
 */
proto.gauge.messages.SpecInfo.prototype.getIsfailed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gauge.messages.SpecInfo} returns this
 */
proto.gauge.messages.SpecInfo.prototype.setIsfailed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * repeated string tags = 4;
 * @return {!Array<string>}
 */
proto.gauge.messages.SpecInfo.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gauge.messages.SpecInfo} returns this
 */
proto.gauge.messages.SpecInfo.prototype.setTagsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.SpecInfo} returns this
 */
proto.gauge.messages.SpecInfo.prototype.addTags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.SpecInfo} returns this
 */
proto.gauge.messages.SpecInfo.prototype.clearTagsList = function() {
  return this.setTagsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gauge.messages.ScenarioInfo.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.ScenarioInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.ScenarioInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.ScenarioInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ScenarioInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    isfailed: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    tagsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.ScenarioInfo}
 */
proto.gauge.messages.ScenarioInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.ScenarioInfo;
  return proto.gauge.messages.ScenarioInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.ScenarioInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.ScenarioInfo}
 */
proto.gauge.messages.ScenarioInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsfailed(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.ScenarioInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.ScenarioInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.ScenarioInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ScenarioInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIsfailed();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.gauge.messages.ScenarioInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.ScenarioInfo} returns this
 */
proto.gauge.messages.ScenarioInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool isFailed = 2;
 * @return {boolean}
 */
proto.gauge.messages.ScenarioInfo.prototype.getIsfailed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gauge.messages.ScenarioInfo} returns this
 */
proto.gauge.messages.ScenarioInfo.prototype.setIsfailed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * repeated string tags = 3;
 * @return {!Array<string>}
 */
proto.gauge.messages.ScenarioInfo.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gauge.messages.ScenarioInfo} returns this
 */
proto.gauge.messages.ScenarioInfo.prototype.setTagsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ScenarioInfo} returns this
 */
proto.gauge.messages.ScenarioInfo.prototype.addTags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ScenarioInfo} returns this
 */
proto.gauge.messages.ScenarioInfo.prototype.clearTagsList = function() {
  return this.setTagsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.StepInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.StepInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.StepInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.StepInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    step: (f = msg.getStep()) && proto.gauge.messages.ExecuteStepRequest.toObject(includeInstance, f),
    isfailed: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    stacktrace: jspb.Message.getFieldWithDefault(msg, 3, ""),
    errormessage: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.StepInfo}
 */
proto.gauge.messages.StepInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.StepInfo;
  return proto.gauge.messages.StepInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.StepInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.StepInfo}
 */
proto.gauge.messages.StepInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gauge.messages.ExecuteStepRequest;
      reader.readMessage(value,proto.gauge.messages.ExecuteStepRequest.deserializeBinaryFromReader);
      msg.setStep(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsfailed(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStacktrace(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrormessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.StepInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.StepInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.StepInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.StepInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStep();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gauge.messages.ExecuteStepRequest.serializeBinaryToWriter
    );
  }
  f = message.getIsfailed();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getStacktrace();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getErrormessage();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional ExecuteStepRequest step = 1;
 * @return {?proto.gauge.messages.ExecuteStepRequest}
 */
proto.gauge.messages.StepInfo.prototype.getStep = function() {
  return /** @type{?proto.gauge.messages.ExecuteStepRequest} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.ExecuteStepRequest, 1));
};


/**
 * @param {?proto.gauge.messages.ExecuteStepRequest|undefined} value
 * @return {!proto.gauge.messages.StepInfo} returns this
*/
proto.gauge.messages.StepInfo.prototype.setStep = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.StepInfo} returns this
 */
proto.gauge.messages.StepInfo.prototype.clearStep = function() {
  return this.setStep(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.StepInfo.prototype.hasStep = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool isFailed = 2;
 * @return {boolean}
 */
proto.gauge.messages.StepInfo.prototype.getIsfailed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gauge.messages.StepInfo} returns this
 */
proto.gauge.messages.StepInfo.prototype.setIsfailed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string stackTrace = 3;
 * @return {string}
 */
proto.gauge.messages.StepInfo.prototype.getStacktrace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.StepInfo} returns this
 */
proto.gauge.messages.StepInfo.prototype.setStacktrace = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string errorMessage = 4;
 * @return {string}
 */
proto.gauge.messages.StepInfo.prototype.getErrormessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.StepInfo} returns this
 */
proto.gauge.messages.StepInfo.prototype.setErrormessage = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gauge.messages.ExecuteStepRequest.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.ExecuteStepRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.ExecuteStepRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.ExecuteStepRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ExecuteStepRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    actualsteptext: jspb.Message.getFieldWithDefault(msg, 1, ""),
    parsedsteptext: jspb.Message.getFieldWithDefault(msg, 2, ""),
    scenariofailing: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    parametersList: jspb.Message.toObjectList(msg.getParametersList(),
    spec_pb.Parameter.toObject, includeInstance),
    stream: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.ExecuteStepRequest}
 */
proto.gauge.messages.ExecuteStepRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.ExecuteStepRequest;
  return proto.gauge.messages.ExecuteStepRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.ExecuteStepRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.ExecuteStepRequest}
 */
proto.gauge.messages.ExecuteStepRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setActualsteptext(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setParsedsteptext(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setScenariofailing(value);
      break;
    case 4:
      var value = new spec_pb.Parameter;
      reader.readMessage(value,spec_pb.Parameter.deserializeBinaryFromReader);
      msg.addParameters(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStream(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.ExecuteStepRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.ExecuteStepRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.ExecuteStepRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ExecuteStepRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActualsteptext();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getParsedsteptext();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getScenariofailing();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getParametersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      spec_pb.Parameter.serializeBinaryToWriter
    );
  }
  f = message.getStream();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional string actualStepText = 1;
 * @return {string}
 */
proto.gauge.messages.ExecuteStepRequest.prototype.getActualsteptext = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.ExecuteStepRequest} returns this
 */
proto.gauge.messages.ExecuteStepRequest.prototype.setActualsteptext = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string parsedStepText = 2;
 * @return {string}
 */
proto.gauge.messages.ExecuteStepRequest.prototype.getParsedsteptext = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.ExecuteStepRequest} returns this
 */
proto.gauge.messages.ExecuteStepRequest.prototype.setParsedsteptext = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool scenarioFailing = 3;
 * @return {boolean}
 */
proto.gauge.messages.ExecuteStepRequest.prototype.getScenariofailing = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gauge.messages.ExecuteStepRequest} returns this
 */
proto.gauge.messages.ExecuteStepRequest.prototype.setScenariofailing = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * repeated Parameter parameters = 4;
 * @return {!Array<!proto.gauge.messages.Parameter>}
 */
proto.gauge.messages.ExecuteStepRequest.prototype.getParametersList = function() {
  return /** @type{!Array<!proto.gauge.messages.Parameter>} */ (
    jspb.Message.getRepeatedWrapperField(this, spec_pb.Parameter, 4));
};


/**
 * @param {!Array<!proto.gauge.messages.Parameter>} value
 * @return {!proto.gauge.messages.ExecuteStepRequest} returns this
*/
proto.gauge.messages.ExecuteStepRequest.prototype.setParametersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.gauge.messages.Parameter=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.Parameter}
 */
proto.gauge.messages.ExecuteStepRequest.prototype.addParameters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.gauge.messages.Parameter, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ExecuteStepRequest} returns this
 */
proto.gauge.messages.ExecuteStepRequest.prototype.clearParametersList = function() {
  return this.setParametersList([]);
};


/**
 * optional int32 stream = 5;
 * @return {number}
 */
proto.gauge.messages.ExecuteStepRequest.prototype.getStream = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.gauge.messages.ExecuteStepRequest} returns this
 */
proto.gauge.messages.ExecuteStepRequest.prototype.setStream = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.StepValidateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.StepValidateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.StepValidateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.StepValidateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    steptext: jspb.Message.getFieldWithDefault(msg, 1, ""),
    numberofparameters: jspb.Message.getFieldWithDefault(msg, 2, 0),
    stepvalue: (f = msg.getStepvalue()) && spec_pb.ProtoStepValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.StepValidateRequest}
 */
proto.gauge.messages.StepValidateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.StepValidateRequest;
  return proto.gauge.messages.StepValidateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.StepValidateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.StepValidateRequest}
 */
proto.gauge.messages.StepValidateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSteptext(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumberofparameters(value);
      break;
    case 3:
      var value = new spec_pb.ProtoStepValue;
      reader.readMessage(value,spec_pb.ProtoStepValue.deserializeBinaryFromReader);
      msg.setStepvalue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.StepValidateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.StepValidateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.StepValidateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.StepValidateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSteptext();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNumberofparameters();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getStepvalue();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      spec_pb.ProtoStepValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional string stepText = 1;
 * @return {string}
 */
proto.gauge.messages.StepValidateRequest.prototype.getSteptext = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.StepValidateRequest} returns this
 */
proto.gauge.messages.StepValidateRequest.prototype.setSteptext = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 numberOfParameters = 2;
 * @return {number}
 */
proto.gauge.messages.StepValidateRequest.prototype.getNumberofparameters = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.gauge.messages.StepValidateRequest} returns this
 */
proto.gauge.messages.StepValidateRequest.prototype.setNumberofparameters = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional ProtoStepValue stepValue = 3;
 * @return {?proto.gauge.messages.ProtoStepValue}
 */
proto.gauge.messages.StepValidateRequest.prototype.getStepvalue = function() {
  return /** @type{?proto.gauge.messages.ProtoStepValue} */ (
    jspb.Message.getWrapperField(this, spec_pb.ProtoStepValue, 3));
};


/**
 * @param {?proto.gauge.messages.ProtoStepValue|undefined} value
 * @return {!proto.gauge.messages.StepValidateRequest} returns this
*/
proto.gauge.messages.StepValidateRequest.prototype.setStepvalue = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.StepValidateRequest} returns this
 */
proto.gauge.messages.StepValidateRequest.prototype.clearStepvalue = function() {
  return this.setStepvalue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.StepValidateRequest.prototype.hasStepvalue = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.StepValidateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.StepValidateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.StepValidateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.StepValidateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    isvalid: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    errormessage: jspb.Message.getFieldWithDefault(msg, 2, ""),
    errortype: jspb.Message.getFieldWithDefault(msg, 3, 0),
    suggestion: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.StepValidateResponse}
 */
proto.gauge.messages.StepValidateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.StepValidateResponse;
  return proto.gauge.messages.StepValidateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.StepValidateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.StepValidateResponse}
 */
proto.gauge.messages.StepValidateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsvalid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrormessage(value);
      break;
    case 3:
      var value = /** @type {!proto.gauge.messages.StepValidateResponse.ErrorType} */ (reader.readEnum());
      msg.setErrortype(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSuggestion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.StepValidateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.StepValidateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.StepValidateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.StepValidateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIsvalid();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getErrormessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getErrortype();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getSuggestion();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.gauge.messages.StepValidateResponse.ErrorType = {
  STEP_IMPLEMENTATION_NOT_FOUND: 0,
  DUPLICATE_STEP_IMPLEMENTATION: 1
};

/**
 * optional bool isValid = 1;
 * @return {boolean}
 */
proto.gauge.messages.StepValidateResponse.prototype.getIsvalid = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gauge.messages.StepValidateResponse} returns this
 */
proto.gauge.messages.StepValidateResponse.prototype.setIsvalid = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string errorMessage = 2;
 * @return {string}
 */
proto.gauge.messages.StepValidateResponse.prototype.getErrormessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.StepValidateResponse} returns this
 */
proto.gauge.messages.StepValidateResponse.prototype.setErrormessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional ErrorType errorType = 3;
 * @return {!proto.gauge.messages.StepValidateResponse.ErrorType}
 */
proto.gauge.messages.StepValidateResponse.prototype.getErrortype = function() {
  return /** @type {!proto.gauge.messages.StepValidateResponse.ErrorType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.gauge.messages.StepValidateResponse.ErrorType} value
 * @return {!proto.gauge.messages.StepValidateResponse} returns this
 */
proto.gauge.messages.StepValidateResponse.prototype.setErrortype = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string suggestion = 4;
 * @return {string}
 */
proto.gauge.messages.StepValidateResponse.prototype.getSuggestion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.StepValidateResponse} returns this
 */
proto.gauge.messages.StepValidateResponse.prototype.setSuggestion = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.SuiteExecutionResult.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.SuiteExecutionResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.SuiteExecutionResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.SuiteExecutionResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    suiteresult: (f = msg.getSuiteresult()) && spec_pb.ProtoSuiteResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.SuiteExecutionResult}
 */
proto.gauge.messages.SuiteExecutionResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.SuiteExecutionResult;
  return proto.gauge.messages.SuiteExecutionResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.SuiteExecutionResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.SuiteExecutionResult}
 */
proto.gauge.messages.SuiteExecutionResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new spec_pb.ProtoSuiteResult;
      reader.readMessage(value,spec_pb.ProtoSuiteResult.deserializeBinaryFromReader);
      msg.setSuiteresult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.SuiteExecutionResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.SuiteExecutionResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.SuiteExecutionResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.SuiteExecutionResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuiteresult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      spec_pb.ProtoSuiteResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional ProtoSuiteResult suiteResult = 1;
 * @return {?proto.gauge.messages.ProtoSuiteResult}
 */
proto.gauge.messages.SuiteExecutionResult.prototype.getSuiteresult = function() {
  return /** @type{?proto.gauge.messages.ProtoSuiteResult} */ (
    jspb.Message.getWrapperField(this, spec_pb.ProtoSuiteResult, 1));
};


/**
 * @param {?proto.gauge.messages.ProtoSuiteResult|undefined} value
 * @return {!proto.gauge.messages.SuiteExecutionResult} returns this
*/
proto.gauge.messages.SuiteExecutionResult.prototype.setSuiteresult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.SuiteExecutionResult} returns this
 */
proto.gauge.messages.SuiteExecutionResult.prototype.clearSuiteresult = function() {
  return this.setSuiteresult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.SuiteExecutionResult.prototype.hasSuiteresult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.SuiteExecutionResultItem.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.SuiteExecutionResultItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.SuiteExecutionResultItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.SuiteExecutionResultItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultitem: (f = msg.getResultitem()) && spec_pb.ProtoItem.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.SuiteExecutionResultItem}
 */
proto.gauge.messages.SuiteExecutionResultItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.SuiteExecutionResultItem;
  return proto.gauge.messages.SuiteExecutionResultItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.SuiteExecutionResultItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.SuiteExecutionResultItem}
 */
proto.gauge.messages.SuiteExecutionResultItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new spec_pb.ProtoItem;
      reader.readMessage(value,spec_pb.ProtoItem.deserializeBinaryFromReader);
      msg.setResultitem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.SuiteExecutionResultItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.SuiteExecutionResultItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.SuiteExecutionResultItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.SuiteExecutionResultItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultitem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      spec_pb.ProtoItem.serializeBinaryToWriter
    );
  }
};


/**
 * optional ProtoItem resultItem = 1;
 * @return {?proto.gauge.messages.ProtoItem}
 */
proto.gauge.messages.SuiteExecutionResultItem.prototype.getResultitem = function() {
  return /** @type{?proto.gauge.messages.ProtoItem} */ (
    jspb.Message.getWrapperField(this, spec_pb.ProtoItem, 1));
};


/**
 * @param {?proto.gauge.messages.ProtoItem|undefined} value
 * @return {!proto.gauge.messages.SuiteExecutionResultItem} returns this
*/
proto.gauge.messages.SuiteExecutionResultItem.prototype.setResultitem = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.SuiteExecutionResultItem} returns this
 */
proto.gauge.messages.SuiteExecutionResultItem.prototype.clearResultitem = function() {
  return this.setResultitem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.SuiteExecutionResultItem.prototype.hasResultitem = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.StepNamesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.StepNamesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.StepNamesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.StepNamesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.StepNamesRequest}
 */
proto.gauge.messages.StepNamesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.StepNamesRequest;
  return proto.gauge.messages.StepNamesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.StepNamesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.StepNamesRequest}
 */
proto.gauge.messages.StepNamesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.StepNamesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.StepNamesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.StepNamesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.StepNamesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gauge.messages.StepNamesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.StepNamesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.StepNamesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.StepNamesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.StepNamesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    stepsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.StepNamesResponse}
 */
proto.gauge.messages.StepNamesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.StepNamesResponse;
  return proto.gauge.messages.StepNamesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.StepNamesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.StepNamesResponse}
 */
proto.gauge.messages.StepNamesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addSteps(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.StepNamesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.StepNamesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.StepNamesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.StepNamesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStepsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string steps = 1;
 * @return {!Array<string>}
 */
proto.gauge.messages.StepNamesResponse.prototype.getStepsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gauge.messages.StepNamesResponse} returns this
 */
proto.gauge.messages.StepNamesResponse.prototype.setStepsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.StepNamesResponse} returns this
 */
proto.gauge.messages.StepNamesResponse.prototype.addSteps = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.StepNamesResponse} returns this
 */
proto.gauge.messages.StepNamesResponse.prototype.clearStepsList = function() {
  return this.setStepsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.ScenarioDataStoreInitRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.ScenarioDataStoreInitRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.ScenarioDataStoreInitRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ScenarioDataStoreInitRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    stream: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.ScenarioDataStoreInitRequest}
 */
proto.gauge.messages.ScenarioDataStoreInitRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.ScenarioDataStoreInitRequest;
  return proto.gauge.messages.ScenarioDataStoreInitRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.ScenarioDataStoreInitRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.ScenarioDataStoreInitRequest}
 */
proto.gauge.messages.ScenarioDataStoreInitRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStream(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.ScenarioDataStoreInitRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.ScenarioDataStoreInitRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.ScenarioDataStoreInitRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ScenarioDataStoreInitRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStream();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 stream = 1;
 * @return {number}
 */
proto.gauge.messages.ScenarioDataStoreInitRequest.prototype.getStream = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.gauge.messages.ScenarioDataStoreInitRequest} returns this
 */
proto.gauge.messages.ScenarioDataStoreInitRequest.prototype.setStream = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.SpecDataStoreInitRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.SpecDataStoreInitRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.SpecDataStoreInitRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.SpecDataStoreInitRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    stream: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.SpecDataStoreInitRequest}
 */
proto.gauge.messages.SpecDataStoreInitRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.SpecDataStoreInitRequest;
  return proto.gauge.messages.SpecDataStoreInitRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.SpecDataStoreInitRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.SpecDataStoreInitRequest}
 */
proto.gauge.messages.SpecDataStoreInitRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStream(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.SpecDataStoreInitRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.SpecDataStoreInitRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.SpecDataStoreInitRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.SpecDataStoreInitRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStream();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 stream = 1;
 * @return {number}
 */
proto.gauge.messages.SpecDataStoreInitRequest.prototype.getStream = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.gauge.messages.SpecDataStoreInitRequest} returns this
 */
proto.gauge.messages.SpecDataStoreInitRequest.prototype.setStream = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.SuiteDataStoreInitRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.SuiteDataStoreInitRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.SuiteDataStoreInitRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.SuiteDataStoreInitRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    stream: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.SuiteDataStoreInitRequest}
 */
proto.gauge.messages.SuiteDataStoreInitRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.SuiteDataStoreInitRequest;
  return proto.gauge.messages.SuiteDataStoreInitRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.SuiteDataStoreInitRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.SuiteDataStoreInitRequest}
 */
proto.gauge.messages.SuiteDataStoreInitRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStream(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.SuiteDataStoreInitRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.SuiteDataStoreInitRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.SuiteDataStoreInitRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.SuiteDataStoreInitRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStream();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 stream = 1;
 * @return {number}
 */
proto.gauge.messages.SuiteDataStoreInitRequest.prototype.getStream = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.gauge.messages.SuiteDataStoreInitRequest} returns this
 */
proto.gauge.messages.SuiteDataStoreInitRequest.prototype.setStream = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.ParameterPosition.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.ParameterPosition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.ParameterPosition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ParameterPosition.toObject = function(includeInstance, msg) {
  var f, obj = {
    oldposition: jspb.Message.getFieldWithDefault(msg, 1, 0),
    newposition: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.ParameterPosition}
 */
proto.gauge.messages.ParameterPosition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.ParameterPosition;
  return proto.gauge.messages.ParameterPosition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.ParameterPosition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.ParameterPosition}
 */
proto.gauge.messages.ParameterPosition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOldposition(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNewposition(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.ParameterPosition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.ParameterPosition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.ParameterPosition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ParameterPosition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOldposition();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getNewposition();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 oldPosition = 1;
 * @return {number}
 */
proto.gauge.messages.ParameterPosition.prototype.getOldposition = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.gauge.messages.ParameterPosition} returns this
 */
proto.gauge.messages.ParameterPosition.prototype.setOldposition = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 newPosition = 2;
 * @return {number}
 */
proto.gauge.messages.ParameterPosition.prototype.getNewposition = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.gauge.messages.ParameterPosition} returns this
 */
proto.gauge.messages.ParameterPosition.prototype.setNewposition = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gauge.messages.RefactorRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.RefactorRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.RefactorRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.RefactorRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.RefactorRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    oldstepvalue: (f = msg.getOldstepvalue()) && spec_pb.ProtoStepValue.toObject(includeInstance, f),
    newstepvalue: (f = msg.getNewstepvalue()) && spec_pb.ProtoStepValue.toObject(includeInstance, f),
    parampositionsList: jspb.Message.toObjectList(msg.getParampositionsList(),
    proto.gauge.messages.ParameterPosition.toObject, includeInstance),
    savechanges: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.RefactorRequest}
 */
proto.gauge.messages.RefactorRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.RefactorRequest;
  return proto.gauge.messages.RefactorRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.RefactorRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.RefactorRequest}
 */
proto.gauge.messages.RefactorRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new spec_pb.ProtoStepValue;
      reader.readMessage(value,spec_pb.ProtoStepValue.deserializeBinaryFromReader);
      msg.setOldstepvalue(value);
      break;
    case 2:
      var value = new spec_pb.ProtoStepValue;
      reader.readMessage(value,spec_pb.ProtoStepValue.deserializeBinaryFromReader);
      msg.setNewstepvalue(value);
      break;
    case 3:
      var value = new proto.gauge.messages.ParameterPosition;
      reader.readMessage(value,proto.gauge.messages.ParameterPosition.deserializeBinaryFromReader);
      msg.addParampositions(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSavechanges(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.RefactorRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.RefactorRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.RefactorRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.RefactorRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOldstepvalue();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      spec_pb.ProtoStepValue.serializeBinaryToWriter
    );
  }
  f = message.getNewstepvalue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      spec_pb.ProtoStepValue.serializeBinaryToWriter
    );
  }
  f = message.getParampositionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.gauge.messages.ParameterPosition.serializeBinaryToWriter
    );
  }
  f = message.getSavechanges();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional ProtoStepValue oldStepValue = 1;
 * @return {?proto.gauge.messages.ProtoStepValue}
 */
proto.gauge.messages.RefactorRequest.prototype.getOldstepvalue = function() {
  return /** @type{?proto.gauge.messages.ProtoStepValue} */ (
    jspb.Message.getWrapperField(this, spec_pb.ProtoStepValue, 1));
};


/**
 * @param {?proto.gauge.messages.ProtoStepValue|undefined} value
 * @return {!proto.gauge.messages.RefactorRequest} returns this
*/
proto.gauge.messages.RefactorRequest.prototype.setOldstepvalue = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.RefactorRequest} returns this
 */
proto.gauge.messages.RefactorRequest.prototype.clearOldstepvalue = function() {
  return this.setOldstepvalue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.RefactorRequest.prototype.hasOldstepvalue = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ProtoStepValue newStepValue = 2;
 * @return {?proto.gauge.messages.ProtoStepValue}
 */
proto.gauge.messages.RefactorRequest.prototype.getNewstepvalue = function() {
  return /** @type{?proto.gauge.messages.ProtoStepValue} */ (
    jspb.Message.getWrapperField(this, spec_pb.ProtoStepValue, 2));
};


/**
 * @param {?proto.gauge.messages.ProtoStepValue|undefined} value
 * @return {!proto.gauge.messages.RefactorRequest} returns this
*/
proto.gauge.messages.RefactorRequest.prototype.setNewstepvalue = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.RefactorRequest} returns this
 */
proto.gauge.messages.RefactorRequest.prototype.clearNewstepvalue = function() {
  return this.setNewstepvalue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.RefactorRequest.prototype.hasNewstepvalue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated ParameterPosition paramPositions = 3;
 * @return {!Array<!proto.gauge.messages.ParameterPosition>}
 */
proto.gauge.messages.RefactorRequest.prototype.getParampositionsList = function() {
  return /** @type{!Array<!proto.gauge.messages.ParameterPosition>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gauge.messages.ParameterPosition, 3));
};


/**
 * @param {!Array<!proto.gauge.messages.ParameterPosition>} value
 * @return {!proto.gauge.messages.RefactorRequest} returns this
*/
proto.gauge.messages.RefactorRequest.prototype.setParampositionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.gauge.messages.ParameterPosition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ParameterPosition}
 */
proto.gauge.messages.RefactorRequest.prototype.addParampositions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.gauge.messages.ParameterPosition, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.RefactorRequest} returns this
 */
proto.gauge.messages.RefactorRequest.prototype.clearParampositionsList = function() {
  return this.setParampositionsList([]);
};


/**
 * optional bool saveChanges = 4;
 * @return {boolean}
 */
proto.gauge.messages.RefactorRequest.prototype.getSavechanges = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gauge.messages.RefactorRequest} returns this
 */
proto.gauge.messages.RefactorRequest.prototype.setSavechanges = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gauge.messages.FileChanges.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.FileChanges.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.FileChanges.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.FileChanges} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.FileChanges.toObject = function(includeInstance, msg) {
  var f, obj = {
    filename: jspb.Message.getFieldWithDefault(msg, 1, ""),
    filecontent: jspb.Message.getFieldWithDefault(msg, 2, ""),
    diffsList: jspb.Message.toObjectList(msg.getDiffsList(),
    proto.gauge.messages.TextDiff.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.FileChanges}
 */
proto.gauge.messages.FileChanges.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.FileChanges;
  return proto.gauge.messages.FileChanges.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.FileChanges} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.FileChanges}
 */
proto.gauge.messages.FileChanges.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilename(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilecontent(value);
      break;
    case 3:
      var value = new proto.gauge.messages.TextDiff;
      reader.readMessage(value,proto.gauge.messages.TextDiff.deserializeBinaryFromReader);
      msg.addDiffs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.FileChanges.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.FileChanges.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.FileChanges} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.FileChanges.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFilename();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFilecontent();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDiffsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.gauge.messages.TextDiff.serializeBinaryToWriter
    );
  }
};


/**
 * optional string fileName = 1;
 * @return {string}
 */
proto.gauge.messages.FileChanges.prototype.getFilename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.FileChanges} returns this
 */
proto.gauge.messages.FileChanges.prototype.setFilename = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string fileContent = 2;
 * @return {string}
 */
proto.gauge.messages.FileChanges.prototype.getFilecontent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.FileChanges} returns this
 */
proto.gauge.messages.FileChanges.prototype.setFilecontent = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated TextDiff diffs = 3;
 * @return {!Array<!proto.gauge.messages.TextDiff>}
 */
proto.gauge.messages.FileChanges.prototype.getDiffsList = function() {
  return /** @type{!Array<!proto.gauge.messages.TextDiff>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gauge.messages.TextDiff, 3));
};


/**
 * @param {!Array<!proto.gauge.messages.TextDiff>} value
 * @return {!proto.gauge.messages.FileChanges} returns this
*/
proto.gauge.messages.FileChanges.prototype.setDiffsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.gauge.messages.TextDiff=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.TextDiff}
 */
proto.gauge.messages.FileChanges.prototype.addDiffs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.gauge.messages.TextDiff, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.FileChanges} returns this
 */
proto.gauge.messages.FileChanges.prototype.clearDiffsList = function() {
  return this.setDiffsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gauge.messages.RefactorResponse.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.RefactorResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.RefactorResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.RefactorResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.RefactorResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    error: jspb.Message.getFieldWithDefault(msg, 2, ""),
    fileschangedList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    filechangesList: jspb.Message.toObjectList(msg.getFilechangesList(),
    proto.gauge.messages.FileChanges.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.RefactorResponse}
 */
proto.gauge.messages.RefactorResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.RefactorResponse;
  return proto.gauge.messages.RefactorResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.RefactorResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.RefactorResponse}
 */
proto.gauge.messages.RefactorResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addFileschanged(value);
      break;
    case 4:
      var value = new proto.gauge.messages.FileChanges;
      reader.readMessage(value,proto.gauge.messages.FileChanges.deserializeBinaryFromReader);
      msg.addFilechanges(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.RefactorResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.RefactorResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.RefactorResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.RefactorResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFileschangedList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getFilechangesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.gauge.messages.FileChanges.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.gauge.messages.RefactorResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gauge.messages.RefactorResponse} returns this
 */
proto.gauge.messages.RefactorResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string error = 2;
 * @return {string}
 */
proto.gauge.messages.RefactorResponse.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.RefactorResponse} returns this
 */
proto.gauge.messages.RefactorResponse.prototype.setError = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string filesChanged = 3;
 * @return {!Array<string>}
 */
proto.gauge.messages.RefactorResponse.prototype.getFileschangedList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gauge.messages.RefactorResponse} returns this
 */
proto.gauge.messages.RefactorResponse.prototype.setFileschangedList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.RefactorResponse} returns this
 */
proto.gauge.messages.RefactorResponse.prototype.addFileschanged = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.RefactorResponse} returns this
 */
proto.gauge.messages.RefactorResponse.prototype.clearFileschangedList = function() {
  return this.setFileschangedList([]);
};


/**
 * repeated FileChanges fileChanges = 4;
 * @return {!Array<!proto.gauge.messages.FileChanges>}
 */
proto.gauge.messages.RefactorResponse.prototype.getFilechangesList = function() {
  return /** @type{!Array<!proto.gauge.messages.FileChanges>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gauge.messages.FileChanges, 4));
};


/**
 * @param {!Array<!proto.gauge.messages.FileChanges>} value
 * @return {!proto.gauge.messages.RefactorResponse} returns this
*/
proto.gauge.messages.RefactorResponse.prototype.setFilechangesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.gauge.messages.FileChanges=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.FileChanges}
 */
proto.gauge.messages.RefactorResponse.prototype.addFilechanges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.gauge.messages.FileChanges, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.RefactorResponse} returns this
 */
proto.gauge.messages.RefactorResponse.prototype.clearFilechangesList = function() {
  return this.setFilechangesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.StepNameRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.StepNameRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.StepNameRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.StepNameRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    stepvalue: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.StepNameRequest}
 */
proto.gauge.messages.StepNameRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.StepNameRequest;
  return proto.gauge.messages.StepNameRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.StepNameRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.StepNameRequest}
 */
proto.gauge.messages.StepNameRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStepvalue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.StepNameRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.StepNameRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.StepNameRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.StepNameRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStepvalue();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string stepValue = 1;
 * @return {string}
 */
proto.gauge.messages.StepNameRequest.prototype.getStepvalue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.StepNameRequest} returns this
 */
proto.gauge.messages.StepNameRequest.prototype.setStepvalue = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gauge.messages.StepNameResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.StepNameResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.StepNameResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.StepNameResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.StepNameResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    issteppresent: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    stepnameList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    hasalias: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    filename: jspb.Message.getFieldWithDefault(msg, 4, ""),
    span: (f = msg.getSpan()) && spec_pb.Span.toObject(includeInstance, f),
    isexternal: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.StepNameResponse}
 */
proto.gauge.messages.StepNameResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.StepNameResponse;
  return proto.gauge.messages.StepNameResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.StepNameResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.StepNameResponse}
 */
proto.gauge.messages.StepNameResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIssteppresent(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addStepname(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasalias(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilename(value);
      break;
    case 5:
      var value = new spec_pb.Span;
      reader.readMessage(value,spec_pb.Span.deserializeBinaryFromReader);
      msg.setSpan(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsexternal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.StepNameResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.StepNameResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.StepNameResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.StepNameResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIssteppresent();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getStepnameList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getHasalias();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getFilename();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSpan();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      spec_pb.Span.serializeBinaryToWriter
    );
  }
  f = message.getIsexternal();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional bool isStepPresent = 1;
 * @return {boolean}
 */
proto.gauge.messages.StepNameResponse.prototype.getIssteppresent = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gauge.messages.StepNameResponse} returns this
 */
proto.gauge.messages.StepNameResponse.prototype.setIssteppresent = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * repeated string stepName = 2;
 * @return {!Array<string>}
 */
proto.gauge.messages.StepNameResponse.prototype.getStepnameList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gauge.messages.StepNameResponse} returns this
 */
proto.gauge.messages.StepNameResponse.prototype.setStepnameList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.StepNameResponse} returns this
 */
proto.gauge.messages.StepNameResponse.prototype.addStepname = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.StepNameResponse} returns this
 */
proto.gauge.messages.StepNameResponse.prototype.clearStepnameList = function() {
  return this.setStepnameList([]);
};


/**
 * optional bool hasAlias = 3;
 * @return {boolean}
 */
proto.gauge.messages.StepNameResponse.prototype.getHasalias = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gauge.messages.StepNameResponse} returns this
 */
proto.gauge.messages.StepNameResponse.prototype.setHasalias = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string fileName = 4;
 * @return {string}
 */
proto.gauge.messages.StepNameResponse.prototype.getFilename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.StepNameResponse} returns this
 */
proto.gauge.messages.StepNameResponse.prototype.setFilename = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional Span span = 5;
 * @return {?proto.gauge.messages.Span}
 */
proto.gauge.messages.StepNameResponse.prototype.getSpan = function() {
  return /** @type{?proto.gauge.messages.Span} */ (
    jspb.Message.getWrapperField(this, spec_pb.Span, 5));
};


/**
 * @param {?proto.gauge.messages.Span|undefined} value
 * @return {!proto.gauge.messages.StepNameResponse} returns this
*/
proto.gauge.messages.StepNameResponse.prototype.setSpan = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.StepNameResponse} returns this
 */
proto.gauge.messages.StepNameResponse.prototype.clearSpan = function() {
  return this.setSpan(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.StepNameResponse.prototype.hasSpan = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool isExternal = 6;
 * @return {boolean}
 */
proto.gauge.messages.StepNameResponse.prototype.getIsexternal = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gauge.messages.StepNameResponse} returns this
 */
proto.gauge.messages.StepNameResponse.prototype.setIsexternal = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.UnsupportedMessageResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.UnsupportedMessageResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.UnsupportedMessageResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.UnsupportedMessageResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.UnsupportedMessageResponse}
 */
proto.gauge.messages.UnsupportedMessageResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.UnsupportedMessageResponse;
  return proto.gauge.messages.UnsupportedMessageResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.UnsupportedMessageResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.UnsupportedMessageResponse}
 */
proto.gauge.messages.UnsupportedMessageResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.UnsupportedMessageResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.UnsupportedMessageResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.UnsupportedMessageResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.UnsupportedMessageResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.gauge.messages.UnsupportedMessageResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.UnsupportedMessageResponse} returns this
 */
proto.gauge.messages.UnsupportedMessageResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.CacheFileRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.CacheFileRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.CacheFileRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.CacheFileRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    content: jspb.Message.getFieldWithDefault(msg, 1, ""),
    filepath: jspb.Message.getFieldWithDefault(msg, 2, ""),
    isclosed: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    status: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.CacheFileRequest}
 */
proto.gauge.messages.CacheFileRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.CacheFileRequest;
  return proto.gauge.messages.CacheFileRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.CacheFileRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.CacheFileRequest}
 */
proto.gauge.messages.CacheFileRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilepath(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsclosed(value);
      break;
    case 4:
      var value = /** @type {!proto.gauge.messages.CacheFileRequest.FileStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.CacheFileRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.CacheFileRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.CacheFileRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.CacheFileRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFilepath();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIsclosed();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.gauge.messages.CacheFileRequest.FileStatus = {
  CHANGED: 0,
  CLOSED: 1,
  CREATED: 2,
  DELETED: 3,
  OPENED: 4
};

/**
 * optional string content = 1;
 * @return {string}
 */
proto.gauge.messages.CacheFileRequest.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.CacheFileRequest} returns this
 */
proto.gauge.messages.CacheFileRequest.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string filePath = 2;
 * @return {string}
 */
proto.gauge.messages.CacheFileRequest.prototype.getFilepath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.CacheFileRequest} returns this
 */
proto.gauge.messages.CacheFileRequest.prototype.setFilepath = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool isClosed = 3;
 * @return {boolean}
 */
proto.gauge.messages.CacheFileRequest.prototype.getIsclosed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gauge.messages.CacheFileRequest} returns this
 */
proto.gauge.messages.CacheFileRequest.prototype.setIsclosed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional FileStatus status = 4;
 * @return {!proto.gauge.messages.CacheFileRequest.FileStatus}
 */
proto.gauge.messages.CacheFileRequest.prototype.getStatus = function() {
  return /** @type {!proto.gauge.messages.CacheFileRequest.FileStatus} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.gauge.messages.CacheFileRequest.FileStatus} value
 * @return {!proto.gauge.messages.CacheFileRequest} returns this
 */
proto.gauge.messages.CacheFileRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.StepPositionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.StepPositionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.StepPositionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.StepPositionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    filepath: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.StepPositionsRequest}
 */
proto.gauge.messages.StepPositionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.StepPositionsRequest;
  return proto.gauge.messages.StepPositionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.StepPositionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.StepPositionsRequest}
 */
proto.gauge.messages.StepPositionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilepath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.StepPositionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.StepPositionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.StepPositionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.StepPositionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFilepath();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string filePath = 1;
 * @return {string}
 */
proto.gauge.messages.StepPositionsRequest.prototype.getFilepath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.StepPositionsRequest} returns this
 */
proto.gauge.messages.StepPositionsRequest.prototype.setFilepath = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gauge.messages.StepPositionsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.StepPositionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.StepPositionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.StepPositionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.StepPositionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    steppositionsList: jspb.Message.toObjectList(msg.getSteppositionsList(),
    proto.gauge.messages.StepPositionsResponse.StepPosition.toObject, includeInstance),
    error: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.StepPositionsResponse}
 */
proto.gauge.messages.StepPositionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.StepPositionsResponse;
  return proto.gauge.messages.StepPositionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.StepPositionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.StepPositionsResponse}
 */
proto.gauge.messages.StepPositionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gauge.messages.StepPositionsResponse.StepPosition;
      reader.readMessage(value,proto.gauge.messages.StepPositionsResponse.StepPosition.deserializeBinaryFromReader);
      msg.addSteppositions(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.StepPositionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.StepPositionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.StepPositionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.StepPositionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSteppositionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.gauge.messages.StepPositionsResponse.StepPosition.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.StepPositionsResponse.StepPosition.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.StepPositionsResponse.StepPosition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.StepPositionsResponse.StepPosition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.StepPositionsResponse.StepPosition.toObject = function(includeInstance, msg) {
  var f, obj = {
    stepvalue: jspb.Message.getFieldWithDefault(msg, 1, ""),
    span: (f = msg.getSpan()) && spec_pb.Span.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.StepPositionsResponse.StepPosition}
 */
proto.gauge.messages.StepPositionsResponse.StepPosition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.StepPositionsResponse.StepPosition;
  return proto.gauge.messages.StepPositionsResponse.StepPosition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.StepPositionsResponse.StepPosition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.StepPositionsResponse.StepPosition}
 */
proto.gauge.messages.StepPositionsResponse.StepPosition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStepvalue(value);
      break;
    case 2:
      var value = new spec_pb.Span;
      reader.readMessage(value,spec_pb.Span.deserializeBinaryFromReader);
      msg.setSpan(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.StepPositionsResponse.StepPosition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.StepPositionsResponse.StepPosition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.StepPositionsResponse.StepPosition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.StepPositionsResponse.StepPosition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStepvalue();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSpan();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      spec_pb.Span.serializeBinaryToWriter
    );
  }
};


/**
 * optional string stepValue = 1;
 * @return {string}
 */
proto.gauge.messages.StepPositionsResponse.StepPosition.prototype.getStepvalue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.StepPositionsResponse.StepPosition} returns this
 */
proto.gauge.messages.StepPositionsResponse.StepPosition.prototype.setStepvalue = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Span span = 2;
 * @return {?proto.gauge.messages.Span}
 */
proto.gauge.messages.StepPositionsResponse.StepPosition.prototype.getSpan = function() {
  return /** @type{?proto.gauge.messages.Span} */ (
    jspb.Message.getWrapperField(this, spec_pb.Span, 2));
};


/**
 * @param {?proto.gauge.messages.Span|undefined} value
 * @return {!proto.gauge.messages.StepPositionsResponse.StepPosition} returns this
*/
proto.gauge.messages.StepPositionsResponse.StepPosition.prototype.setSpan = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.StepPositionsResponse.StepPosition} returns this
 */
proto.gauge.messages.StepPositionsResponse.StepPosition.prototype.clearSpan = function() {
  return this.setSpan(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.StepPositionsResponse.StepPosition.prototype.hasSpan = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated StepPosition stepPositions = 1;
 * @return {!Array<!proto.gauge.messages.StepPositionsResponse.StepPosition>}
 */
proto.gauge.messages.StepPositionsResponse.prototype.getSteppositionsList = function() {
  return /** @type{!Array<!proto.gauge.messages.StepPositionsResponse.StepPosition>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gauge.messages.StepPositionsResponse.StepPosition, 1));
};


/**
 * @param {!Array<!proto.gauge.messages.StepPositionsResponse.StepPosition>} value
 * @return {!proto.gauge.messages.StepPositionsResponse} returns this
*/
proto.gauge.messages.StepPositionsResponse.prototype.setSteppositionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.gauge.messages.StepPositionsResponse.StepPosition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.StepPositionsResponse.StepPosition}
 */
proto.gauge.messages.StepPositionsResponse.prototype.addSteppositions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.gauge.messages.StepPositionsResponse.StepPosition, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.StepPositionsResponse} returns this
 */
proto.gauge.messages.StepPositionsResponse.prototype.clearSteppositionsList = function() {
  return this.setSteppositionsList([]);
};


/**
 * optional string error = 2;
 * @return {string}
 */
proto.gauge.messages.StepPositionsResponse.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.StepPositionsResponse} returns this
 */
proto.gauge.messages.StepPositionsResponse.prototype.setError = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.ImplementationFileGlobPatternRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.ImplementationFileGlobPatternRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.ImplementationFileGlobPatternRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ImplementationFileGlobPatternRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.ImplementationFileGlobPatternRequest}
 */
proto.gauge.messages.ImplementationFileGlobPatternRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.ImplementationFileGlobPatternRequest;
  return proto.gauge.messages.ImplementationFileGlobPatternRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.ImplementationFileGlobPatternRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.ImplementationFileGlobPatternRequest}
 */
proto.gauge.messages.ImplementationFileGlobPatternRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.ImplementationFileGlobPatternRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.ImplementationFileGlobPatternRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.ImplementationFileGlobPatternRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ImplementationFileGlobPatternRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gauge.messages.ImplementationFileGlobPatternResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.ImplementationFileGlobPatternResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.ImplementationFileGlobPatternResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.ImplementationFileGlobPatternResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ImplementationFileGlobPatternResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    globpatternsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.ImplementationFileGlobPatternResponse}
 */
proto.gauge.messages.ImplementationFileGlobPatternResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.ImplementationFileGlobPatternResponse;
  return proto.gauge.messages.ImplementationFileGlobPatternResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.ImplementationFileGlobPatternResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.ImplementationFileGlobPatternResponse}
 */
proto.gauge.messages.ImplementationFileGlobPatternResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addGlobpatterns(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.ImplementationFileGlobPatternResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.ImplementationFileGlobPatternResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.ImplementationFileGlobPatternResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ImplementationFileGlobPatternResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGlobpatternsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string globPatterns = 1;
 * @return {!Array<string>}
 */
proto.gauge.messages.ImplementationFileGlobPatternResponse.prototype.getGlobpatternsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gauge.messages.ImplementationFileGlobPatternResponse} returns this
 */
proto.gauge.messages.ImplementationFileGlobPatternResponse.prototype.setGlobpatternsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ImplementationFileGlobPatternResponse} returns this
 */
proto.gauge.messages.ImplementationFileGlobPatternResponse.prototype.addGlobpatterns = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ImplementationFileGlobPatternResponse} returns this
 */
proto.gauge.messages.ImplementationFileGlobPatternResponse.prototype.clearGlobpatternsList = function() {
  return this.setGlobpatternsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.ImplementationFileListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.ImplementationFileListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.ImplementationFileListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ImplementationFileListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.ImplementationFileListRequest}
 */
proto.gauge.messages.ImplementationFileListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.ImplementationFileListRequest;
  return proto.gauge.messages.ImplementationFileListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.ImplementationFileListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.ImplementationFileListRequest}
 */
proto.gauge.messages.ImplementationFileListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.ImplementationFileListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.ImplementationFileListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.ImplementationFileListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ImplementationFileListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gauge.messages.ImplementationFileListResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.ImplementationFileListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.ImplementationFileListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.ImplementationFileListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ImplementationFileListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    implementationfilepathsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.ImplementationFileListResponse}
 */
proto.gauge.messages.ImplementationFileListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.ImplementationFileListResponse;
  return proto.gauge.messages.ImplementationFileListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.ImplementationFileListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.ImplementationFileListResponse}
 */
proto.gauge.messages.ImplementationFileListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addImplementationfilepaths(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.ImplementationFileListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.ImplementationFileListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.ImplementationFileListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ImplementationFileListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getImplementationfilepathsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string implementationFilePaths = 1;
 * @return {!Array<string>}
 */
proto.gauge.messages.ImplementationFileListResponse.prototype.getImplementationfilepathsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gauge.messages.ImplementationFileListResponse} returns this
 */
proto.gauge.messages.ImplementationFileListResponse.prototype.setImplementationfilepathsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ImplementationFileListResponse} returns this
 */
proto.gauge.messages.ImplementationFileListResponse.prototype.addImplementationfilepaths = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ImplementationFileListResponse} returns this
 */
proto.gauge.messages.ImplementationFileListResponse.prototype.clearImplementationfilepathsList = function() {
  return this.setImplementationfilepathsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gauge.messages.StubImplementationCodeRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.StubImplementationCodeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.StubImplementationCodeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.StubImplementationCodeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.StubImplementationCodeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    implementationfilepath: jspb.Message.getFieldWithDefault(msg, 1, ""),
    codesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.StubImplementationCodeRequest}
 */
proto.gauge.messages.StubImplementationCodeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.StubImplementationCodeRequest;
  return proto.gauge.messages.StubImplementationCodeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.StubImplementationCodeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.StubImplementationCodeRequest}
 */
proto.gauge.messages.StubImplementationCodeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setImplementationfilepath(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addCodes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.StubImplementationCodeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.StubImplementationCodeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.StubImplementationCodeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.StubImplementationCodeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getImplementationfilepath();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCodesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional string implementationFilePath = 1;
 * @return {string}
 */
proto.gauge.messages.StubImplementationCodeRequest.prototype.getImplementationfilepath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.StubImplementationCodeRequest} returns this
 */
proto.gauge.messages.StubImplementationCodeRequest.prototype.setImplementationfilepath = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string codes = 2;
 * @return {!Array<string>}
 */
proto.gauge.messages.StubImplementationCodeRequest.prototype.getCodesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gauge.messages.StubImplementationCodeRequest} returns this
 */
proto.gauge.messages.StubImplementationCodeRequest.prototype.setCodesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.StubImplementationCodeRequest} returns this
 */
proto.gauge.messages.StubImplementationCodeRequest.prototype.addCodes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.StubImplementationCodeRequest} returns this
 */
proto.gauge.messages.StubImplementationCodeRequest.prototype.clearCodesList = function() {
  return this.setCodesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.TextDiff.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.TextDiff.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.TextDiff} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.TextDiff.toObject = function(includeInstance, msg) {
  var f, obj = {
    span: (f = msg.getSpan()) && spec_pb.Span.toObject(includeInstance, f),
    content: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.TextDiff}
 */
proto.gauge.messages.TextDiff.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.TextDiff;
  return proto.gauge.messages.TextDiff.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.TextDiff} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.TextDiff}
 */
proto.gauge.messages.TextDiff.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new spec_pb.Span;
      reader.readMessage(value,spec_pb.Span.deserializeBinaryFromReader);
      msg.setSpan(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.TextDiff.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.TextDiff.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.TextDiff} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.TextDiff.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSpan();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      spec_pb.Span.serializeBinaryToWriter
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Span span = 1;
 * @return {?proto.gauge.messages.Span}
 */
proto.gauge.messages.TextDiff.prototype.getSpan = function() {
  return /** @type{?proto.gauge.messages.Span} */ (
    jspb.Message.getWrapperField(this, spec_pb.Span, 1));
};


/**
 * @param {?proto.gauge.messages.Span|undefined} value
 * @return {!proto.gauge.messages.TextDiff} returns this
*/
proto.gauge.messages.TextDiff.prototype.setSpan = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.TextDiff} returns this
 */
proto.gauge.messages.TextDiff.prototype.clearSpan = function() {
  return this.setSpan(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.TextDiff.prototype.hasSpan = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string content = 2;
 * @return {string}
 */
proto.gauge.messages.TextDiff.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.TextDiff} returns this
 */
proto.gauge.messages.TextDiff.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gauge.messages.FileDiff.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.FileDiff.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.FileDiff.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.FileDiff} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.FileDiff.toObject = function(includeInstance, msg) {
  var f, obj = {
    filepath: jspb.Message.getFieldWithDefault(msg, 1, ""),
    textdiffsList: jspb.Message.toObjectList(msg.getTextdiffsList(),
    proto.gauge.messages.TextDiff.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.FileDiff}
 */
proto.gauge.messages.FileDiff.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.FileDiff;
  return proto.gauge.messages.FileDiff.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.FileDiff} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.FileDiff}
 */
proto.gauge.messages.FileDiff.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilepath(value);
      break;
    case 2:
      var value = new proto.gauge.messages.TextDiff;
      reader.readMessage(value,proto.gauge.messages.TextDiff.deserializeBinaryFromReader);
      msg.addTextdiffs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.FileDiff.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.FileDiff.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.FileDiff} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.FileDiff.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFilepath();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTextdiffsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.gauge.messages.TextDiff.serializeBinaryToWriter
    );
  }
};


/**
 * optional string filePath = 1;
 * @return {string}
 */
proto.gauge.messages.FileDiff.prototype.getFilepath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.FileDiff} returns this
 */
proto.gauge.messages.FileDiff.prototype.setFilepath = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated TextDiff textDiffs = 2;
 * @return {!Array<!proto.gauge.messages.TextDiff>}
 */
proto.gauge.messages.FileDiff.prototype.getTextdiffsList = function() {
  return /** @type{!Array<!proto.gauge.messages.TextDiff>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gauge.messages.TextDiff, 2));
};


/**
 * @param {!Array<!proto.gauge.messages.TextDiff>} value
 * @return {!proto.gauge.messages.FileDiff} returns this
*/
proto.gauge.messages.FileDiff.prototype.setTextdiffsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.gauge.messages.TextDiff=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.TextDiff}
 */
proto.gauge.messages.FileDiff.prototype.addTextdiffs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.gauge.messages.TextDiff, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.FileDiff} returns this
 */
proto.gauge.messages.FileDiff.prototype.clearTextdiffsList = function() {
  return this.setTextdiffsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.KeepAlive.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.KeepAlive.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.KeepAlive} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.KeepAlive.toObject = function(includeInstance, msg) {
  var f, obj = {
    pluginid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.KeepAlive}
 */
proto.gauge.messages.KeepAlive.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.KeepAlive;
  return proto.gauge.messages.KeepAlive.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.KeepAlive} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.KeepAlive}
 */
proto.gauge.messages.KeepAlive.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPluginid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.KeepAlive.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.KeepAlive.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.KeepAlive} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.KeepAlive.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPluginid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string pluginId = 1;
 * @return {string}
 */
proto.gauge.messages.KeepAlive.prototype.getPluginid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.KeepAlive} returns this
 */
proto.gauge.messages.KeepAlive.prototype.setPluginid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gauge.messages.SpecDetails.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.SpecDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.SpecDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.SpecDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.SpecDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    detailsList: jspb.Message.toObjectList(msg.getDetailsList(),
    proto.gauge.messages.SpecDetails.SpecDetail.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.SpecDetails}
 */
proto.gauge.messages.SpecDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.SpecDetails;
  return proto.gauge.messages.SpecDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.SpecDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.SpecDetails}
 */
proto.gauge.messages.SpecDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gauge.messages.SpecDetails.SpecDetail;
      reader.readMessage(value,proto.gauge.messages.SpecDetails.SpecDetail.deserializeBinaryFromReader);
      msg.addDetails(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.SpecDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.SpecDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.SpecDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.SpecDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDetailsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.gauge.messages.SpecDetails.SpecDetail.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gauge.messages.SpecDetails.SpecDetail.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.SpecDetails.SpecDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.SpecDetails.SpecDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.SpecDetails.SpecDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.SpecDetails.SpecDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    spec: (f = msg.getSpec()) && spec_pb.ProtoSpec.toObject(includeInstance, f),
    parseerrorsList: jspb.Message.toObjectList(msg.getParseerrorsList(),
    spec_pb.Error.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.SpecDetails.SpecDetail}
 */
proto.gauge.messages.SpecDetails.SpecDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.SpecDetails.SpecDetail;
  return proto.gauge.messages.SpecDetails.SpecDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.SpecDetails.SpecDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.SpecDetails.SpecDetail}
 */
proto.gauge.messages.SpecDetails.SpecDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new spec_pb.ProtoSpec;
      reader.readMessage(value,spec_pb.ProtoSpec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    case 2:
      var value = new spec_pb.Error;
      reader.readMessage(value,spec_pb.Error.deserializeBinaryFromReader);
      msg.addParseerrors(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.SpecDetails.SpecDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.SpecDetails.SpecDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.SpecDetails.SpecDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.SpecDetails.SpecDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      spec_pb.ProtoSpec.serializeBinaryToWriter
    );
  }
  f = message.getParseerrorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      spec_pb.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional ProtoSpec spec = 1;
 * @return {?proto.gauge.messages.ProtoSpec}
 */
proto.gauge.messages.SpecDetails.SpecDetail.prototype.getSpec = function() {
  return /** @type{?proto.gauge.messages.ProtoSpec} */ (
    jspb.Message.getWrapperField(this, spec_pb.ProtoSpec, 1));
};


/**
 * @param {?proto.gauge.messages.ProtoSpec|undefined} value
 * @return {!proto.gauge.messages.SpecDetails.SpecDetail} returns this
*/
proto.gauge.messages.SpecDetails.SpecDetail.prototype.setSpec = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.SpecDetails.SpecDetail} returns this
 */
proto.gauge.messages.SpecDetails.SpecDetail.prototype.clearSpec = function() {
  return this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.SpecDetails.SpecDetail.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Error parseErrors = 2;
 * @return {!Array<!proto.gauge.messages.Error>}
 */
proto.gauge.messages.SpecDetails.SpecDetail.prototype.getParseerrorsList = function() {
  return /** @type{!Array<!proto.gauge.messages.Error>} */ (
    jspb.Message.getRepeatedWrapperField(this, spec_pb.Error, 2));
};


/**
 * @param {!Array<!proto.gauge.messages.Error>} value
 * @return {!proto.gauge.messages.SpecDetails.SpecDetail} returns this
*/
proto.gauge.messages.SpecDetails.SpecDetail.prototype.setParseerrorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.gauge.messages.Error=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.Error}
 */
proto.gauge.messages.SpecDetails.SpecDetail.prototype.addParseerrors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.gauge.messages.Error, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.SpecDetails.SpecDetail} returns this
 */
proto.gauge.messages.SpecDetails.SpecDetail.prototype.clearParseerrorsList = function() {
  return this.setParseerrorsList([]);
};


/**
 * repeated SpecDetail details = 1;
 * @return {!Array<!proto.gauge.messages.SpecDetails.SpecDetail>}
 */
proto.gauge.messages.SpecDetails.prototype.getDetailsList = function() {
  return /** @type{!Array<!proto.gauge.messages.SpecDetails.SpecDetail>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gauge.messages.SpecDetails.SpecDetail, 1));
};


/**
 * @param {!Array<!proto.gauge.messages.SpecDetails.SpecDetail>} value
 * @return {!proto.gauge.messages.SpecDetails} returns this
*/
proto.gauge.messages.SpecDetails.prototype.setDetailsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.gauge.messages.SpecDetails.SpecDetail=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.SpecDetails.SpecDetail}
 */
proto.gauge.messages.SpecDetails.prototype.addDetails = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.gauge.messages.SpecDetails.SpecDetail, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.SpecDetails} returns this
 */
proto.gauge.messages.SpecDetails.prototype.clearDetailsList = function() {
  return this.setDetailsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.Empty.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.Empty.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.Empty} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.Empty.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.Empty}
 */
proto.gauge.messages.Empty.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.Empty;
  return proto.gauge.messages.Empty.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.Empty} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.Empty}
 */
proto.gauge.messages.Empty.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.Empty.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.Empty.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.Empty} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.Empty.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.Message.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.Message.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.Message} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.Message.toObject = function(includeInstance, msg) {
  var f, obj = {
    messagetype: jspb.Message.getFieldWithDefault(msg, 1, 0),
    messageid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    executionstartingrequest: (f = msg.getExecutionstartingrequest()) && proto.gauge.messages.ExecutionStartingRequest.toObject(includeInstance, f),
    specexecutionstartingrequest: (f = msg.getSpecexecutionstartingrequest()) && proto.gauge.messages.SpecExecutionStartingRequest.toObject(includeInstance, f),
    specexecutionendingrequest: (f = msg.getSpecexecutionendingrequest()) && proto.gauge.messages.SpecExecutionEndingRequest.toObject(includeInstance, f),
    scenarioexecutionstartingrequest: (f = msg.getScenarioexecutionstartingrequest()) && proto.gauge.messages.ScenarioExecutionStartingRequest.toObject(includeInstance, f),
    scenarioexecutionendingrequest: (f = msg.getScenarioexecutionendingrequest()) && proto.gauge.messages.ScenarioExecutionEndingRequest.toObject(includeInstance, f),
    stepexecutionstartingrequest: (f = msg.getStepexecutionstartingrequest()) && proto.gauge.messages.StepExecutionStartingRequest.toObject(includeInstance, f),
    stepexecutionendingrequest: (f = msg.getStepexecutionendingrequest()) && proto.gauge.messages.StepExecutionEndingRequest.toObject(includeInstance, f),
    executesteprequest: (f = msg.getExecutesteprequest()) && proto.gauge.messages.ExecuteStepRequest.toObject(includeInstance, f),
    executionendingrequest: (f = msg.getExecutionendingrequest()) && proto.gauge.messages.ExecutionEndingRequest.toObject(includeInstance, f),
    stepvalidaterequest: (f = msg.getStepvalidaterequest()) && proto.gauge.messages.StepValidateRequest.toObject(includeInstance, f),
    stepvalidateresponse: (f = msg.getStepvalidateresponse()) && proto.gauge.messages.StepValidateResponse.toObject(includeInstance, f),
    executionstatusresponse: (f = msg.getExecutionstatusresponse()) && proto.gauge.messages.ExecutionStatusResponse.toObject(includeInstance, f),
    stepnamesrequest: (f = msg.getStepnamesrequest()) && proto.gauge.messages.StepNamesRequest.toObject(includeInstance, f),
    stepnamesresponse: (f = msg.getStepnamesresponse()) && proto.gauge.messages.StepNamesResponse.toObject(includeInstance, f),
    suiteexecutionresult: (f = msg.getSuiteexecutionresult()) && proto.gauge.messages.SuiteExecutionResult.toObject(includeInstance, f),
    killprocessrequest: (f = msg.getKillprocessrequest()) && proto.gauge.messages.KillProcessRequest.toObject(includeInstance, f),
    scenariodatastoreinitrequest: (f = msg.getScenariodatastoreinitrequest()) && proto.gauge.messages.ScenarioDataStoreInitRequest.toObject(includeInstance, f),
    specdatastoreinitrequest: (f = msg.getSpecdatastoreinitrequest()) && proto.gauge.messages.SpecDataStoreInitRequest.toObject(includeInstance, f),
    suitedatastoreinitrequest: (f = msg.getSuitedatastoreinitrequest()) && proto.gauge.messages.SuiteDataStoreInitRequest.toObject(includeInstance, f),
    stepnamerequest: (f = msg.getStepnamerequest()) && proto.gauge.messages.StepNameRequest.toObject(includeInstance, f),
    stepnameresponse: (f = msg.getStepnameresponse()) && proto.gauge.messages.StepNameResponse.toObject(includeInstance, f),
    refactorrequest: (f = msg.getRefactorrequest()) && proto.gauge.messages.RefactorRequest.toObject(includeInstance, f),
    refactorresponse: (f = msg.getRefactorresponse()) && proto.gauge.messages.RefactorResponse.toObject(includeInstance, f),
    unsupportedmessageresponse: (f = msg.getUnsupportedmessageresponse()) && proto.gauge.messages.UnsupportedMessageResponse.toObject(includeInstance, f),
    cachefilerequest: (f = msg.getCachefilerequest()) && proto.gauge.messages.CacheFileRequest.toObject(includeInstance, f),
    steppositionsrequest: (f = msg.getSteppositionsrequest()) && proto.gauge.messages.StepPositionsRequest.toObject(includeInstance, f),
    steppositionsresponse: (f = msg.getSteppositionsresponse()) && proto.gauge.messages.StepPositionsResponse.toObject(includeInstance, f),
    implementationfilelistrequest: (f = msg.getImplementationfilelistrequest()) && proto.gauge.messages.ImplementationFileListRequest.toObject(includeInstance, f),
    implementationfilelistresponse: (f = msg.getImplementationfilelistresponse()) && proto.gauge.messages.ImplementationFileListResponse.toObject(includeInstance, f),
    stubimplementationcoderequest: (f = msg.getStubimplementationcoderequest()) && proto.gauge.messages.StubImplementationCodeRequest.toObject(includeInstance, f),
    filediff: (f = msg.getFilediff()) && proto.gauge.messages.FileDiff.toObject(includeInstance, f),
    implementationfileglobpatternrequest: (f = msg.getImplementationfileglobpatternrequest()) && proto.gauge.messages.ImplementationFileGlobPatternRequest.toObject(includeInstance, f),
    implementationfileglobpatternresponse: (f = msg.getImplementationfileglobpatternresponse()) && proto.gauge.messages.ImplementationFileGlobPatternResponse.toObject(includeInstance, f),
    suiteexecutionresultitem: (f = msg.getSuiteexecutionresultitem()) && proto.gauge.messages.SuiteExecutionResultItem.toObject(includeInstance, f),
    keepalive: (f = msg.getKeepalive()) && proto.gauge.messages.KeepAlive.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.Message}
 */
proto.gauge.messages.Message.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.Message;
  return proto.gauge.messages.Message.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.Message} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.Message}
 */
proto.gauge.messages.Message.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.gauge.messages.Message.MessageType} */ (reader.readEnum());
      msg.setMessagetype(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMessageid(value);
      break;
    case 3:
      var value = new proto.gauge.messages.ExecutionStartingRequest;
      reader.readMessage(value,proto.gauge.messages.ExecutionStartingRequest.deserializeBinaryFromReader);
      msg.setExecutionstartingrequest(value);
      break;
    case 4:
      var value = new proto.gauge.messages.SpecExecutionStartingRequest;
      reader.readMessage(value,proto.gauge.messages.SpecExecutionStartingRequest.deserializeBinaryFromReader);
      msg.setSpecexecutionstartingrequest(value);
      break;
    case 5:
      var value = new proto.gauge.messages.SpecExecutionEndingRequest;
      reader.readMessage(value,proto.gauge.messages.SpecExecutionEndingRequest.deserializeBinaryFromReader);
      msg.setSpecexecutionendingrequest(value);
      break;
    case 6:
      var value = new proto.gauge.messages.ScenarioExecutionStartingRequest;
      reader.readMessage(value,proto.gauge.messages.ScenarioExecutionStartingRequest.deserializeBinaryFromReader);
      msg.setScenarioexecutionstartingrequest(value);
      break;
    case 7:
      var value = new proto.gauge.messages.ScenarioExecutionEndingRequest;
      reader.readMessage(value,proto.gauge.messages.ScenarioExecutionEndingRequest.deserializeBinaryFromReader);
      msg.setScenarioexecutionendingrequest(value);
      break;
    case 8:
      var value = new proto.gauge.messages.StepExecutionStartingRequest;
      reader.readMessage(value,proto.gauge.messages.StepExecutionStartingRequest.deserializeBinaryFromReader);
      msg.setStepexecutionstartingrequest(value);
      break;
    case 9:
      var value = new proto.gauge.messages.StepExecutionEndingRequest;
      reader.readMessage(value,proto.gauge.messages.StepExecutionEndingRequest.deserializeBinaryFromReader);
      msg.setStepexecutionendingrequest(value);
      break;
    case 10:
      var value = new proto.gauge.messages.ExecuteStepRequest;
      reader.readMessage(value,proto.gauge.messages.ExecuteStepRequest.deserializeBinaryFromReader);
      msg.setExecutesteprequest(value);
      break;
    case 11:
      var value = new proto.gauge.messages.ExecutionEndingRequest;
      reader.readMessage(value,proto.gauge.messages.ExecutionEndingRequest.deserializeBinaryFromReader);
      msg.setExecutionendingrequest(value);
      break;
    case 12:
      var value = new proto.gauge.messages.StepValidateRequest;
      reader.readMessage(value,proto.gauge.messages.StepValidateRequest.deserializeBinaryFromReader);
      msg.setStepvalidaterequest(value);
      break;
    case 13:
      var value = new proto.gauge.messages.StepValidateResponse;
      reader.readMessage(value,proto.gauge.messages.StepValidateResponse.deserializeBinaryFromReader);
      msg.setStepvalidateresponse(value);
      break;
    case 14:
      var value = new proto.gauge.messages.ExecutionStatusResponse;
      reader.readMessage(value,proto.gauge.messages.ExecutionStatusResponse.deserializeBinaryFromReader);
      msg.setExecutionstatusresponse(value);
      break;
    case 15:
      var value = new proto.gauge.messages.StepNamesRequest;
      reader.readMessage(value,proto.gauge.messages.StepNamesRequest.deserializeBinaryFromReader);
      msg.setStepnamesrequest(value);
      break;
    case 16:
      var value = new proto.gauge.messages.StepNamesResponse;
      reader.readMessage(value,proto.gauge.messages.StepNamesResponse.deserializeBinaryFromReader);
      msg.setStepnamesresponse(value);
      break;
    case 17:
      var value = new proto.gauge.messages.SuiteExecutionResult;
      reader.readMessage(value,proto.gauge.messages.SuiteExecutionResult.deserializeBinaryFromReader);
      msg.setSuiteexecutionresult(value);
      break;
    case 18:
      var value = new proto.gauge.messages.KillProcessRequest;
      reader.readMessage(value,proto.gauge.messages.KillProcessRequest.deserializeBinaryFromReader);
      msg.setKillprocessrequest(value);
      break;
    case 19:
      var value = new proto.gauge.messages.ScenarioDataStoreInitRequest;
      reader.readMessage(value,proto.gauge.messages.ScenarioDataStoreInitRequest.deserializeBinaryFromReader);
      msg.setScenariodatastoreinitrequest(value);
      break;
    case 20:
      var value = new proto.gauge.messages.SpecDataStoreInitRequest;
      reader.readMessage(value,proto.gauge.messages.SpecDataStoreInitRequest.deserializeBinaryFromReader);
      msg.setSpecdatastoreinitrequest(value);
      break;
    case 21:
      var value = new proto.gauge.messages.SuiteDataStoreInitRequest;
      reader.readMessage(value,proto.gauge.messages.SuiteDataStoreInitRequest.deserializeBinaryFromReader);
      msg.setSuitedatastoreinitrequest(value);
      break;
    case 22:
      var value = new proto.gauge.messages.StepNameRequest;
      reader.readMessage(value,proto.gauge.messages.StepNameRequest.deserializeBinaryFromReader);
      msg.setStepnamerequest(value);
      break;
    case 23:
      var value = new proto.gauge.messages.StepNameResponse;
      reader.readMessage(value,proto.gauge.messages.StepNameResponse.deserializeBinaryFromReader);
      msg.setStepnameresponse(value);
      break;
    case 24:
      var value = new proto.gauge.messages.RefactorRequest;
      reader.readMessage(value,proto.gauge.messages.RefactorRequest.deserializeBinaryFromReader);
      msg.setRefactorrequest(value);
      break;
    case 25:
      var value = new proto.gauge.messages.RefactorResponse;
      reader.readMessage(value,proto.gauge.messages.RefactorResponse.deserializeBinaryFromReader);
      msg.setRefactorresponse(value);
      break;
    case 26:
      var value = new proto.gauge.messages.UnsupportedMessageResponse;
      reader.readMessage(value,proto.gauge.messages.UnsupportedMessageResponse.deserializeBinaryFromReader);
      msg.setUnsupportedmessageresponse(value);
      break;
    case 27:
      var value = new proto.gauge.messages.CacheFileRequest;
      reader.readMessage(value,proto.gauge.messages.CacheFileRequest.deserializeBinaryFromReader);
      msg.setCachefilerequest(value);
      break;
    case 28:
      var value = new proto.gauge.messages.StepPositionsRequest;
      reader.readMessage(value,proto.gauge.messages.StepPositionsRequest.deserializeBinaryFromReader);
      msg.setSteppositionsrequest(value);
      break;
    case 29:
      var value = new proto.gauge.messages.StepPositionsResponse;
      reader.readMessage(value,proto.gauge.messages.StepPositionsResponse.deserializeBinaryFromReader);
      msg.setSteppositionsresponse(value);
      break;
    case 30:
      var value = new proto.gauge.messages.ImplementationFileListRequest;
      reader.readMessage(value,proto.gauge.messages.ImplementationFileListRequest.deserializeBinaryFromReader);
      msg.setImplementationfilelistrequest(value);
      break;
    case 31:
      var value = new proto.gauge.messages.ImplementationFileListResponse;
      reader.readMessage(value,proto.gauge.messages.ImplementationFileListResponse.deserializeBinaryFromReader);
      msg.setImplementationfilelistresponse(value);
      break;
    case 32:
      var value = new proto.gauge.messages.StubImplementationCodeRequest;
      reader.readMessage(value,proto.gauge.messages.StubImplementationCodeRequest.deserializeBinaryFromReader);
      msg.setStubimplementationcoderequest(value);
      break;
    case 33:
      var value = new proto.gauge.messages.FileDiff;
      reader.readMessage(value,proto.gauge.messages.FileDiff.deserializeBinaryFromReader);
      msg.setFilediff(value);
      break;
    case 34:
      var value = new proto.gauge.messages.ImplementationFileGlobPatternRequest;
      reader.readMessage(value,proto.gauge.messages.ImplementationFileGlobPatternRequest.deserializeBinaryFromReader);
      msg.setImplementationfileglobpatternrequest(value);
      break;
    case 35:
      var value = new proto.gauge.messages.ImplementationFileGlobPatternResponse;
      reader.readMessage(value,proto.gauge.messages.ImplementationFileGlobPatternResponse.deserializeBinaryFromReader);
      msg.setImplementationfileglobpatternresponse(value);
      break;
    case 36:
      var value = new proto.gauge.messages.SuiteExecutionResultItem;
      reader.readMessage(value,proto.gauge.messages.SuiteExecutionResultItem.deserializeBinaryFromReader);
      msg.setSuiteexecutionresultitem(value);
      break;
    case 37:
      var value = new proto.gauge.messages.KeepAlive;
      reader.readMessage(value,proto.gauge.messages.KeepAlive.deserializeBinaryFromReader);
      msg.setKeepalive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.Message.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.Message.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.Message} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.Message.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessagetype();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMessageid();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getExecutionstartingrequest();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.gauge.messages.ExecutionStartingRequest.serializeBinaryToWriter
    );
  }
  f = message.getSpecexecutionstartingrequest();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.gauge.messages.SpecExecutionStartingRequest.serializeBinaryToWriter
    );
  }
  f = message.getSpecexecutionendingrequest();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.gauge.messages.SpecExecutionEndingRequest.serializeBinaryToWriter
    );
  }
  f = message.getScenarioexecutionstartingrequest();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.gauge.messages.ScenarioExecutionStartingRequest.serializeBinaryToWriter
    );
  }
  f = message.getScenarioexecutionendingrequest();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.gauge.messages.ScenarioExecutionEndingRequest.serializeBinaryToWriter
    );
  }
  f = message.getStepexecutionstartingrequest();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.gauge.messages.StepExecutionStartingRequest.serializeBinaryToWriter
    );
  }
  f = message.getStepexecutionendingrequest();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.gauge.messages.StepExecutionEndingRequest.serializeBinaryToWriter
    );
  }
  f = message.getExecutesteprequest();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.gauge.messages.ExecuteStepRequest.serializeBinaryToWriter
    );
  }
  f = message.getExecutionendingrequest();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.gauge.messages.ExecutionEndingRequest.serializeBinaryToWriter
    );
  }
  f = message.getStepvalidaterequest();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.gauge.messages.StepValidateRequest.serializeBinaryToWriter
    );
  }
  f = message.getStepvalidateresponse();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.gauge.messages.StepValidateResponse.serializeBinaryToWriter
    );
  }
  f = message.getExecutionstatusresponse();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.gauge.messages.ExecutionStatusResponse.serializeBinaryToWriter
    );
  }
  f = message.getStepnamesrequest();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.gauge.messages.StepNamesRequest.serializeBinaryToWriter
    );
  }
  f = message.getStepnamesresponse();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.gauge.messages.StepNamesResponse.serializeBinaryToWriter
    );
  }
  f = message.getSuiteexecutionresult();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.gauge.messages.SuiteExecutionResult.serializeBinaryToWriter
    );
  }
  f = message.getKillprocessrequest();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.gauge.messages.KillProcessRequest.serializeBinaryToWriter
    );
  }
  f = message.getScenariodatastoreinitrequest();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto.gauge.messages.ScenarioDataStoreInitRequest.serializeBinaryToWriter
    );
  }
  f = message.getSpecdatastoreinitrequest();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.gauge.messages.SpecDataStoreInitRequest.serializeBinaryToWriter
    );
  }
  f = message.getSuitedatastoreinitrequest();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      proto.gauge.messages.SuiteDataStoreInitRequest.serializeBinaryToWriter
    );
  }
  f = message.getStepnamerequest();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      proto.gauge.messages.StepNameRequest.serializeBinaryToWriter
    );
  }
  f = message.getStepnameresponse();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      proto.gauge.messages.StepNameResponse.serializeBinaryToWriter
    );
  }
  f = message.getRefactorrequest();
  if (f != null) {
    writer.writeMessage(
      24,
      f,
      proto.gauge.messages.RefactorRequest.serializeBinaryToWriter
    );
  }
  f = message.getRefactorresponse();
  if (f != null) {
    writer.writeMessage(
      25,
      f,
      proto.gauge.messages.RefactorResponse.serializeBinaryToWriter
    );
  }
  f = message.getUnsupportedmessageresponse();
  if (f != null) {
    writer.writeMessage(
      26,
      f,
      proto.gauge.messages.UnsupportedMessageResponse.serializeBinaryToWriter
    );
  }
  f = message.getCachefilerequest();
  if (f != null) {
    writer.writeMessage(
      27,
      f,
      proto.gauge.messages.CacheFileRequest.serializeBinaryToWriter
    );
  }
  f = message.getSteppositionsrequest();
  if (f != null) {
    writer.writeMessage(
      28,
      f,
      proto.gauge.messages.StepPositionsRequest.serializeBinaryToWriter
    );
  }
  f = message.getSteppositionsresponse();
  if (f != null) {
    writer.writeMessage(
      29,
      f,
      proto.gauge.messages.StepPositionsResponse.serializeBinaryToWriter
    );
  }
  f = message.getImplementationfilelistrequest();
  if (f != null) {
    writer.writeMessage(
      30,
      f,
      proto.gauge.messages.ImplementationFileListRequest.serializeBinaryToWriter
    );
  }
  f = message.getImplementationfilelistresponse();
  if (f != null) {
    writer.writeMessage(
      31,
      f,
      proto.gauge.messages.ImplementationFileListResponse.serializeBinaryToWriter
    );
  }
  f = message.getStubimplementationcoderequest();
  if (f != null) {
    writer.writeMessage(
      32,
      f,
      proto.gauge.messages.StubImplementationCodeRequest.serializeBinaryToWriter
    );
  }
  f = message.getFilediff();
  if (f != null) {
    writer.writeMessage(
      33,
      f,
      proto.gauge.messages.FileDiff.serializeBinaryToWriter
    );
  }
  f = message.getImplementationfileglobpatternrequest();
  if (f != null) {
    writer.writeMessage(
      34,
      f,
      proto.gauge.messages.ImplementationFileGlobPatternRequest.serializeBinaryToWriter
    );
  }
  f = message.getImplementationfileglobpatternresponse();
  if (f != null) {
    writer.writeMessage(
      35,
      f,
      proto.gauge.messages.ImplementationFileGlobPatternResponse.serializeBinaryToWriter
    );
  }
  f = message.getSuiteexecutionresultitem();
  if (f != null) {
    writer.writeMessage(
      36,
      f,
      proto.gauge.messages.SuiteExecutionResultItem.serializeBinaryToWriter
    );
  }
  f = message.getKeepalive();
  if (f != null) {
    writer.writeMessage(
      37,
      f,
      proto.gauge.messages.KeepAlive.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.gauge.messages.Message.MessageType = {
  EXECUTIONSTARTING: 0,
  SPECEXECUTIONSTARTING: 1,
  SPECEXECUTIONENDING: 2,
  SCENARIOEXECUTIONSTARTING: 3,
  SCENARIOEXECUTIONENDING: 4,
  STEPEXECUTIONSTARTING: 5,
  STEPEXECUTIONENDING: 6,
  EXECUTESTEP: 7,
  EXECUTIONENDING: 8,
  STEPVALIDATEREQUEST: 9,
  STEPVALIDATERESPONSE: 10,
  EXECUTIONSTATUSRESPONSE: 11,
  STEPNAMESREQUEST: 12,
  STEPNAMESRESPONSE: 13,
  KILLPROCESSREQUEST: 14,
  SUITEEXECUTIONRESULT: 15,
  SCENARIODATASTOREINIT: 16,
  SPECDATASTOREINIT: 17,
  SUITEDATASTOREINIT: 18,
  STEPNAMEREQUEST: 19,
  STEPNAMERESPONSE: 20,
  REFACTORREQUEST: 21,
  REFACTORRESPONSE: 22,
  UNSUPPORTEDMESSAGERESPONSE: 23,
  CACHEFILEREQUEST: 24,
  STEPPOSITIONSREQUEST: 25,
  STEPPOSITIONSRESPONSE: 26,
  IMPLEMENTATIONFILELISTREQUEST: 27,
  IMPLEMENTATIONFILELISTRESPONSE: 28,
  STUBIMPLEMENTATIONCODEREQUEST: 29,
  FILEDIFF: 30,
  IMPLEMENTATIONFILEGLOBPATTERNREQUEST: 31,
  IMPLEMENTATIONFILEGLOBPATTERNRESPONSE: 32,
  SUITEEXECUTIONRESULTITEM: 33,
  KEEPALIVE: 34
};

/**
 * optional MessageType messageType = 1;
 * @return {!proto.gauge.messages.Message.MessageType}
 */
proto.gauge.messages.Message.prototype.getMessagetype = function() {
  return /** @type {!proto.gauge.messages.Message.MessageType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.gauge.messages.Message.MessageType} value
 * @return {!proto.gauge.messages.Message} returns this
 */
proto.gauge.messages.Message.prototype.setMessagetype = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int64 messageId = 2;
 * @return {number}
 */
proto.gauge.messages.Message.prototype.getMessageid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.gauge.messages.Message} returns this
 */
proto.gauge.messages.Message.prototype.setMessageid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional ExecutionStartingRequest executionStartingRequest = 3;
 * @return {?proto.gauge.messages.ExecutionStartingRequest}
 */
proto.gauge.messages.Message.prototype.getExecutionstartingrequest = function() {
  return /** @type{?proto.gauge.messages.ExecutionStartingRequest} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.ExecutionStartingRequest, 3));
};


/**
 * @param {?proto.gauge.messages.ExecutionStartingRequest|undefined} value
 * @return {!proto.gauge.messages.Message} returns this
*/
proto.gauge.messages.Message.prototype.setExecutionstartingrequest = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.Message} returns this
 */
proto.gauge.messages.Message.prototype.clearExecutionstartingrequest = function() {
  return this.setExecutionstartingrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.Message.prototype.hasExecutionstartingrequest = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional SpecExecutionStartingRequest specExecutionStartingRequest = 4;
 * @return {?proto.gauge.messages.SpecExecutionStartingRequest}
 */
proto.gauge.messages.Message.prototype.getSpecexecutionstartingrequest = function() {
  return /** @type{?proto.gauge.messages.SpecExecutionStartingRequest} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.SpecExecutionStartingRequest, 4));
};


/**
 * @param {?proto.gauge.messages.SpecExecutionStartingRequest|undefined} value
 * @return {!proto.gauge.messages.Message} returns this
*/
proto.gauge.messages.Message.prototype.setSpecexecutionstartingrequest = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.Message} returns this
 */
proto.gauge.messages.Message.prototype.clearSpecexecutionstartingrequest = function() {
  return this.setSpecexecutionstartingrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.Message.prototype.hasSpecexecutionstartingrequest = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional SpecExecutionEndingRequest specExecutionEndingRequest = 5;
 * @return {?proto.gauge.messages.SpecExecutionEndingRequest}
 */
proto.gauge.messages.Message.prototype.getSpecexecutionendingrequest = function() {
  return /** @type{?proto.gauge.messages.SpecExecutionEndingRequest} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.SpecExecutionEndingRequest, 5));
};


/**
 * @param {?proto.gauge.messages.SpecExecutionEndingRequest|undefined} value
 * @return {!proto.gauge.messages.Message} returns this
*/
proto.gauge.messages.Message.prototype.setSpecexecutionendingrequest = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.Message} returns this
 */
proto.gauge.messages.Message.prototype.clearSpecexecutionendingrequest = function() {
  return this.setSpecexecutionendingrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.Message.prototype.hasSpecexecutionendingrequest = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ScenarioExecutionStartingRequest scenarioExecutionStartingRequest = 6;
 * @return {?proto.gauge.messages.ScenarioExecutionStartingRequest}
 */
proto.gauge.messages.Message.prototype.getScenarioexecutionstartingrequest = function() {
  return /** @type{?proto.gauge.messages.ScenarioExecutionStartingRequest} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.ScenarioExecutionStartingRequest, 6));
};


/**
 * @param {?proto.gauge.messages.ScenarioExecutionStartingRequest|undefined} value
 * @return {!proto.gauge.messages.Message} returns this
*/
proto.gauge.messages.Message.prototype.setScenarioexecutionstartingrequest = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.Message} returns this
 */
proto.gauge.messages.Message.prototype.clearScenarioexecutionstartingrequest = function() {
  return this.setScenarioexecutionstartingrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.Message.prototype.hasScenarioexecutionstartingrequest = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional ScenarioExecutionEndingRequest scenarioExecutionEndingRequest = 7;
 * @return {?proto.gauge.messages.ScenarioExecutionEndingRequest}
 */
proto.gauge.messages.Message.prototype.getScenarioexecutionendingrequest = function() {
  return /** @type{?proto.gauge.messages.ScenarioExecutionEndingRequest} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.ScenarioExecutionEndingRequest, 7));
};


/**
 * @param {?proto.gauge.messages.ScenarioExecutionEndingRequest|undefined} value
 * @return {!proto.gauge.messages.Message} returns this
*/
proto.gauge.messages.Message.prototype.setScenarioexecutionendingrequest = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.Message} returns this
 */
proto.gauge.messages.Message.prototype.clearScenarioexecutionendingrequest = function() {
  return this.setScenarioexecutionendingrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.Message.prototype.hasScenarioexecutionendingrequest = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional StepExecutionStartingRequest stepExecutionStartingRequest = 8;
 * @return {?proto.gauge.messages.StepExecutionStartingRequest}
 */
proto.gauge.messages.Message.prototype.getStepexecutionstartingrequest = function() {
  return /** @type{?proto.gauge.messages.StepExecutionStartingRequest} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.StepExecutionStartingRequest, 8));
};


/**
 * @param {?proto.gauge.messages.StepExecutionStartingRequest|undefined} value
 * @return {!proto.gauge.messages.Message} returns this
*/
proto.gauge.messages.Message.prototype.setStepexecutionstartingrequest = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.Message} returns this
 */
proto.gauge.messages.Message.prototype.clearStepexecutionstartingrequest = function() {
  return this.setStepexecutionstartingrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.Message.prototype.hasStepexecutionstartingrequest = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional StepExecutionEndingRequest stepExecutionEndingRequest = 9;
 * @return {?proto.gauge.messages.StepExecutionEndingRequest}
 */
proto.gauge.messages.Message.prototype.getStepexecutionendingrequest = function() {
  return /** @type{?proto.gauge.messages.StepExecutionEndingRequest} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.StepExecutionEndingRequest, 9));
};


/**
 * @param {?proto.gauge.messages.StepExecutionEndingRequest|undefined} value
 * @return {!proto.gauge.messages.Message} returns this
*/
proto.gauge.messages.Message.prototype.setStepexecutionendingrequest = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.Message} returns this
 */
proto.gauge.messages.Message.prototype.clearStepexecutionendingrequest = function() {
  return this.setStepexecutionendingrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.Message.prototype.hasStepexecutionendingrequest = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional ExecuteStepRequest executeStepRequest = 10;
 * @return {?proto.gauge.messages.ExecuteStepRequest}
 */
proto.gauge.messages.Message.prototype.getExecutesteprequest = function() {
  return /** @type{?proto.gauge.messages.ExecuteStepRequest} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.ExecuteStepRequest, 10));
};


/**
 * @param {?proto.gauge.messages.ExecuteStepRequest|undefined} value
 * @return {!proto.gauge.messages.Message} returns this
*/
proto.gauge.messages.Message.prototype.setExecutesteprequest = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.Message} returns this
 */
proto.gauge.messages.Message.prototype.clearExecutesteprequest = function() {
  return this.setExecutesteprequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.Message.prototype.hasExecutesteprequest = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional ExecutionEndingRequest executionEndingRequest = 11;
 * @return {?proto.gauge.messages.ExecutionEndingRequest}
 */
proto.gauge.messages.Message.prototype.getExecutionendingrequest = function() {
  return /** @type{?proto.gauge.messages.ExecutionEndingRequest} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.ExecutionEndingRequest, 11));
};


/**
 * @param {?proto.gauge.messages.ExecutionEndingRequest|undefined} value
 * @return {!proto.gauge.messages.Message} returns this
*/
proto.gauge.messages.Message.prototype.setExecutionendingrequest = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.Message} returns this
 */
proto.gauge.messages.Message.prototype.clearExecutionendingrequest = function() {
  return this.setExecutionendingrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.Message.prototype.hasExecutionendingrequest = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional StepValidateRequest stepValidateRequest = 12;
 * @return {?proto.gauge.messages.StepValidateRequest}
 */
proto.gauge.messages.Message.prototype.getStepvalidaterequest = function() {
  return /** @type{?proto.gauge.messages.StepValidateRequest} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.StepValidateRequest, 12));
};


/**
 * @param {?proto.gauge.messages.StepValidateRequest|undefined} value
 * @return {!proto.gauge.messages.Message} returns this
*/
proto.gauge.messages.Message.prototype.setStepvalidaterequest = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.Message} returns this
 */
proto.gauge.messages.Message.prototype.clearStepvalidaterequest = function() {
  return this.setStepvalidaterequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.Message.prototype.hasStepvalidaterequest = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional StepValidateResponse stepValidateResponse = 13;
 * @return {?proto.gauge.messages.StepValidateResponse}
 */
proto.gauge.messages.Message.prototype.getStepvalidateresponse = function() {
  return /** @type{?proto.gauge.messages.StepValidateResponse} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.StepValidateResponse, 13));
};


/**
 * @param {?proto.gauge.messages.StepValidateResponse|undefined} value
 * @return {!proto.gauge.messages.Message} returns this
*/
proto.gauge.messages.Message.prototype.setStepvalidateresponse = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.Message} returns this
 */
proto.gauge.messages.Message.prototype.clearStepvalidateresponse = function() {
  return this.setStepvalidateresponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.Message.prototype.hasStepvalidateresponse = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional ExecutionStatusResponse executionStatusResponse = 14;
 * @return {?proto.gauge.messages.ExecutionStatusResponse}
 */
proto.gauge.messages.Message.prototype.getExecutionstatusresponse = function() {
  return /** @type{?proto.gauge.messages.ExecutionStatusResponse} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.ExecutionStatusResponse, 14));
};


/**
 * @param {?proto.gauge.messages.ExecutionStatusResponse|undefined} value
 * @return {!proto.gauge.messages.Message} returns this
*/
proto.gauge.messages.Message.prototype.setExecutionstatusresponse = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.Message} returns this
 */
proto.gauge.messages.Message.prototype.clearExecutionstatusresponse = function() {
  return this.setExecutionstatusresponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.Message.prototype.hasExecutionstatusresponse = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional StepNamesRequest stepNamesRequest = 15;
 * @return {?proto.gauge.messages.StepNamesRequest}
 */
proto.gauge.messages.Message.prototype.getStepnamesrequest = function() {
  return /** @type{?proto.gauge.messages.StepNamesRequest} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.StepNamesRequest, 15));
};


/**
 * @param {?proto.gauge.messages.StepNamesRequest|undefined} value
 * @return {!proto.gauge.messages.Message} returns this
*/
proto.gauge.messages.Message.prototype.setStepnamesrequest = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.Message} returns this
 */
proto.gauge.messages.Message.prototype.clearStepnamesrequest = function() {
  return this.setStepnamesrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.Message.prototype.hasStepnamesrequest = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional StepNamesResponse stepNamesResponse = 16;
 * @return {?proto.gauge.messages.StepNamesResponse}
 */
proto.gauge.messages.Message.prototype.getStepnamesresponse = function() {
  return /** @type{?proto.gauge.messages.StepNamesResponse} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.StepNamesResponse, 16));
};


/**
 * @param {?proto.gauge.messages.StepNamesResponse|undefined} value
 * @return {!proto.gauge.messages.Message} returns this
*/
proto.gauge.messages.Message.prototype.setStepnamesresponse = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.Message} returns this
 */
proto.gauge.messages.Message.prototype.clearStepnamesresponse = function() {
  return this.setStepnamesresponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.Message.prototype.hasStepnamesresponse = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional SuiteExecutionResult suiteExecutionResult = 17;
 * @return {?proto.gauge.messages.SuiteExecutionResult}
 */
proto.gauge.messages.Message.prototype.getSuiteexecutionresult = function() {
  return /** @type{?proto.gauge.messages.SuiteExecutionResult} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.SuiteExecutionResult, 17));
};


/**
 * @param {?proto.gauge.messages.SuiteExecutionResult|undefined} value
 * @return {!proto.gauge.messages.Message} returns this
*/
proto.gauge.messages.Message.prototype.setSuiteexecutionresult = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.Message} returns this
 */
proto.gauge.messages.Message.prototype.clearSuiteexecutionresult = function() {
  return this.setSuiteexecutionresult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.Message.prototype.hasSuiteexecutionresult = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional KillProcessRequest killProcessRequest = 18;
 * @return {?proto.gauge.messages.KillProcessRequest}
 */
proto.gauge.messages.Message.prototype.getKillprocessrequest = function() {
  return /** @type{?proto.gauge.messages.KillProcessRequest} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.KillProcessRequest, 18));
};


/**
 * @param {?proto.gauge.messages.KillProcessRequest|undefined} value
 * @return {!proto.gauge.messages.Message} returns this
*/
proto.gauge.messages.Message.prototype.setKillprocessrequest = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.Message} returns this
 */
proto.gauge.messages.Message.prototype.clearKillprocessrequest = function() {
  return this.setKillprocessrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.Message.prototype.hasKillprocessrequest = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional ScenarioDataStoreInitRequest scenarioDataStoreInitRequest = 19;
 * @return {?proto.gauge.messages.ScenarioDataStoreInitRequest}
 */
proto.gauge.messages.Message.prototype.getScenariodatastoreinitrequest = function() {
  return /** @type{?proto.gauge.messages.ScenarioDataStoreInitRequest} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.ScenarioDataStoreInitRequest, 19));
};


/**
 * @param {?proto.gauge.messages.ScenarioDataStoreInitRequest|undefined} value
 * @return {!proto.gauge.messages.Message} returns this
*/
proto.gauge.messages.Message.prototype.setScenariodatastoreinitrequest = function(value) {
  return jspb.Message.setWrapperField(this, 19, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.Message} returns this
 */
proto.gauge.messages.Message.prototype.clearScenariodatastoreinitrequest = function() {
  return this.setScenariodatastoreinitrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.Message.prototype.hasScenariodatastoreinitrequest = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional SpecDataStoreInitRequest specDataStoreInitRequest = 20;
 * @return {?proto.gauge.messages.SpecDataStoreInitRequest}
 */
proto.gauge.messages.Message.prototype.getSpecdatastoreinitrequest = function() {
  return /** @type{?proto.gauge.messages.SpecDataStoreInitRequest} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.SpecDataStoreInitRequest, 20));
};


/**
 * @param {?proto.gauge.messages.SpecDataStoreInitRequest|undefined} value
 * @return {!proto.gauge.messages.Message} returns this
*/
proto.gauge.messages.Message.prototype.setSpecdatastoreinitrequest = function(value) {
  return jspb.Message.setWrapperField(this, 20, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.Message} returns this
 */
proto.gauge.messages.Message.prototype.clearSpecdatastoreinitrequest = function() {
  return this.setSpecdatastoreinitrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.Message.prototype.hasSpecdatastoreinitrequest = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional SuiteDataStoreInitRequest suiteDataStoreInitRequest = 21;
 * @return {?proto.gauge.messages.SuiteDataStoreInitRequest}
 */
proto.gauge.messages.Message.prototype.getSuitedatastoreinitrequest = function() {
  return /** @type{?proto.gauge.messages.SuiteDataStoreInitRequest} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.SuiteDataStoreInitRequest, 21));
};


/**
 * @param {?proto.gauge.messages.SuiteDataStoreInitRequest|undefined} value
 * @return {!proto.gauge.messages.Message} returns this
*/
proto.gauge.messages.Message.prototype.setSuitedatastoreinitrequest = function(value) {
  return jspb.Message.setWrapperField(this, 21, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.Message} returns this
 */
proto.gauge.messages.Message.prototype.clearSuitedatastoreinitrequest = function() {
  return this.setSuitedatastoreinitrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.Message.prototype.hasSuitedatastoreinitrequest = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional StepNameRequest stepNameRequest = 22;
 * @return {?proto.gauge.messages.StepNameRequest}
 */
proto.gauge.messages.Message.prototype.getStepnamerequest = function() {
  return /** @type{?proto.gauge.messages.StepNameRequest} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.StepNameRequest, 22));
};


/**
 * @param {?proto.gauge.messages.StepNameRequest|undefined} value
 * @return {!proto.gauge.messages.Message} returns this
*/
proto.gauge.messages.Message.prototype.setStepnamerequest = function(value) {
  return jspb.Message.setWrapperField(this, 22, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.Message} returns this
 */
proto.gauge.messages.Message.prototype.clearStepnamerequest = function() {
  return this.setStepnamerequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.Message.prototype.hasStepnamerequest = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional StepNameResponse stepNameResponse = 23;
 * @return {?proto.gauge.messages.StepNameResponse}
 */
proto.gauge.messages.Message.prototype.getStepnameresponse = function() {
  return /** @type{?proto.gauge.messages.StepNameResponse} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.StepNameResponse, 23));
};


/**
 * @param {?proto.gauge.messages.StepNameResponse|undefined} value
 * @return {!proto.gauge.messages.Message} returns this
*/
proto.gauge.messages.Message.prototype.setStepnameresponse = function(value) {
  return jspb.Message.setWrapperField(this, 23, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.Message} returns this
 */
proto.gauge.messages.Message.prototype.clearStepnameresponse = function() {
  return this.setStepnameresponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.Message.prototype.hasStepnameresponse = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional RefactorRequest refactorRequest = 24;
 * @return {?proto.gauge.messages.RefactorRequest}
 */
proto.gauge.messages.Message.prototype.getRefactorrequest = function() {
  return /** @type{?proto.gauge.messages.RefactorRequest} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.RefactorRequest, 24));
};


/**
 * @param {?proto.gauge.messages.RefactorRequest|undefined} value
 * @return {!proto.gauge.messages.Message} returns this
*/
proto.gauge.messages.Message.prototype.setRefactorrequest = function(value) {
  return jspb.Message.setWrapperField(this, 24, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.Message} returns this
 */
proto.gauge.messages.Message.prototype.clearRefactorrequest = function() {
  return this.setRefactorrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.Message.prototype.hasRefactorrequest = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional RefactorResponse refactorResponse = 25;
 * @return {?proto.gauge.messages.RefactorResponse}
 */
proto.gauge.messages.Message.prototype.getRefactorresponse = function() {
  return /** @type{?proto.gauge.messages.RefactorResponse} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.RefactorResponse, 25));
};


/**
 * @param {?proto.gauge.messages.RefactorResponse|undefined} value
 * @return {!proto.gauge.messages.Message} returns this
*/
proto.gauge.messages.Message.prototype.setRefactorresponse = function(value) {
  return jspb.Message.setWrapperField(this, 25, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.Message} returns this
 */
proto.gauge.messages.Message.prototype.clearRefactorresponse = function() {
  return this.setRefactorresponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.Message.prototype.hasRefactorresponse = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional UnsupportedMessageResponse unsupportedMessageResponse = 26;
 * @return {?proto.gauge.messages.UnsupportedMessageResponse}
 */
proto.gauge.messages.Message.prototype.getUnsupportedmessageresponse = function() {
  return /** @type{?proto.gauge.messages.UnsupportedMessageResponse} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.UnsupportedMessageResponse, 26));
};


/**
 * @param {?proto.gauge.messages.UnsupportedMessageResponse|undefined} value
 * @return {!proto.gauge.messages.Message} returns this
*/
proto.gauge.messages.Message.prototype.setUnsupportedmessageresponse = function(value) {
  return jspb.Message.setWrapperField(this, 26, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.Message} returns this
 */
proto.gauge.messages.Message.prototype.clearUnsupportedmessageresponse = function() {
  return this.setUnsupportedmessageresponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.Message.prototype.hasUnsupportedmessageresponse = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional CacheFileRequest cacheFileRequest = 27;
 * @return {?proto.gauge.messages.CacheFileRequest}
 */
proto.gauge.messages.Message.prototype.getCachefilerequest = function() {
  return /** @type{?proto.gauge.messages.CacheFileRequest} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.CacheFileRequest, 27));
};


/**
 * @param {?proto.gauge.messages.CacheFileRequest|undefined} value
 * @return {!proto.gauge.messages.Message} returns this
*/
proto.gauge.messages.Message.prototype.setCachefilerequest = function(value) {
  return jspb.Message.setWrapperField(this, 27, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.Message} returns this
 */
proto.gauge.messages.Message.prototype.clearCachefilerequest = function() {
  return this.setCachefilerequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.Message.prototype.hasCachefilerequest = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional StepPositionsRequest stepPositionsRequest = 28;
 * @return {?proto.gauge.messages.StepPositionsRequest}
 */
proto.gauge.messages.Message.prototype.getSteppositionsrequest = function() {
  return /** @type{?proto.gauge.messages.StepPositionsRequest} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.StepPositionsRequest, 28));
};


/**
 * @param {?proto.gauge.messages.StepPositionsRequest|undefined} value
 * @return {!proto.gauge.messages.Message} returns this
*/
proto.gauge.messages.Message.prototype.setSteppositionsrequest = function(value) {
  return jspb.Message.setWrapperField(this, 28, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.Message} returns this
 */
proto.gauge.messages.Message.prototype.clearSteppositionsrequest = function() {
  return this.setSteppositionsrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.Message.prototype.hasSteppositionsrequest = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional StepPositionsResponse stepPositionsResponse = 29;
 * @return {?proto.gauge.messages.StepPositionsResponse}
 */
proto.gauge.messages.Message.prototype.getSteppositionsresponse = function() {
  return /** @type{?proto.gauge.messages.StepPositionsResponse} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.StepPositionsResponse, 29));
};


/**
 * @param {?proto.gauge.messages.StepPositionsResponse|undefined} value
 * @return {!proto.gauge.messages.Message} returns this
*/
proto.gauge.messages.Message.prototype.setSteppositionsresponse = function(value) {
  return jspb.Message.setWrapperField(this, 29, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.Message} returns this
 */
proto.gauge.messages.Message.prototype.clearSteppositionsresponse = function() {
  return this.setSteppositionsresponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.Message.prototype.hasSteppositionsresponse = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional ImplementationFileListRequest implementationFileListRequest = 30;
 * @return {?proto.gauge.messages.ImplementationFileListRequest}
 */
proto.gauge.messages.Message.prototype.getImplementationfilelistrequest = function() {
  return /** @type{?proto.gauge.messages.ImplementationFileListRequest} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.ImplementationFileListRequest, 30));
};


/**
 * @param {?proto.gauge.messages.ImplementationFileListRequest|undefined} value
 * @return {!proto.gauge.messages.Message} returns this
*/
proto.gauge.messages.Message.prototype.setImplementationfilelistrequest = function(value) {
  return jspb.Message.setWrapperField(this, 30, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.Message} returns this
 */
proto.gauge.messages.Message.prototype.clearImplementationfilelistrequest = function() {
  return this.setImplementationfilelistrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.Message.prototype.hasImplementationfilelistrequest = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional ImplementationFileListResponse implementationFileListResponse = 31;
 * @return {?proto.gauge.messages.ImplementationFileListResponse}
 */
proto.gauge.messages.Message.prototype.getImplementationfilelistresponse = function() {
  return /** @type{?proto.gauge.messages.ImplementationFileListResponse} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.ImplementationFileListResponse, 31));
};


/**
 * @param {?proto.gauge.messages.ImplementationFileListResponse|undefined} value
 * @return {!proto.gauge.messages.Message} returns this
*/
proto.gauge.messages.Message.prototype.setImplementationfilelistresponse = function(value) {
  return jspb.Message.setWrapperField(this, 31, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.Message} returns this
 */
proto.gauge.messages.Message.prototype.clearImplementationfilelistresponse = function() {
  return this.setImplementationfilelistresponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.Message.prototype.hasImplementationfilelistresponse = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional StubImplementationCodeRequest stubImplementationCodeRequest = 32;
 * @return {?proto.gauge.messages.StubImplementationCodeRequest}
 */
proto.gauge.messages.Message.prototype.getStubimplementationcoderequest = function() {
  return /** @type{?proto.gauge.messages.StubImplementationCodeRequest} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.StubImplementationCodeRequest, 32));
};


/**
 * @param {?proto.gauge.messages.StubImplementationCodeRequest|undefined} value
 * @return {!proto.gauge.messages.Message} returns this
*/
proto.gauge.messages.Message.prototype.setStubimplementationcoderequest = function(value) {
  return jspb.Message.setWrapperField(this, 32, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.Message} returns this
 */
proto.gauge.messages.Message.prototype.clearStubimplementationcoderequest = function() {
  return this.setStubimplementationcoderequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.Message.prototype.hasStubimplementationcoderequest = function() {
  return jspb.Message.getField(this, 32) != null;
};


/**
 * optional FileDiff fileDiff = 33;
 * @return {?proto.gauge.messages.FileDiff}
 */
proto.gauge.messages.Message.prototype.getFilediff = function() {
  return /** @type{?proto.gauge.messages.FileDiff} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.FileDiff, 33));
};


/**
 * @param {?proto.gauge.messages.FileDiff|undefined} value
 * @return {!proto.gauge.messages.Message} returns this
*/
proto.gauge.messages.Message.prototype.setFilediff = function(value) {
  return jspb.Message.setWrapperField(this, 33, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.Message} returns this
 */
proto.gauge.messages.Message.prototype.clearFilediff = function() {
  return this.setFilediff(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.Message.prototype.hasFilediff = function() {
  return jspb.Message.getField(this, 33) != null;
};


/**
 * optional ImplementationFileGlobPatternRequest implementationFileGlobPatternRequest = 34;
 * @return {?proto.gauge.messages.ImplementationFileGlobPatternRequest}
 */
proto.gauge.messages.Message.prototype.getImplementationfileglobpatternrequest = function() {
  return /** @type{?proto.gauge.messages.ImplementationFileGlobPatternRequest} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.ImplementationFileGlobPatternRequest, 34));
};


/**
 * @param {?proto.gauge.messages.ImplementationFileGlobPatternRequest|undefined} value
 * @return {!proto.gauge.messages.Message} returns this
*/
proto.gauge.messages.Message.prototype.setImplementationfileglobpatternrequest = function(value) {
  return jspb.Message.setWrapperField(this, 34, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.Message} returns this
 */
proto.gauge.messages.Message.prototype.clearImplementationfileglobpatternrequest = function() {
  return this.setImplementationfileglobpatternrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.Message.prototype.hasImplementationfileglobpatternrequest = function() {
  return jspb.Message.getField(this, 34) != null;
};


/**
 * optional ImplementationFileGlobPatternResponse implementationFileGlobPatternResponse = 35;
 * @return {?proto.gauge.messages.ImplementationFileGlobPatternResponse}
 */
proto.gauge.messages.Message.prototype.getImplementationfileglobpatternresponse = function() {
  return /** @type{?proto.gauge.messages.ImplementationFileGlobPatternResponse} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.ImplementationFileGlobPatternResponse, 35));
};


/**
 * @param {?proto.gauge.messages.ImplementationFileGlobPatternResponse|undefined} value
 * @return {!proto.gauge.messages.Message} returns this
*/
proto.gauge.messages.Message.prototype.setImplementationfileglobpatternresponse = function(value) {
  return jspb.Message.setWrapperField(this, 35, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.Message} returns this
 */
proto.gauge.messages.Message.prototype.clearImplementationfileglobpatternresponse = function() {
  return this.setImplementationfileglobpatternresponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.Message.prototype.hasImplementationfileglobpatternresponse = function() {
  return jspb.Message.getField(this, 35) != null;
};


/**
 * optional SuiteExecutionResultItem suiteExecutionResultItem = 36;
 * @return {?proto.gauge.messages.SuiteExecutionResultItem}
 */
proto.gauge.messages.Message.prototype.getSuiteexecutionresultitem = function() {
  return /** @type{?proto.gauge.messages.SuiteExecutionResultItem} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.SuiteExecutionResultItem, 36));
};


/**
 * @param {?proto.gauge.messages.SuiteExecutionResultItem|undefined} value
 * @return {!proto.gauge.messages.Message} returns this
*/
proto.gauge.messages.Message.prototype.setSuiteexecutionresultitem = function(value) {
  return jspb.Message.setWrapperField(this, 36, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.Message} returns this
 */
proto.gauge.messages.Message.prototype.clearSuiteexecutionresultitem = function() {
  return this.setSuiteexecutionresultitem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.Message.prototype.hasSuiteexecutionresultitem = function() {
  return jspb.Message.getField(this, 36) != null;
};


/**
 * optional KeepAlive keepAlive = 37;
 * @return {?proto.gauge.messages.KeepAlive}
 */
proto.gauge.messages.Message.prototype.getKeepalive = function() {
  return /** @type{?proto.gauge.messages.KeepAlive} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.KeepAlive, 37));
};


/**
 * @param {?proto.gauge.messages.KeepAlive|undefined} value
 * @return {!proto.gauge.messages.Message} returns this
*/
proto.gauge.messages.Message.prototype.setKeepalive = function(value) {
  return jspb.Message.setWrapperField(this, 37, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.Message} returns this
 */
proto.gauge.messages.Message.prototype.clearKeepalive = function() {
  return this.setKeepalive(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.Message.prototype.hasKeepalive = function() {
  return jspb.Message.getField(this, 37) != null;
};


goog.object.extend(exports, proto.gauge.messages);
