// source: spec.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

goog.exportSymbol('proto.gauge.messages.Error', null, global);
goog.exportSymbol('proto.gauge.messages.Error.ErrorType', null, global);
goog.exportSymbol('proto.gauge.messages.ExecutionStatus', null, global);
goog.exportSymbol('proto.gauge.messages.Fragment', null, global);
goog.exportSymbol('proto.gauge.messages.Fragment.FragmentType', null, global);
goog.exportSymbol('proto.gauge.messages.Parameter', null, global);
goog.exportSymbol('proto.gauge.messages.Parameter.ParameterType', null, global);
goog.exportSymbol('proto.gauge.messages.ProtoComment', null, global);
goog.exportSymbol('proto.gauge.messages.ProtoConcept', null, global);
goog.exportSymbol('proto.gauge.messages.ProtoExecutionResult', null, global);
goog.exportSymbol('proto.gauge.messages.ProtoExecutionResult.ErrorType', null, global);
goog.exportSymbol('proto.gauge.messages.ProtoHookFailure', null, global);
goog.exportSymbol('proto.gauge.messages.ProtoItem', null, global);
goog.exportSymbol('proto.gauge.messages.ProtoItem.ItemType', null, global);
goog.exportSymbol('proto.gauge.messages.ProtoScenario', null, global);
goog.exportSymbol('proto.gauge.messages.ProtoScenarioResult', null, global);
goog.exportSymbol('proto.gauge.messages.ProtoSpec', null, global);
goog.exportSymbol('proto.gauge.messages.ProtoSpecResult', null, global);
goog.exportSymbol('proto.gauge.messages.ProtoStep', null, global);
goog.exportSymbol('proto.gauge.messages.ProtoStepExecutionResult', null, global);
goog.exportSymbol('proto.gauge.messages.ProtoStepResult', null, global);
goog.exportSymbol('proto.gauge.messages.ProtoStepValue', null, global);
goog.exportSymbol('proto.gauge.messages.ProtoSuiteResult', null, global);
goog.exportSymbol('proto.gauge.messages.ProtoTable', null, global);
goog.exportSymbol('proto.gauge.messages.ProtoTableDrivenScenario', null, global);
goog.exportSymbol('proto.gauge.messages.ProtoTableRow', null, global);
goog.exportSymbol('proto.gauge.messages.ProtoTags', null, global);
goog.exportSymbol('proto.gauge.messages.Span', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.ProtoSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gauge.messages.ProtoSpec.repeatedFields_, null);
};
goog.inherits(proto.gauge.messages.ProtoSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.ProtoSpec.displayName = 'proto.gauge.messages.ProtoSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.ProtoItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gauge.messages.ProtoItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.ProtoItem.displayName = 'proto.gauge.messages.ProtoItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.ProtoScenario = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gauge.messages.ProtoScenario.repeatedFields_, null);
};
goog.inherits(proto.gauge.messages.ProtoScenario, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.ProtoScenario.displayName = 'proto.gauge.messages.ProtoScenario';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.Span = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gauge.messages.Span, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.Span.displayName = 'proto.gauge.messages.Span';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.ProtoTableDrivenScenario = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gauge.messages.ProtoTableDrivenScenario, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.ProtoTableDrivenScenario.displayName = 'proto.gauge.messages.ProtoTableDrivenScenario';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.ProtoStep = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gauge.messages.ProtoStep.repeatedFields_, null);
};
goog.inherits(proto.gauge.messages.ProtoStep, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.ProtoStep.displayName = 'proto.gauge.messages.ProtoStep';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.ProtoConcept = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gauge.messages.ProtoConcept.repeatedFields_, null);
};
goog.inherits(proto.gauge.messages.ProtoConcept, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.ProtoConcept.displayName = 'proto.gauge.messages.ProtoConcept';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.ProtoTags = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gauge.messages.ProtoTags.repeatedFields_, null);
};
goog.inherits(proto.gauge.messages.ProtoTags, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.ProtoTags.displayName = 'proto.gauge.messages.ProtoTags';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.Fragment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gauge.messages.Fragment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.Fragment.displayName = 'proto.gauge.messages.Fragment';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.Parameter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gauge.messages.Parameter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.Parameter.displayName = 'proto.gauge.messages.Parameter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.ProtoComment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gauge.messages.ProtoComment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.ProtoComment.displayName = 'proto.gauge.messages.ProtoComment';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.ProtoTable = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gauge.messages.ProtoTable.repeatedFields_, null);
};
goog.inherits(proto.gauge.messages.ProtoTable, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.ProtoTable.displayName = 'proto.gauge.messages.ProtoTable';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.ProtoTableRow = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gauge.messages.ProtoTableRow.repeatedFields_, null);
};
goog.inherits(proto.gauge.messages.ProtoTableRow, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.ProtoTableRow.displayName = 'proto.gauge.messages.ProtoTableRow';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.ProtoStepExecutionResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gauge.messages.ProtoStepExecutionResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.ProtoStepExecutionResult.displayName = 'proto.gauge.messages.ProtoStepExecutionResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.ProtoExecutionResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gauge.messages.ProtoExecutionResult.repeatedFields_, null);
};
goog.inherits(proto.gauge.messages.ProtoExecutionResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.ProtoExecutionResult.displayName = 'proto.gauge.messages.ProtoExecutionResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.ProtoHookFailure = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gauge.messages.ProtoHookFailure, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.ProtoHookFailure.displayName = 'proto.gauge.messages.ProtoHookFailure';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.ProtoSuiteResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gauge.messages.ProtoSuiteResult.repeatedFields_, null);
};
goog.inherits(proto.gauge.messages.ProtoSuiteResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.ProtoSuiteResult.displayName = 'proto.gauge.messages.ProtoSuiteResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.ProtoSpecResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gauge.messages.ProtoSpecResult.repeatedFields_, null);
};
goog.inherits(proto.gauge.messages.ProtoSpecResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.ProtoSpecResult.displayName = 'proto.gauge.messages.ProtoSpecResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.ProtoScenarioResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gauge.messages.ProtoScenarioResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.ProtoScenarioResult.displayName = 'proto.gauge.messages.ProtoScenarioResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.ProtoStepResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gauge.messages.ProtoStepResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.ProtoStepResult.displayName = 'proto.gauge.messages.ProtoStepResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.Error = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gauge.messages.Error, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.Error.displayName = 'proto.gauge.messages.Error';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gauge.messages.ProtoStepValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gauge.messages.ProtoStepValue.repeatedFields_, null);
};
goog.inherits(proto.gauge.messages.ProtoStepValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gauge.messages.ProtoStepValue.displayName = 'proto.gauge.messages.ProtoStepValue';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gauge.messages.ProtoSpec.repeatedFields_ = [2,4,5,7,8,9,10,11,12,13,15,16];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.ProtoSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.ProtoSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.ProtoSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ProtoSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    specheading: jspb.Message.getFieldWithDefault(msg, 1, ""),
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.gauge.messages.ProtoItem.toObject, includeInstance),
    istabledriven: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    prehookfailuresList: jspb.Message.toObjectList(msg.getPrehookfailuresList(),
    proto.gauge.messages.ProtoHookFailure.toObject, includeInstance),
    posthookfailuresList: jspb.Message.toObjectList(msg.getPosthookfailuresList(),
    proto.gauge.messages.ProtoHookFailure.toObject, includeInstance),
    filename: jspb.Message.getFieldWithDefault(msg, 6, ""),
    tagsList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
    prehookmessagesList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    posthookmessagesList: (f = jspb.Message.getRepeatedField(msg, 9)) == null ? undefined : f,
    prehookmessageList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f,
    posthookmessageList: (f = jspb.Message.getRepeatedField(msg, 11)) == null ? undefined : f,
    prehookscreenshotsList: msg.getPrehookscreenshotsList_asB64(),
    posthookscreenshotsList: msg.getPosthookscreenshotsList_asB64(),
    itemcount: jspb.Message.getFieldWithDefault(msg, 14, 0),
    prehookscreenshotfilesList: (f = jspb.Message.getRepeatedField(msg, 15)) == null ? undefined : f,
    posthookscreenshotfilesList: (f = jspb.Message.getRepeatedField(msg, 16)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.ProtoSpec}
 */
proto.gauge.messages.ProtoSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.ProtoSpec;
  return proto.gauge.messages.ProtoSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.ProtoSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.ProtoSpec}
 */
proto.gauge.messages.ProtoSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSpecheading(value);
      break;
    case 2:
      var value = new proto.gauge.messages.ProtoItem;
      reader.readMessage(value,proto.gauge.messages.ProtoItem.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIstabledriven(value);
      break;
    case 4:
      var value = new proto.gauge.messages.ProtoHookFailure;
      reader.readMessage(value,proto.gauge.messages.ProtoHookFailure.deserializeBinaryFromReader);
      msg.addPrehookfailures(value);
      break;
    case 5:
      var value = new proto.gauge.messages.ProtoHookFailure;
      reader.readMessage(value,proto.gauge.messages.ProtoHookFailure.deserializeBinaryFromReader);
      msg.addPosthookfailures(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilename(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addPrehookmessages(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.addPosthookmessages(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addPrehookmessage(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.addPosthookmessage(value);
      break;
    case 12:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addPrehookscreenshots(value);
      break;
    case 13:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addPosthookscreenshots(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setItemcount(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.addPrehookscreenshotfiles(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.addPosthookscreenshotfiles(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.ProtoSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.ProtoSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.ProtoSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ProtoSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSpecheading();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.gauge.messages.ProtoItem.serializeBinaryToWriter
    );
  }
  f = message.getIstabledriven();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getPrehookfailuresList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.gauge.messages.ProtoHookFailure.serializeBinaryToWriter
    );
  }
  f = message.getPosthookfailuresList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.gauge.messages.ProtoHookFailure.serializeBinaryToWriter
    );
  }
  f = message.getFilename();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
  f = message.getPrehookmessagesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
  f = message.getPosthookmessagesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      9,
      f
    );
  }
  f = message.getPrehookmessageList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
  f = message.getPosthookmessageList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      11,
      f
    );
  }
  f = message.getPrehookscreenshotsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      12,
      f
    );
  }
  f = message.getPosthookscreenshotsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      13,
      f
    );
  }
  f = message.getItemcount();
  if (f !== 0) {
    writer.writeInt64(
      14,
      f
    );
  }
  f = message.getPrehookscreenshotfilesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      15,
      f
    );
  }
  f = message.getPosthookscreenshotfilesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      16,
      f
    );
  }
};


/**
 * optional string specHeading = 1;
 * @return {string}
 */
proto.gauge.messages.ProtoSpec.prototype.getSpecheading = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.ProtoSpec} returns this
 */
proto.gauge.messages.ProtoSpec.prototype.setSpecheading = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated ProtoItem items = 2;
 * @return {!Array<!proto.gauge.messages.ProtoItem>}
 */
proto.gauge.messages.ProtoSpec.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.gauge.messages.ProtoItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gauge.messages.ProtoItem, 2));
};


/**
 * @param {!Array<!proto.gauge.messages.ProtoItem>} value
 * @return {!proto.gauge.messages.ProtoSpec} returns this
*/
proto.gauge.messages.ProtoSpec.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.gauge.messages.ProtoItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ProtoItem}
 */
proto.gauge.messages.ProtoSpec.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.gauge.messages.ProtoItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoSpec} returns this
 */
proto.gauge.messages.ProtoSpec.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};


/**
 * optional bool isTableDriven = 3;
 * @return {boolean}
 */
proto.gauge.messages.ProtoSpec.prototype.getIstabledriven = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gauge.messages.ProtoSpec} returns this
 */
proto.gauge.messages.ProtoSpec.prototype.setIstabledriven = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * repeated ProtoHookFailure preHookFailures = 4;
 * @return {!Array<!proto.gauge.messages.ProtoHookFailure>}
 */
proto.gauge.messages.ProtoSpec.prototype.getPrehookfailuresList = function() {
  return /** @type{!Array<!proto.gauge.messages.ProtoHookFailure>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gauge.messages.ProtoHookFailure, 4));
};


/**
 * @param {!Array<!proto.gauge.messages.ProtoHookFailure>} value
 * @return {!proto.gauge.messages.ProtoSpec} returns this
*/
proto.gauge.messages.ProtoSpec.prototype.setPrehookfailuresList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.gauge.messages.ProtoHookFailure=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ProtoHookFailure}
 */
proto.gauge.messages.ProtoSpec.prototype.addPrehookfailures = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.gauge.messages.ProtoHookFailure, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoSpec} returns this
 */
proto.gauge.messages.ProtoSpec.prototype.clearPrehookfailuresList = function() {
  return this.setPrehookfailuresList([]);
};


/**
 * repeated ProtoHookFailure postHookFailures = 5;
 * @return {!Array<!proto.gauge.messages.ProtoHookFailure>}
 */
proto.gauge.messages.ProtoSpec.prototype.getPosthookfailuresList = function() {
  return /** @type{!Array<!proto.gauge.messages.ProtoHookFailure>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gauge.messages.ProtoHookFailure, 5));
};


/**
 * @param {!Array<!proto.gauge.messages.ProtoHookFailure>} value
 * @return {!proto.gauge.messages.ProtoSpec} returns this
*/
proto.gauge.messages.ProtoSpec.prototype.setPosthookfailuresList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.gauge.messages.ProtoHookFailure=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ProtoHookFailure}
 */
proto.gauge.messages.ProtoSpec.prototype.addPosthookfailures = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.gauge.messages.ProtoHookFailure, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoSpec} returns this
 */
proto.gauge.messages.ProtoSpec.prototype.clearPosthookfailuresList = function() {
  return this.setPosthookfailuresList([]);
};


/**
 * optional string fileName = 6;
 * @return {string}
 */
proto.gauge.messages.ProtoSpec.prototype.getFilename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.ProtoSpec} returns this
 */
proto.gauge.messages.ProtoSpec.prototype.setFilename = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * repeated string tags = 7;
 * @return {!Array<string>}
 */
proto.gauge.messages.ProtoSpec.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gauge.messages.ProtoSpec} returns this
 */
proto.gauge.messages.ProtoSpec.prototype.setTagsList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ProtoSpec} returns this
 */
proto.gauge.messages.ProtoSpec.prototype.addTags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoSpec} returns this
 */
proto.gauge.messages.ProtoSpec.prototype.clearTagsList = function() {
  return this.setTagsList([]);
};


/**
 * repeated string preHookMessages = 8;
 * @return {!Array<string>}
 */
proto.gauge.messages.ProtoSpec.prototype.getPrehookmessagesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gauge.messages.ProtoSpec} returns this
 */
proto.gauge.messages.ProtoSpec.prototype.setPrehookmessagesList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ProtoSpec} returns this
 */
proto.gauge.messages.ProtoSpec.prototype.addPrehookmessages = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoSpec} returns this
 */
proto.gauge.messages.ProtoSpec.prototype.clearPrehookmessagesList = function() {
  return this.setPrehookmessagesList([]);
};


/**
 * repeated string postHookMessages = 9;
 * @return {!Array<string>}
 */
proto.gauge.messages.ProtoSpec.prototype.getPosthookmessagesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 9));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gauge.messages.ProtoSpec} returns this
 */
proto.gauge.messages.ProtoSpec.prototype.setPosthookmessagesList = function(value) {
  return jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ProtoSpec} returns this
 */
proto.gauge.messages.ProtoSpec.prototype.addPosthookmessages = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoSpec} returns this
 */
proto.gauge.messages.ProtoSpec.prototype.clearPosthookmessagesList = function() {
  return this.setPosthookmessagesList([]);
};


/**
 * repeated string preHookMessage = 10;
 * @return {!Array<string>}
 */
proto.gauge.messages.ProtoSpec.prototype.getPrehookmessageList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gauge.messages.ProtoSpec} returns this
 */
proto.gauge.messages.ProtoSpec.prototype.setPrehookmessageList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ProtoSpec} returns this
 */
proto.gauge.messages.ProtoSpec.prototype.addPrehookmessage = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoSpec} returns this
 */
proto.gauge.messages.ProtoSpec.prototype.clearPrehookmessageList = function() {
  return this.setPrehookmessageList([]);
};


/**
 * repeated string postHookMessage = 11;
 * @return {!Array<string>}
 */
proto.gauge.messages.ProtoSpec.prototype.getPosthookmessageList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 11));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gauge.messages.ProtoSpec} returns this
 */
proto.gauge.messages.ProtoSpec.prototype.setPosthookmessageList = function(value) {
  return jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ProtoSpec} returns this
 */
proto.gauge.messages.ProtoSpec.prototype.addPosthookmessage = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoSpec} returns this
 */
proto.gauge.messages.ProtoSpec.prototype.clearPosthookmessageList = function() {
  return this.setPosthookmessageList([]);
};


/**
 * repeated bytes preHookScreenshots = 12;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.gauge.messages.ProtoSpec.prototype.getPrehookscreenshotsList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 12));
};


/**
 * repeated bytes preHookScreenshots = 12;
 * This is a type-conversion wrapper around `getPrehookscreenshotsList()`
 * @return {!Array<string>}
 */
proto.gauge.messages.ProtoSpec.prototype.getPrehookscreenshotsList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getPrehookscreenshotsList()));
};


/**
 * repeated bytes preHookScreenshots = 12;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPrehookscreenshotsList()`
 * @return {!Array<!Uint8Array>}
 */
proto.gauge.messages.ProtoSpec.prototype.getPrehookscreenshotsList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getPrehookscreenshotsList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.gauge.messages.ProtoSpec} returns this
 */
proto.gauge.messages.ProtoSpec.prototype.setPrehookscreenshotsList = function(value) {
  return jspb.Message.setField(this, 12, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ProtoSpec} returns this
 */
proto.gauge.messages.ProtoSpec.prototype.addPrehookscreenshots = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 12, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoSpec} returns this
 */
proto.gauge.messages.ProtoSpec.prototype.clearPrehookscreenshotsList = function() {
  return this.setPrehookscreenshotsList([]);
};


/**
 * repeated bytes postHookScreenshots = 13;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.gauge.messages.ProtoSpec.prototype.getPosthookscreenshotsList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 13));
};


/**
 * repeated bytes postHookScreenshots = 13;
 * This is a type-conversion wrapper around `getPosthookscreenshotsList()`
 * @return {!Array<string>}
 */
proto.gauge.messages.ProtoSpec.prototype.getPosthookscreenshotsList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getPosthookscreenshotsList()));
};


/**
 * repeated bytes postHookScreenshots = 13;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPosthookscreenshotsList()`
 * @return {!Array<!Uint8Array>}
 */
proto.gauge.messages.ProtoSpec.prototype.getPosthookscreenshotsList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getPosthookscreenshotsList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.gauge.messages.ProtoSpec} returns this
 */
proto.gauge.messages.ProtoSpec.prototype.setPosthookscreenshotsList = function(value) {
  return jspb.Message.setField(this, 13, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ProtoSpec} returns this
 */
proto.gauge.messages.ProtoSpec.prototype.addPosthookscreenshots = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 13, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoSpec} returns this
 */
proto.gauge.messages.ProtoSpec.prototype.clearPosthookscreenshotsList = function() {
  return this.setPosthookscreenshotsList([]);
};


/**
 * optional int64 itemCount = 14;
 * @return {number}
 */
proto.gauge.messages.ProtoSpec.prototype.getItemcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.gauge.messages.ProtoSpec} returns this
 */
proto.gauge.messages.ProtoSpec.prototype.setItemcount = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * repeated string preHookScreenshotFiles = 15;
 * @return {!Array<string>}
 */
proto.gauge.messages.ProtoSpec.prototype.getPrehookscreenshotfilesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 15));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gauge.messages.ProtoSpec} returns this
 */
proto.gauge.messages.ProtoSpec.prototype.setPrehookscreenshotfilesList = function(value) {
  return jspb.Message.setField(this, 15, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ProtoSpec} returns this
 */
proto.gauge.messages.ProtoSpec.prototype.addPrehookscreenshotfiles = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 15, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoSpec} returns this
 */
proto.gauge.messages.ProtoSpec.prototype.clearPrehookscreenshotfilesList = function() {
  return this.setPrehookscreenshotfilesList([]);
};


/**
 * repeated string postHookScreenshotFiles = 16;
 * @return {!Array<string>}
 */
proto.gauge.messages.ProtoSpec.prototype.getPosthookscreenshotfilesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 16));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gauge.messages.ProtoSpec} returns this
 */
proto.gauge.messages.ProtoSpec.prototype.setPosthookscreenshotfilesList = function(value) {
  return jspb.Message.setField(this, 16, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ProtoSpec} returns this
 */
proto.gauge.messages.ProtoSpec.prototype.addPosthookscreenshotfiles = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 16, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoSpec} returns this
 */
proto.gauge.messages.ProtoSpec.prototype.clearPosthookscreenshotfilesList = function() {
  return this.setPosthookscreenshotfilesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.ProtoItem.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.ProtoItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.ProtoItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ProtoItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemtype: jspb.Message.getFieldWithDefault(msg, 1, 0),
    step: (f = msg.getStep()) && proto.gauge.messages.ProtoStep.toObject(includeInstance, f),
    concept: (f = msg.getConcept()) && proto.gauge.messages.ProtoConcept.toObject(includeInstance, f),
    scenario: (f = msg.getScenario()) && proto.gauge.messages.ProtoScenario.toObject(includeInstance, f),
    tabledrivenscenario: (f = msg.getTabledrivenscenario()) && proto.gauge.messages.ProtoTableDrivenScenario.toObject(includeInstance, f),
    comment: (f = msg.getComment()) && proto.gauge.messages.ProtoComment.toObject(includeInstance, f),
    table: (f = msg.getTable()) && proto.gauge.messages.ProtoTable.toObject(includeInstance, f),
    tags: (f = msg.getTags()) && proto.gauge.messages.ProtoTags.toObject(includeInstance, f),
    filename: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.ProtoItem}
 */
proto.gauge.messages.ProtoItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.ProtoItem;
  return proto.gauge.messages.ProtoItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.ProtoItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.ProtoItem}
 */
proto.gauge.messages.ProtoItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.gauge.messages.ProtoItem.ItemType} */ (reader.readEnum());
      msg.setItemtype(value);
      break;
    case 2:
      var value = new proto.gauge.messages.ProtoStep;
      reader.readMessage(value,proto.gauge.messages.ProtoStep.deserializeBinaryFromReader);
      msg.setStep(value);
      break;
    case 3:
      var value = new proto.gauge.messages.ProtoConcept;
      reader.readMessage(value,proto.gauge.messages.ProtoConcept.deserializeBinaryFromReader);
      msg.setConcept(value);
      break;
    case 4:
      var value = new proto.gauge.messages.ProtoScenario;
      reader.readMessage(value,proto.gauge.messages.ProtoScenario.deserializeBinaryFromReader);
      msg.setScenario(value);
      break;
    case 5:
      var value = new proto.gauge.messages.ProtoTableDrivenScenario;
      reader.readMessage(value,proto.gauge.messages.ProtoTableDrivenScenario.deserializeBinaryFromReader);
      msg.setTabledrivenscenario(value);
      break;
    case 6:
      var value = new proto.gauge.messages.ProtoComment;
      reader.readMessage(value,proto.gauge.messages.ProtoComment.deserializeBinaryFromReader);
      msg.setComment(value);
      break;
    case 7:
      var value = new proto.gauge.messages.ProtoTable;
      reader.readMessage(value,proto.gauge.messages.ProtoTable.deserializeBinaryFromReader);
      msg.setTable(value);
      break;
    case 8:
      var value = new proto.gauge.messages.ProtoTags;
      reader.readMessage(value,proto.gauge.messages.ProtoTags.deserializeBinaryFromReader);
      msg.setTags(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilename(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.ProtoItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.ProtoItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.ProtoItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ProtoItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemtype();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getStep();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gauge.messages.ProtoStep.serializeBinaryToWriter
    );
  }
  f = message.getConcept();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.gauge.messages.ProtoConcept.serializeBinaryToWriter
    );
  }
  f = message.getScenario();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.gauge.messages.ProtoScenario.serializeBinaryToWriter
    );
  }
  f = message.getTabledrivenscenario();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.gauge.messages.ProtoTableDrivenScenario.serializeBinaryToWriter
    );
  }
  f = message.getComment();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.gauge.messages.ProtoComment.serializeBinaryToWriter
    );
  }
  f = message.getTable();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.gauge.messages.ProtoTable.serializeBinaryToWriter
    );
  }
  f = message.getTags();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.gauge.messages.ProtoTags.serializeBinaryToWriter
    );
  }
  f = message.getFilename();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.gauge.messages.ProtoItem.ItemType = {
  STEP: 0,
  COMMENT: 1,
  CONCEPT: 2,
  SCENARIO: 3,
  TABLEDRIVENSCENARIO: 4,
  TABLE: 5,
  TAGS: 6
};

/**
 * optional ItemType itemType = 1;
 * @return {!proto.gauge.messages.ProtoItem.ItemType}
 */
proto.gauge.messages.ProtoItem.prototype.getItemtype = function() {
  return /** @type {!proto.gauge.messages.ProtoItem.ItemType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.gauge.messages.ProtoItem.ItemType} value
 * @return {!proto.gauge.messages.ProtoItem} returns this
 */
proto.gauge.messages.ProtoItem.prototype.setItemtype = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional ProtoStep step = 2;
 * @return {?proto.gauge.messages.ProtoStep}
 */
proto.gauge.messages.ProtoItem.prototype.getStep = function() {
  return /** @type{?proto.gauge.messages.ProtoStep} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.ProtoStep, 2));
};


/**
 * @param {?proto.gauge.messages.ProtoStep|undefined} value
 * @return {!proto.gauge.messages.ProtoItem} returns this
*/
proto.gauge.messages.ProtoItem.prototype.setStep = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.ProtoItem} returns this
 */
proto.gauge.messages.ProtoItem.prototype.clearStep = function() {
  return this.setStep(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.ProtoItem.prototype.hasStep = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ProtoConcept concept = 3;
 * @return {?proto.gauge.messages.ProtoConcept}
 */
proto.gauge.messages.ProtoItem.prototype.getConcept = function() {
  return /** @type{?proto.gauge.messages.ProtoConcept} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.ProtoConcept, 3));
};


/**
 * @param {?proto.gauge.messages.ProtoConcept|undefined} value
 * @return {!proto.gauge.messages.ProtoItem} returns this
*/
proto.gauge.messages.ProtoItem.prototype.setConcept = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.ProtoItem} returns this
 */
proto.gauge.messages.ProtoItem.prototype.clearConcept = function() {
  return this.setConcept(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.ProtoItem.prototype.hasConcept = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ProtoScenario scenario = 4;
 * @return {?proto.gauge.messages.ProtoScenario}
 */
proto.gauge.messages.ProtoItem.prototype.getScenario = function() {
  return /** @type{?proto.gauge.messages.ProtoScenario} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.ProtoScenario, 4));
};


/**
 * @param {?proto.gauge.messages.ProtoScenario|undefined} value
 * @return {!proto.gauge.messages.ProtoItem} returns this
*/
proto.gauge.messages.ProtoItem.prototype.setScenario = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.ProtoItem} returns this
 */
proto.gauge.messages.ProtoItem.prototype.clearScenario = function() {
  return this.setScenario(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.ProtoItem.prototype.hasScenario = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ProtoTableDrivenScenario tableDrivenScenario = 5;
 * @return {?proto.gauge.messages.ProtoTableDrivenScenario}
 */
proto.gauge.messages.ProtoItem.prototype.getTabledrivenscenario = function() {
  return /** @type{?proto.gauge.messages.ProtoTableDrivenScenario} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.ProtoTableDrivenScenario, 5));
};


/**
 * @param {?proto.gauge.messages.ProtoTableDrivenScenario|undefined} value
 * @return {!proto.gauge.messages.ProtoItem} returns this
*/
proto.gauge.messages.ProtoItem.prototype.setTabledrivenscenario = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.ProtoItem} returns this
 */
proto.gauge.messages.ProtoItem.prototype.clearTabledrivenscenario = function() {
  return this.setTabledrivenscenario(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.ProtoItem.prototype.hasTabledrivenscenario = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ProtoComment comment = 6;
 * @return {?proto.gauge.messages.ProtoComment}
 */
proto.gauge.messages.ProtoItem.prototype.getComment = function() {
  return /** @type{?proto.gauge.messages.ProtoComment} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.ProtoComment, 6));
};


/**
 * @param {?proto.gauge.messages.ProtoComment|undefined} value
 * @return {!proto.gauge.messages.ProtoItem} returns this
*/
proto.gauge.messages.ProtoItem.prototype.setComment = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.ProtoItem} returns this
 */
proto.gauge.messages.ProtoItem.prototype.clearComment = function() {
  return this.setComment(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.ProtoItem.prototype.hasComment = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional ProtoTable table = 7;
 * @return {?proto.gauge.messages.ProtoTable}
 */
proto.gauge.messages.ProtoItem.prototype.getTable = function() {
  return /** @type{?proto.gauge.messages.ProtoTable} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.ProtoTable, 7));
};


/**
 * @param {?proto.gauge.messages.ProtoTable|undefined} value
 * @return {!proto.gauge.messages.ProtoItem} returns this
*/
proto.gauge.messages.ProtoItem.prototype.setTable = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.ProtoItem} returns this
 */
proto.gauge.messages.ProtoItem.prototype.clearTable = function() {
  return this.setTable(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.ProtoItem.prototype.hasTable = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional ProtoTags tags = 8;
 * @return {?proto.gauge.messages.ProtoTags}
 */
proto.gauge.messages.ProtoItem.prototype.getTags = function() {
  return /** @type{?proto.gauge.messages.ProtoTags} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.ProtoTags, 8));
};


/**
 * @param {?proto.gauge.messages.ProtoTags|undefined} value
 * @return {!proto.gauge.messages.ProtoItem} returns this
*/
proto.gauge.messages.ProtoItem.prototype.setTags = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.ProtoItem} returns this
 */
proto.gauge.messages.ProtoItem.prototype.clearTags = function() {
  return this.setTags(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.ProtoItem.prototype.hasTags = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string fileName = 9;
 * @return {string}
 */
proto.gauge.messages.ProtoItem.prototype.getFilename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.ProtoItem} returns this
 */
proto.gauge.messages.ProtoItem.prototype.setFilename = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gauge.messages.ProtoScenario.repeatedFields_ = [3,4,7,10,12,15,16,17,18,19,20,21,22];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.ProtoScenario.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.ProtoScenario.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.ProtoScenario} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ProtoScenario.toObject = function(includeInstance, msg) {
  var f, obj = {
    scenarioheading: jspb.Message.getFieldWithDefault(msg, 1, ""),
    failed: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    contextsList: jspb.Message.toObjectList(msg.getContextsList(),
    proto.gauge.messages.ProtoItem.toObject, includeInstance),
    scenarioitemsList: jspb.Message.toObjectList(msg.getScenarioitemsList(),
    proto.gauge.messages.ProtoItem.toObject, includeInstance),
    prehookfailure: (f = msg.getPrehookfailure()) && proto.gauge.messages.ProtoHookFailure.toObject(includeInstance, f),
    posthookfailure: (f = msg.getPosthookfailure()) && proto.gauge.messages.ProtoHookFailure.toObject(includeInstance, f),
    tagsList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
    executiontime: jspb.Message.getFieldWithDefault(msg, 8, 0),
    skipped: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    skiperrorsList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f,
    id: jspb.Message.getFieldWithDefault(msg, 11, ""),
    teardownstepsList: jspb.Message.toObjectList(msg.getTeardownstepsList(),
    proto.gauge.messages.ProtoItem.toObject, includeInstance),
    span: (f = msg.getSpan()) && proto.gauge.messages.Span.toObject(includeInstance, f),
    executionstatus: jspb.Message.getFieldWithDefault(msg, 14, 0),
    prehookmessagesList: (f = jspb.Message.getRepeatedField(msg, 15)) == null ? undefined : f,
    posthookmessagesList: (f = jspb.Message.getRepeatedField(msg, 16)) == null ? undefined : f,
    prehookmessageList: (f = jspb.Message.getRepeatedField(msg, 17)) == null ? undefined : f,
    posthookmessageList: (f = jspb.Message.getRepeatedField(msg, 18)) == null ? undefined : f,
    prehookscreenshotsList: msg.getPrehookscreenshotsList_asB64(),
    posthookscreenshotsList: msg.getPosthookscreenshotsList_asB64(),
    prehookscreenshotfilesList: (f = jspb.Message.getRepeatedField(msg, 21)) == null ? undefined : f,
    posthookscreenshotfilesList: (f = jspb.Message.getRepeatedField(msg, 22)) == null ? undefined : f,
    retriescount: jspb.Message.getFieldWithDefault(msg, 23, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.ProtoScenario}
 */
proto.gauge.messages.ProtoScenario.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.ProtoScenario;
  return proto.gauge.messages.ProtoScenario.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.ProtoScenario} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.ProtoScenario}
 */
proto.gauge.messages.ProtoScenario.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setScenarioheading(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFailed(value);
      break;
    case 3:
      var value = new proto.gauge.messages.ProtoItem;
      reader.readMessage(value,proto.gauge.messages.ProtoItem.deserializeBinaryFromReader);
      msg.addContexts(value);
      break;
    case 4:
      var value = new proto.gauge.messages.ProtoItem;
      reader.readMessage(value,proto.gauge.messages.ProtoItem.deserializeBinaryFromReader);
      msg.addScenarioitems(value);
      break;
    case 5:
      var value = new proto.gauge.messages.ProtoHookFailure;
      reader.readMessage(value,proto.gauge.messages.ProtoHookFailure.deserializeBinaryFromReader);
      msg.setPrehookfailure(value);
      break;
    case 6:
      var value = new proto.gauge.messages.ProtoHookFailure;
      reader.readMessage(value,proto.gauge.messages.ProtoHookFailure.deserializeBinaryFromReader);
      msg.setPosthookfailure(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExecutiontime(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSkipped(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addSkiperrors(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 12:
      var value = new proto.gauge.messages.ProtoItem;
      reader.readMessage(value,proto.gauge.messages.ProtoItem.deserializeBinaryFromReader);
      msg.addTeardownsteps(value);
      break;
    case 13:
      var value = new proto.gauge.messages.Span;
      reader.readMessage(value,proto.gauge.messages.Span.deserializeBinaryFromReader);
      msg.setSpan(value);
      break;
    case 14:
      var value = /** @type {!proto.gauge.messages.ExecutionStatus} */ (reader.readEnum());
      msg.setExecutionstatus(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.addPrehookmessages(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.addPosthookmessages(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.addPrehookmessage(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.addPosthookmessage(value);
      break;
    case 19:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addPrehookscreenshots(value);
      break;
    case 20:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addPosthookscreenshots(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.addPrehookscreenshotfiles(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.addPosthookscreenshotfiles(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRetriescount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.ProtoScenario.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.ProtoScenario.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.ProtoScenario} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ProtoScenario.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScenarioheading();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFailed();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getContextsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.gauge.messages.ProtoItem.serializeBinaryToWriter
    );
  }
  f = message.getScenarioitemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.gauge.messages.ProtoItem.serializeBinaryToWriter
    );
  }
  f = message.getPrehookfailure();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.gauge.messages.ProtoHookFailure.serializeBinaryToWriter
    );
  }
  f = message.getPosthookfailure();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.gauge.messages.ProtoHookFailure.serializeBinaryToWriter
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
  f = message.getExecutiontime();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getSkipped();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getSkiperrorsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getTeardownstepsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      12,
      f,
      proto.gauge.messages.ProtoItem.serializeBinaryToWriter
    );
  }
  f = message.getSpan();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.gauge.messages.Span.serializeBinaryToWriter
    );
  }
  f = message.getExecutionstatus();
  if (f !== 0.0) {
    writer.writeEnum(
      14,
      f
    );
  }
  f = message.getPrehookmessagesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      15,
      f
    );
  }
  f = message.getPosthookmessagesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      16,
      f
    );
  }
  f = message.getPrehookmessageList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      17,
      f
    );
  }
  f = message.getPosthookmessageList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      18,
      f
    );
  }
  f = message.getPrehookscreenshotsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      19,
      f
    );
  }
  f = message.getPosthookscreenshotsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      20,
      f
    );
  }
  f = message.getPrehookscreenshotfilesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      21,
      f
    );
  }
  f = message.getPosthookscreenshotfilesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      22,
      f
    );
  }
  f = message.getRetriescount();
  if (f !== 0) {
    writer.writeInt64(
      23,
      f
    );
  }
};


/**
 * optional string scenarioHeading = 1;
 * @return {string}
 */
proto.gauge.messages.ProtoScenario.prototype.getScenarioheading = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.ProtoScenario} returns this
 */
proto.gauge.messages.ProtoScenario.prototype.setScenarioheading = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool failed = 2;
 * @return {boolean}
 */
proto.gauge.messages.ProtoScenario.prototype.getFailed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gauge.messages.ProtoScenario} returns this
 */
proto.gauge.messages.ProtoScenario.prototype.setFailed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * repeated ProtoItem contexts = 3;
 * @return {!Array<!proto.gauge.messages.ProtoItem>}
 */
proto.gauge.messages.ProtoScenario.prototype.getContextsList = function() {
  return /** @type{!Array<!proto.gauge.messages.ProtoItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gauge.messages.ProtoItem, 3));
};


/**
 * @param {!Array<!proto.gauge.messages.ProtoItem>} value
 * @return {!proto.gauge.messages.ProtoScenario} returns this
*/
proto.gauge.messages.ProtoScenario.prototype.setContextsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.gauge.messages.ProtoItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ProtoItem}
 */
proto.gauge.messages.ProtoScenario.prototype.addContexts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.gauge.messages.ProtoItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoScenario} returns this
 */
proto.gauge.messages.ProtoScenario.prototype.clearContextsList = function() {
  return this.setContextsList([]);
};


/**
 * repeated ProtoItem scenarioItems = 4;
 * @return {!Array<!proto.gauge.messages.ProtoItem>}
 */
proto.gauge.messages.ProtoScenario.prototype.getScenarioitemsList = function() {
  return /** @type{!Array<!proto.gauge.messages.ProtoItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gauge.messages.ProtoItem, 4));
};


/**
 * @param {!Array<!proto.gauge.messages.ProtoItem>} value
 * @return {!proto.gauge.messages.ProtoScenario} returns this
*/
proto.gauge.messages.ProtoScenario.prototype.setScenarioitemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.gauge.messages.ProtoItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ProtoItem}
 */
proto.gauge.messages.ProtoScenario.prototype.addScenarioitems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.gauge.messages.ProtoItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoScenario} returns this
 */
proto.gauge.messages.ProtoScenario.prototype.clearScenarioitemsList = function() {
  return this.setScenarioitemsList([]);
};


/**
 * optional ProtoHookFailure preHookFailure = 5;
 * @return {?proto.gauge.messages.ProtoHookFailure}
 */
proto.gauge.messages.ProtoScenario.prototype.getPrehookfailure = function() {
  return /** @type{?proto.gauge.messages.ProtoHookFailure} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.ProtoHookFailure, 5));
};


/**
 * @param {?proto.gauge.messages.ProtoHookFailure|undefined} value
 * @return {!proto.gauge.messages.ProtoScenario} returns this
*/
proto.gauge.messages.ProtoScenario.prototype.setPrehookfailure = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.ProtoScenario} returns this
 */
proto.gauge.messages.ProtoScenario.prototype.clearPrehookfailure = function() {
  return this.setPrehookfailure(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.ProtoScenario.prototype.hasPrehookfailure = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ProtoHookFailure postHookFailure = 6;
 * @return {?proto.gauge.messages.ProtoHookFailure}
 */
proto.gauge.messages.ProtoScenario.prototype.getPosthookfailure = function() {
  return /** @type{?proto.gauge.messages.ProtoHookFailure} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.ProtoHookFailure, 6));
};


/**
 * @param {?proto.gauge.messages.ProtoHookFailure|undefined} value
 * @return {!proto.gauge.messages.ProtoScenario} returns this
*/
proto.gauge.messages.ProtoScenario.prototype.setPosthookfailure = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.ProtoScenario} returns this
 */
proto.gauge.messages.ProtoScenario.prototype.clearPosthookfailure = function() {
  return this.setPosthookfailure(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.ProtoScenario.prototype.hasPosthookfailure = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated string tags = 7;
 * @return {!Array<string>}
 */
proto.gauge.messages.ProtoScenario.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gauge.messages.ProtoScenario} returns this
 */
proto.gauge.messages.ProtoScenario.prototype.setTagsList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ProtoScenario} returns this
 */
proto.gauge.messages.ProtoScenario.prototype.addTags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoScenario} returns this
 */
proto.gauge.messages.ProtoScenario.prototype.clearTagsList = function() {
  return this.setTagsList([]);
};


/**
 * optional int64 executionTime = 8;
 * @return {number}
 */
proto.gauge.messages.ProtoScenario.prototype.getExecutiontime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.gauge.messages.ProtoScenario} returns this
 */
proto.gauge.messages.ProtoScenario.prototype.setExecutiontime = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional bool skipped = 9;
 * @return {boolean}
 */
proto.gauge.messages.ProtoScenario.prototype.getSkipped = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gauge.messages.ProtoScenario} returns this
 */
proto.gauge.messages.ProtoScenario.prototype.setSkipped = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * repeated string skipErrors = 10;
 * @return {!Array<string>}
 */
proto.gauge.messages.ProtoScenario.prototype.getSkiperrorsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gauge.messages.ProtoScenario} returns this
 */
proto.gauge.messages.ProtoScenario.prototype.setSkiperrorsList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ProtoScenario} returns this
 */
proto.gauge.messages.ProtoScenario.prototype.addSkiperrors = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoScenario} returns this
 */
proto.gauge.messages.ProtoScenario.prototype.clearSkiperrorsList = function() {
  return this.setSkiperrorsList([]);
};


/**
 * optional string ID = 11;
 * @return {string}
 */
proto.gauge.messages.ProtoScenario.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.ProtoScenario} returns this
 */
proto.gauge.messages.ProtoScenario.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * repeated ProtoItem tearDownSteps = 12;
 * @return {!Array<!proto.gauge.messages.ProtoItem>}
 */
proto.gauge.messages.ProtoScenario.prototype.getTeardownstepsList = function() {
  return /** @type{!Array<!proto.gauge.messages.ProtoItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gauge.messages.ProtoItem, 12));
};


/**
 * @param {!Array<!proto.gauge.messages.ProtoItem>} value
 * @return {!proto.gauge.messages.ProtoScenario} returns this
*/
proto.gauge.messages.ProtoScenario.prototype.setTeardownstepsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 12, value);
};


/**
 * @param {!proto.gauge.messages.ProtoItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ProtoItem}
 */
proto.gauge.messages.ProtoScenario.prototype.addTeardownsteps = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 12, opt_value, proto.gauge.messages.ProtoItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoScenario} returns this
 */
proto.gauge.messages.ProtoScenario.prototype.clearTeardownstepsList = function() {
  return this.setTeardownstepsList([]);
};


/**
 * optional Span span = 13;
 * @return {?proto.gauge.messages.Span}
 */
proto.gauge.messages.ProtoScenario.prototype.getSpan = function() {
  return /** @type{?proto.gauge.messages.Span} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.Span, 13));
};


/**
 * @param {?proto.gauge.messages.Span|undefined} value
 * @return {!proto.gauge.messages.ProtoScenario} returns this
*/
proto.gauge.messages.ProtoScenario.prototype.setSpan = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.ProtoScenario} returns this
 */
proto.gauge.messages.ProtoScenario.prototype.clearSpan = function() {
  return this.setSpan(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.ProtoScenario.prototype.hasSpan = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional ExecutionStatus executionStatus = 14;
 * @return {!proto.gauge.messages.ExecutionStatus}
 */
proto.gauge.messages.ProtoScenario.prototype.getExecutionstatus = function() {
  return /** @type {!proto.gauge.messages.ExecutionStatus} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {!proto.gauge.messages.ExecutionStatus} value
 * @return {!proto.gauge.messages.ProtoScenario} returns this
 */
proto.gauge.messages.ProtoScenario.prototype.setExecutionstatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 14, value);
};


/**
 * repeated string preHookMessages = 15;
 * @return {!Array<string>}
 */
proto.gauge.messages.ProtoScenario.prototype.getPrehookmessagesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 15));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gauge.messages.ProtoScenario} returns this
 */
proto.gauge.messages.ProtoScenario.prototype.setPrehookmessagesList = function(value) {
  return jspb.Message.setField(this, 15, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ProtoScenario} returns this
 */
proto.gauge.messages.ProtoScenario.prototype.addPrehookmessages = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 15, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoScenario} returns this
 */
proto.gauge.messages.ProtoScenario.prototype.clearPrehookmessagesList = function() {
  return this.setPrehookmessagesList([]);
};


/**
 * repeated string postHookMessages = 16;
 * @return {!Array<string>}
 */
proto.gauge.messages.ProtoScenario.prototype.getPosthookmessagesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 16));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gauge.messages.ProtoScenario} returns this
 */
proto.gauge.messages.ProtoScenario.prototype.setPosthookmessagesList = function(value) {
  return jspb.Message.setField(this, 16, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ProtoScenario} returns this
 */
proto.gauge.messages.ProtoScenario.prototype.addPosthookmessages = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 16, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoScenario} returns this
 */
proto.gauge.messages.ProtoScenario.prototype.clearPosthookmessagesList = function() {
  return this.setPosthookmessagesList([]);
};


/**
 * repeated string preHookMessage = 17;
 * @return {!Array<string>}
 */
proto.gauge.messages.ProtoScenario.prototype.getPrehookmessageList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 17));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gauge.messages.ProtoScenario} returns this
 */
proto.gauge.messages.ProtoScenario.prototype.setPrehookmessageList = function(value) {
  return jspb.Message.setField(this, 17, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ProtoScenario} returns this
 */
proto.gauge.messages.ProtoScenario.prototype.addPrehookmessage = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 17, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoScenario} returns this
 */
proto.gauge.messages.ProtoScenario.prototype.clearPrehookmessageList = function() {
  return this.setPrehookmessageList([]);
};


/**
 * repeated string postHookMessage = 18;
 * @return {!Array<string>}
 */
proto.gauge.messages.ProtoScenario.prototype.getPosthookmessageList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 18));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gauge.messages.ProtoScenario} returns this
 */
proto.gauge.messages.ProtoScenario.prototype.setPosthookmessageList = function(value) {
  return jspb.Message.setField(this, 18, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ProtoScenario} returns this
 */
proto.gauge.messages.ProtoScenario.prototype.addPosthookmessage = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 18, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoScenario} returns this
 */
proto.gauge.messages.ProtoScenario.prototype.clearPosthookmessageList = function() {
  return this.setPosthookmessageList([]);
};


/**
 * repeated bytes preHookScreenshots = 19;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.gauge.messages.ProtoScenario.prototype.getPrehookscreenshotsList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 19));
};


/**
 * repeated bytes preHookScreenshots = 19;
 * This is a type-conversion wrapper around `getPrehookscreenshotsList()`
 * @return {!Array<string>}
 */
proto.gauge.messages.ProtoScenario.prototype.getPrehookscreenshotsList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getPrehookscreenshotsList()));
};


/**
 * repeated bytes preHookScreenshots = 19;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPrehookscreenshotsList()`
 * @return {!Array<!Uint8Array>}
 */
proto.gauge.messages.ProtoScenario.prototype.getPrehookscreenshotsList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getPrehookscreenshotsList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.gauge.messages.ProtoScenario} returns this
 */
proto.gauge.messages.ProtoScenario.prototype.setPrehookscreenshotsList = function(value) {
  return jspb.Message.setField(this, 19, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ProtoScenario} returns this
 */
proto.gauge.messages.ProtoScenario.prototype.addPrehookscreenshots = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 19, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoScenario} returns this
 */
proto.gauge.messages.ProtoScenario.prototype.clearPrehookscreenshotsList = function() {
  return this.setPrehookscreenshotsList([]);
};


/**
 * repeated bytes postHookScreenshots = 20;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.gauge.messages.ProtoScenario.prototype.getPosthookscreenshotsList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 20));
};


/**
 * repeated bytes postHookScreenshots = 20;
 * This is a type-conversion wrapper around `getPosthookscreenshotsList()`
 * @return {!Array<string>}
 */
proto.gauge.messages.ProtoScenario.prototype.getPosthookscreenshotsList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getPosthookscreenshotsList()));
};


/**
 * repeated bytes postHookScreenshots = 20;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPosthookscreenshotsList()`
 * @return {!Array<!Uint8Array>}
 */
proto.gauge.messages.ProtoScenario.prototype.getPosthookscreenshotsList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getPosthookscreenshotsList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.gauge.messages.ProtoScenario} returns this
 */
proto.gauge.messages.ProtoScenario.prototype.setPosthookscreenshotsList = function(value) {
  return jspb.Message.setField(this, 20, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ProtoScenario} returns this
 */
proto.gauge.messages.ProtoScenario.prototype.addPosthookscreenshots = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 20, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoScenario} returns this
 */
proto.gauge.messages.ProtoScenario.prototype.clearPosthookscreenshotsList = function() {
  return this.setPosthookscreenshotsList([]);
};


/**
 * repeated string preHookScreenshotFiles = 21;
 * @return {!Array<string>}
 */
proto.gauge.messages.ProtoScenario.prototype.getPrehookscreenshotfilesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 21));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gauge.messages.ProtoScenario} returns this
 */
proto.gauge.messages.ProtoScenario.prototype.setPrehookscreenshotfilesList = function(value) {
  return jspb.Message.setField(this, 21, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ProtoScenario} returns this
 */
proto.gauge.messages.ProtoScenario.prototype.addPrehookscreenshotfiles = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 21, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoScenario} returns this
 */
proto.gauge.messages.ProtoScenario.prototype.clearPrehookscreenshotfilesList = function() {
  return this.setPrehookscreenshotfilesList([]);
};


/**
 * repeated string postHookScreenshotFiles = 22;
 * @return {!Array<string>}
 */
proto.gauge.messages.ProtoScenario.prototype.getPosthookscreenshotfilesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 22));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gauge.messages.ProtoScenario} returns this
 */
proto.gauge.messages.ProtoScenario.prototype.setPosthookscreenshotfilesList = function(value) {
  return jspb.Message.setField(this, 22, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ProtoScenario} returns this
 */
proto.gauge.messages.ProtoScenario.prototype.addPosthookscreenshotfiles = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 22, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoScenario} returns this
 */
proto.gauge.messages.ProtoScenario.prototype.clearPosthookscreenshotfilesList = function() {
  return this.setPosthookscreenshotfilesList([]);
};


/**
 * optional int64 retriesCount = 23;
 * @return {number}
 */
proto.gauge.messages.ProtoScenario.prototype.getRetriescount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/**
 * @param {number} value
 * @return {!proto.gauge.messages.ProtoScenario} returns this
 */
proto.gauge.messages.ProtoScenario.prototype.setRetriescount = function(value) {
  return jspb.Message.setProto3IntField(this, 23, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.Span.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.Span.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.Span} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.Span.toObject = function(includeInstance, msg) {
  var f, obj = {
    start: jspb.Message.getFieldWithDefault(msg, 1, 0),
    end: jspb.Message.getFieldWithDefault(msg, 2, 0),
    startchar: jspb.Message.getFieldWithDefault(msg, 3, 0),
    endchar: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.Span}
 */
proto.gauge.messages.Span.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.Span;
  return proto.gauge.messages.Span.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.Span} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.Span}
 */
proto.gauge.messages.Span.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStart(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEnd(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStartchar(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEndchar(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.Span.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.Span.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.Span} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.Span.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStart();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getEnd();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getStartchar();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getEndchar();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * optional int64 start = 1;
 * @return {number}
 */
proto.gauge.messages.Span.prototype.getStart = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.gauge.messages.Span} returns this
 */
proto.gauge.messages.Span.prototype.setStart = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 end = 2;
 * @return {number}
 */
proto.gauge.messages.Span.prototype.getEnd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.gauge.messages.Span} returns this
 */
proto.gauge.messages.Span.prototype.setEnd = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 startChar = 3;
 * @return {number}
 */
proto.gauge.messages.Span.prototype.getStartchar = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.gauge.messages.Span} returns this
 */
proto.gauge.messages.Span.prototype.setStartchar = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 endChar = 4;
 * @return {number}
 */
proto.gauge.messages.Span.prototype.getEndchar = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.gauge.messages.Span} returns this
 */
proto.gauge.messages.Span.prototype.setEndchar = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.ProtoTableDrivenScenario.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.ProtoTableDrivenScenario.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.ProtoTableDrivenScenario} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ProtoTableDrivenScenario.toObject = function(includeInstance, msg) {
  var f, obj = {
    scenario: (f = msg.getScenario()) && proto.gauge.messages.ProtoScenario.toObject(includeInstance, f),
    tablerowindex: jspb.Message.getFieldWithDefault(msg, 2, 0),
    scenariotablerowindex: jspb.Message.getFieldWithDefault(msg, 3, 0),
    isspectabledriven: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    isscenariotabledriven: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    scenariodatatable: (f = msg.getScenariodatatable()) && proto.gauge.messages.ProtoTable.toObject(includeInstance, f),
    scenariotablerow: (f = msg.getScenariotablerow()) && proto.gauge.messages.ProtoTable.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.ProtoTableDrivenScenario}
 */
proto.gauge.messages.ProtoTableDrivenScenario.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.ProtoTableDrivenScenario;
  return proto.gauge.messages.ProtoTableDrivenScenario.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.ProtoTableDrivenScenario} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.ProtoTableDrivenScenario}
 */
proto.gauge.messages.ProtoTableDrivenScenario.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gauge.messages.ProtoScenario;
      reader.readMessage(value,proto.gauge.messages.ProtoScenario.deserializeBinaryFromReader);
      msg.setScenario(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTablerowindex(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setScenariotablerowindex(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsspectabledriven(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsscenariotabledriven(value);
      break;
    case 6:
      var value = new proto.gauge.messages.ProtoTable;
      reader.readMessage(value,proto.gauge.messages.ProtoTable.deserializeBinaryFromReader);
      msg.setScenariodatatable(value);
      break;
    case 7:
      var value = new proto.gauge.messages.ProtoTable;
      reader.readMessage(value,proto.gauge.messages.ProtoTable.deserializeBinaryFromReader);
      msg.setScenariotablerow(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.ProtoTableDrivenScenario.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.ProtoTableDrivenScenario.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.ProtoTableDrivenScenario} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ProtoTableDrivenScenario.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScenario();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gauge.messages.ProtoScenario.serializeBinaryToWriter
    );
  }
  f = message.getTablerowindex();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getScenariotablerowindex();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getIsspectabledriven();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getIsscenariotabledriven();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getScenariodatatable();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.gauge.messages.ProtoTable.serializeBinaryToWriter
    );
  }
  f = message.getScenariotablerow();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.gauge.messages.ProtoTable.serializeBinaryToWriter
    );
  }
};


/**
 * optional ProtoScenario scenario = 1;
 * @return {?proto.gauge.messages.ProtoScenario}
 */
proto.gauge.messages.ProtoTableDrivenScenario.prototype.getScenario = function() {
  return /** @type{?proto.gauge.messages.ProtoScenario} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.ProtoScenario, 1));
};


/**
 * @param {?proto.gauge.messages.ProtoScenario|undefined} value
 * @return {!proto.gauge.messages.ProtoTableDrivenScenario} returns this
*/
proto.gauge.messages.ProtoTableDrivenScenario.prototype.setScenario = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.ProtoTableDrivenScenario} returns this
 */
proto.gauge.messages.ProtoTableDrivenScenario.prototype.clearScenario = function() {
  return this.setScenario(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.ProtoTableDrivenScenario.prototype.hasScenario = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 tableRowIndex = 2;
 * @return {number}
 */
proto.gauge.messages.ProtoTableDrivenScenario.prototype.getTablerowindex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.gauge.messages.ProtoTableDrivenScenario} returns this
 */
proto.gauge.messages.ProtoTableDrivenScenario.prototype.setTablerowindex = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 scenarioTableRowIndex = 3;
 * @return {number}
 */
proto.gauge.messages.ProtoTableDrivenScenario.prototype.getScenariotablerowindex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.gauge.messages.ProtoTableDrivenScenario} returns this
 */
proto.gauge.messages.ProtoTableDrivenScenario.prototype.setScenariotablerowindex = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool isSpecTableDriven = 4;
 * @return {boolean}
 */
proto.gauge.messages.ProtoTableDrivenScenario.prototype.getIsspectabledriven = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gauge.messages.ProtoTableDrivenScenario} returns this
 */
proto.gauge.messages.ProtoTableDrivenScenario.prototype.setIsspectabledriven = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool isScenarioTableDriven = 5;
 * @return {boolean}
 */
proto.gauge.messages.ProtoTableDrivenScenario.prototype.getIsscenariotabledriven = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gauge.messages.ProtoTableDrivenScenario} returns this
 */
proto.gauge.messages.ProtoTableDrivenScenario.prototype.setIsscenariotabledriven = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional ProtoTable scenarioDataTable = 6;
 * @return {?proto.gauge.messages.ProtoTable}
 */
proto.gauge.messages.ProtoTableDrivenScenario.prototype.getScenariodatatable = function() {
  return /** @type{?proto.gauge.messages.ProtoTable} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.ProtoTable, 6));
};


/**
 * @param {?proto.gauge.messages.ProtoTable|undefined} value
 * @return {!proto.gauge.messages.ProtoTableDrivenScenario} returns this
*/
proto.gauge.messages.ProtoTableDrivenScenario.prototype.setScenariodatatable = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.ProtoTableDrivenScenario} returns this
 */
proto.gauge.messages.ProtoTableDrivenScenario.prototype.clearScenariodatatable = function() {
  return this.setScenariodatatable(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.ProtoTableDrivenScenario.prototype.hasScenariodatatable = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional ProtoTable scenarioTableRow = 7;
 * @return {?proto.gauge.messages.ProtoTable}
 */
proto.gauge.messages.ProtoTableDrivenScenario.prototype.getScenariotablerow = function() {
  return /** @type{?proto.gauge.messages.ProtoTable} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.ProtoTable, 7));
};


/**
 * @param {?proto.gauge.messages.ProtoTable|undefined} value
 * @return {!proto.gauge.messages.ProtoTableDrivenScenario} returns this
*/
proto.gauge.messages.ProtoTableDrivenScenario.prototype.setScenariotablerow = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.ProtoTableDrivenScenario} returns this
 */
proto.gauge.messages.ProtoTableDrivenScenario.prototype.clearScenariotablerow = function() {
  return this.setScenariotablerow(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.ProtoTableDrivenScenario.prototype.hasScenariotablerow = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gauge.messages.ProtoStep.repeatedFields_ = [3,5,6,7,8,9,10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.ProtoStep.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.ProtoStep.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.ProtoStep} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ProtoStep.toObject = function(includeInstance, msg) {
  var f, obj = {
    actualtext: jspb.Message.getFieldWithDefault(msg, 1, ""),
    parsedtext: jspb.Message.getFieldWithDefault(msg, 2, ""),
    fragmentsList: jspb.Message.toObjectList(msg.getFragmentsList(),
    proto.gauge.messages.Fragment.toObject, includeInstance),
    stepexecutionresult: (f = msg.getStepexecutionresult()) && proto.gauge.messages.ProtoStepExecutionResult.toObject(includeInstance, f),
    prehookmessagesList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    posthookmessagesList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    prehookscreenshotsList: msg.getPrehookscreenshotsList_asB64(),
    posthookscreenshotsList: msg.getPosthookscreenshotsList_asB64(),
    prehookscreenshotfilesList: (f = jspb.Message.getRepeatedField(msg, 9)) == null ? undefined : f,
    posthookscreenshotfilesList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.ProtoStep}
 */
proto.gauge.messages.ProtoStep.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.ProtoStep;
  return proto.gauge.messages.ProtoStep.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.ProtoStep} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.ProtoStep}
 */
proto.gauge.messages.ProtoStep.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setActualtext(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setParsedtext(value);
      break;
    case 3:
      var value = new proto.gauge.messages.Fragment;
      reader.readMessage(value,proto.gauge.messages.Fragment.deserializeBinaryFromReader);
      msg.addFragments(value);
      break;
    case 4:
      var value = new proto.gauge.messages.ProtoStepExecutionResult;
      reader.readMessage(value,proto.gauge.messages.ProtoStepExecutionResult.deserializeBinaryFromReader);
      msg.setStepexecutionresult(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addPrehookmessages(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addPosthookmessages(value);
      break;
    case 7:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addPrehookscreenshots(value);
      break;
    case 8:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addPosthookscreenshots(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.addPrehookscreenshotfiles(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addPosthookscreenshotfiles(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.ProtoStep.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.ProtoStep.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.ProtoStep} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ProtoStep.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActualtext();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getParsedtext();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFragmentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.gauge.messages.Fragment.serializeBinaryToWriter
    );
  }
  f = message.getStepexecutionresult();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.gauge.messages.ProtoStepExecutionResult.serializeBinaryToWriter
    );
  }
  f = message.getPrehookmessagesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getPosthookmessagesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getPrehookscreenshotsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      7,
      f
    );
  }
  f = message.getPosthookscreenshotsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      8,
      f
    );
  }
  f = message.getPrehookscreenshotfilesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      9,
      f
    );
  }
  f = message.getPosthookscreenshotfilesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
};


/**
 * optional string actualText = 1;
 * @return {string}
 */
proto.gauge.messages.ProtoStep.prototype.getActualtext = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.ProtoStep} returns this
 */
proto.gauge.messages.ProtoStep.prototype.setActualtext = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string parsedText = 2;
 * @return {string}
 */
proto.gauge.messages.ProtoStep.prototype.getParsedtext = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.ProtoStep} returns this
 */
proto.gauge.messages.ProtoStep.prototype.setParsedtext = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Fragment fragments = 3;
 * @return {!Array<!proto.gauge.messages.Fragment>}
 */
proto.gauge.messages.ProtoStep.prototype.getFragmentsList = function() {
  return /** @type{!Array<!proto.gauge.messages.Fragment>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gauge.messages.Fragment, 3));
};


/**
 * @param {!Array<!proto.gauge.messages.Fragment>} value
 * @return {!proto.gauge.messages.ProtoStep} returns this
*/
proto.gauge.messages.ProtoStep.prototype.setFragmentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.gauge.messages.Fragment=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.Fragment}
 */
proto.gauge.messages.ProtoStep.prototype.addFragments = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.gauge.messages.Fragment, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoStep} returns this
 */
proto.gauge.messages.ProtoStep.prototype.clearFragmentsList = function() {
  return this.setFragmentsList([]);
};


/**
 * optional ProtoStepExecutionResult stepExecutionResult = 4;
 * @return {?proto.gauge.messages.ProtoStepExecutionResult}
 */
proto.gauge.messages.ProtoStep.prototype.getStepexecutionresult = function() {
  return /** @type{?proto.gauge.messages.ProtoStepExecutionResult} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.ProtoStepExecutionResult, 4));
};


/**
 * @param {?proto.gauge.messages.ProtoStepExecutionResult|undefined} value
 * @return {!proto.gauge.messages.ProtoStep} returns this
*/
proto.gauge.messages.ProtoStep.prototype.setStepexecutionresult = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.ProtoStep} returns this
 */
proto.gauge.messages.ProtoStep.prototype.clearStepexecutionresult = function() {
  return this.setStepexecutionresult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.ProtoStep.prototype.hasStepexecutionresult = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated string preHookMessages = 5;
 * @return {!Array<string>}
 */
proto.gauge.messages.ProtoStep.prototype.getPrehookmessagesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gauge.messages.ProtoStep} returns this
 */
proto.gauge.messages.ProtoStep.prototype.setPrehookmessagesList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ProtoStep} returns this
 */
proto.gauge.messages.ProtoStep.prototype.addPrehookmessages = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoStep} returns this
 */
proto.gauge.messages.ProtoStep.prototype.clearPrehookmessagesList = function() {
  return this.setPrehookmessagesList([]);
};


/**
 * repeated string postHookMessages = 6;
 * @return {!Array<string>}
 */
proto.gauge.messages.ProtoStep.prototype.getPosthookmessagesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gauge.messages.ProtoStep} returns this
 */
proto.gauge.messages.ProtoStep.prototype.setPosthookmessagesList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ProtoStep} returns this
 */
proto.gauge.messages.ProtoStep.prototype.addPosthookmessages = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoStep} returns this
 */
proto.gauge.messages.ProtoStep.prototype.clearPosthookmessagesList = function() {
  return this.setPosthookmessagesList([]);
};


/**
 * repeated bytes preHookScreenshots = 7;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.gauge.messages.ProtoStep.prototype.getPrehookscreenshotsList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * repeated bytes preHookScreenshots = 7;
 * This is a type-conversion wrapper around `getPrehookscreenshotsList()`
 * @return {!Array<string>}
 */
proto.gauge.messages.ProtoStep.prototype.getPrehookscreenshotsList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getPrehookscreenshotsList()));
};


/**
 * repeated bytes preHookScreenshots = 7;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPrehookscreenshotsList()`
 * @return {!Array<!Uint8Array>}
 */
proto.gauge.messages.ProtoStep.prototype.getPrehookscreenshotsList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getPrehookscreenshotsList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.gauge.messages.ProtoStep} returns this
 */
proto.gauge.messages.ProtoStep.prototype.setPrehookscreenshotsList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ProtoStep} returns this
 */
proto.gauge.messages.ProtoStep.prototype.addPrehookscreenshots = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoStep} returns this
 */
proto.gauge.messages.ProtoStep.prototype.clearPrehookscreenshotsList = function() {
  return this.setPrehookscreenshotsList([]);
};


/**
 * repeated bytes postHookScreenshots = 8;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.gauge.messages.ProtoStep.prototype.getPosthookscreenshotsList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * repeated bytes postHookScreenshots = 8;
 * This is a type-conversion wrapper around `getPosthookscreenshotsList()`
 * @return {!Array<string>}
 */
proto.gauge.messages.ProtoStep.prototype.getPosthookscreenshotsList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getPosthookscreenshotsList()));
};


/**
 * repeated bytes postHookScreenshots = 8;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPosthookscreenshotsList()`
 * @return {!Array<!Uint8Array>}
 */
proto.gauge.messages.ProtoStep.prototype.getPosthookscreenshotsList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getPosthookscreenshotsList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.gauge.messages.ProtoStep} returns this
 */
proto.gauge.messages.ProtoStep.prototype.setPosthookscreenshotsList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ProtoStep} returns this
 */
proto.gauge.messages.ProtoStep.prototype.addPosthookscreenshots = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoStep} returns this
 */
proto.gauge.messages.ProtoStep.prototype.clearPosthookscreenshotsList = function() {
  return this.setPosthookscreenshotsList([]);
};


/**
 * repeated string preHookScreenshotFiles = 9;
 * @return {!Array<string>}
 */
proto.gauge.messages.ProtoStep.prototype.getPrehookscreenshotfilesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 9));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gauge.messages.ProtoStep} returns this
 */
proto.gauge.messages.ProtoStep.prototype.setPrehookscreenshotfilesList = function(value) {
  return jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ProtoStep} returns this
 */
proto.gauge.messages.ProtoStep.prototype.addPrehookscreenshotfiles = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoStep} returns this
 */
proto.gauge.messages.ProtoStep.prototype.clearPrehookscreenshotfilesList = function() {
  return this.setPrehookscreenshotfilesList([]);
};


/**
 * repeated string postHookScreenshotFiles = 10;
 * @return {!Array<string>}
 */
proto.gauge.messages.ProtoStep.prototype.getPosthookscreenshotfilesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gauge.messages.ProtoStep} returns this
 */
proto.gauge.messages.ProtoStep.prototype.setPosthookscreenshotfilesList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ProtoStep} returns this
 */
proto.gauge.messages.ProtoStep.prototype.addPosthookscreenshotfiles = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoStep} returns this
 */
proto.gauge.messages.ProtoStep.prototype.clearPosthookscreenshotfilesList = function() {
  return this.setPosthookscreenshotfilesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gauge.messages.ProtoConcept.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.ProtoConcept.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.ProtoConcept.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.ProtoConcept} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ProtoConcept.toObject = function(includeInstance, msg) {
  var f, obj = {
    conceptstep: (f = msg.getConceptstep()) && proto.gauge.messages.ProtoStep.toObject(includeInstance, f),
    stepsList: jspb.Message.toObjectList(msg.getStepsList(),
    proto.gauge.messages.ProtoItem.toObject, includeInstance),
    conceptexecutionresult: (f = msg.getConceptexecutionresult()) && proto.gauge.messages.ProtoStepExecutionResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.ProtoConcept}
 */
proto.gauge.messages.ProtoConcept.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.ProtoConcept;
  return proto.gauge.messages.ProtoConcept.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.ProtoConcept} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.ProtoConcept}
 */
proto.gauge.messages.ProtoConcept.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gauge.messages.ProtoStep;
      reader.readMessage(value,proto.gauge.messages.ProtoStep.deserializeBinaryFromReader);
      msg.setConceptstep(value);
      break;
    case 2:
      var value = new proto.gauge.messages.ProtoItem;
      reader.readMessage(value,proto.gauge.messages.ProtoItem.deserializeBinaryFromReader);
      msg.addSteps(value);
      break;
    case 3:
      var value = new proto.gauge.messages.ProtoStepExecutionResult;
      reader.readMessage(value,proto.gauge.messages.ProtoStepExecutionResult.deserializeBinaryFromReader);
      msg.setConceptexecutionresult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.ProtoConcept.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.ProtoConcept.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.ProtoConcept} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ProtoConcept.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConceptstep();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gauge.messages.ProtoStep.serializeBinaryToWriter
    );
  }
  f = message.getStepsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.gauge.messages.ProtoItem.serializeBinaryToWriter
    );
  }
  f = message.getConceptexecutionresult();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.gauge.messages.ProtoStepExecutionResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional ProtoStep conceptStep = 1;
 * @return {?proto.gauge.messages.ProtoStep}
 */
proto.gauge.messages.ProtoConcept.prototype.getConceptstep = function() {
  return /** @type{?proto.gauge.messages.ProtoStep} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.ProtoStep, 1));
};


/**
 * @param {?proto.gauge.messages.ProtoStep|undefined} value
 * @return {!proto.gauge.messages.ProtoConcept} returns this
*/
proto.gauge.messages.ProtoConcept.prototype.setConceptstep = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.ProtoConcept} returns this
 */
proto.gauge.messages.ProtoConcept.prototype.clearConceptstep = function() {
  return this.setConceptstep(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.ProtoConcept.prototype.hasConceptstep = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated ProtoItem steps = 2;
 * @return {!Array<!proto.gauge.messages.ProtoItem>}
 */
proto.gauge.messages.ProtoConcept.prototype.getStepsList = function() {
  return /** @type{!Array<!proto.gauge.messages.ProtoItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gauge.messages.ProtoItem, 2));
};


/**
 * @param {!Array<!proto.gauge.messages.ProtoItem>} value
 * @return {!proto.gauge.messages.ProtoConcept} returns this
*/
proto.gauge.messages.ProtoConcept.prototype.setStepsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.gauge.messages.ProtoItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ProtoItem}
 */
proto.gauge.messages.ProtoConcept.prototype.addSteps = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.gauge.messages.ProtoItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoConcept} returns this
 */
proto.gauge.messages.ProtoConcept.prototype.clearStepsList = function() {
  return this.setStepsList([]);
};


/**
 * optional ProtoStepExecutionResult conceptExecutionResult = 3;
 * @return {?proto.gauge.messages.ProtoStepExecutionResult}
 */
proto.gauge.messages.ProtoConcept.prototype.getConceptexecutionresult = function() {
  return /** @type{?proto.gauge.messages.ProtoStepExecutionResult} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.ProtoStepExecutionResult, 3));
};


/**
 * @param {?proto.gauge.messages.ProtoStepExecutionResult|undefined} value
 * @return {!proto.gauge.messages.ProtoConcept} returns this
*/
proto.gauge.messages.ProtoConcept.prototype.setConceptexecutionresult = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.ProtoConcept} returns this
 */
proto.gauge.messages.ProtoConcept.prototype.clearConceptexecutionresult = function() {
  return this.setConceptexecutionresult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.ProtoConcept.prototype.hasConceptexecutionresult = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gauge.messages.ProtoTags.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.ProtoTags.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.ProtoTags.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.ProtoTags} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ProtoTags.toObject = function(includeInstance, msg) {
  var f, obj = {
    tagsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.ProtoTags}
 */
proto.gauge.messages.ProtoTags.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.ProtoTags;
  return proto.gauge.messages.ProtoTags.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.ProtoTags} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.ProtoTags}
 */
proto.gauge.messages.ProtoTags.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.ProtoTags.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.ProtoTags.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.ProtoTags} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ProtoTags.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string tags = 1;
 * @return {!Array<string>}
 */
proto.gauge.messages.ProtoTags.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gauge.messages.ProtoTags} returns this
 */
proto.gauge.messages.ProtoTags.prototype.setTagsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ProtoTags} returns this
 */
proto.gauge.messages.ProtoTags.prototype.addTags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoTags} returns this
 */
proto.gauge.messages.ProtoTags.prototype.clearTagsList = function() {
  return this.setTagsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.Fragment.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.Fragment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.Fragment} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.Fragment.toObject = function(includeInstance, msg) {
  var f, obj = {
    fragmenttype: jspb.Message.getFieldWithDefault(msg, 1, 0),
    text: jspb.Message.getFieldWithDefault(msg, 2, ""),
    parameter: (f = msg.getParameter()) && proto.gauge.messages.Parameter.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.Fragment}
 */
proto.gauge.messages.Fragment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.Fragment;
  return proto.gauge.messages.Fragment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.Fragment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.Fragment}
 */
proto.gauge.messages.Fragment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.gauge.messages.Fragment.FragmentType} */ (reader.readEnum());
      msg.setFragmenttype(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    case 3:
      var value = new proto.gauge.messages.Parameter;
      reader.readMessage(value,proto.gauge.messages.Parameter.deserializeBinaryFromReader);
      msg.setParameter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.Fragment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.Fragment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.Fragment} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.Fragment.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFragmenttype();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getParameter();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.gauge.messages.Parameter.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.gauge.messages.Fragment.FragmentType = {
  TEXT: 0,
  PARAMETER: 1
};

/**
 * optional FragmentType fragmentType = 1;
 * @return {!proto.gauge.messages.Fragment.FragmentType}
 */
proto.gauge.messages.Fragment.prototype.getFragmenttype = function() {
  return /** @type {!proto.gauge.messages.Fragment.FragmentType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.gauge.messages.Fragment.FragmentType} value
 * @return {!proto.gauge.messages.Fragment} returns this
 */
proto.gauge.messages.Fragment.prototype.setFragmenttype = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string text = 2;
 * @return {string}
 */
proto.gauge.messages.Fragment.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.Fragment} returns this
 */
proto.gauge.messages.Fragment.prototype.setText = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Parameter parameter = 3;
 * @return {?proto.gauge.messages.Parameter}
 */
proto.gauge.messages.Fragment.prototype.getParameter = function() {
  return /** @type{?proto.gauge.messages.Parameter} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.Parameter, 3));
};


/**
 * @param {?proto.gauge.messages.Parameter|undefined} value
 * @return {!proto.gauge.messages.Fragment} returns this
*/
proto.gauge.messages.Fragment.prototype.setParameter = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.Fragment} returns this
 */
proto.gauge.messages.Fragment.prototype.clearParameter = function() {
  return this.setParameter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.Fragment.prototype.hasParameter = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.Parameter.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.Parameter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.Parameter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.Parameter.toObject = function(includeInstance, msg) {
  var f, obj = {
    parametertype: jspb.Message.getFieldWithDefault(msg, 1, 0),
    value: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    table: (f = msg.getTable()) && proto.gauge.messages.ProtoTable.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.Parameter}
 */
proto.gauge.messages.Parameter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.Parameter;
  return proto.gauge.messages.Parameter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.Parameter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.Parameter}
 */
proto.gauge.messages.Parameter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.gauge.messages.Parameter.ParameterType} */ (reader.readEnum());
      msg.setParametertype(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = new proto.gauge.messages.ProtoTable;
      reader.readMessage(value,proto.gauge.messages.ProtoTable.deserializeBinaryFromReader);
      msg.setTable(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.Parameter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.Parameter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.Parameter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.Parameter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParametertype();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTable();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.gauge.messages.ProtoTable.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.gauge.messages.Parameter.ParameterType = {
  STATIC: 0,
  DYNAMIC: 1,
  SPECIAL_STRING: 2,
  SPECIAL_TABLE: 3,
  TABLE: 4
};

/**
 * optional ParameterType parameterType = 1;
 * @return {!proto.gauge.messages.Parameter.ParameterType}
 */
proto.gauge.messages.Parameter.prototype.getParametertype = function() {
  return /** @type {!proto.gauge.messages.Parameter.ParameterType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.gauge.messages.Parameter.ParameterType} value
 * @return {!proto.gauge.messages.Parameter} returns this
 */
proto.gauge.messages.Parameter.prototype.setParametertype = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.gauge.messages.Parameter.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.Parameter} returns this
 */
proto.gauge.messages.Parameter.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.gauge.messages.Parameter.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.Parameter} returns this
 */
proto.gauge.messages.Parameter.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional ProtoTable table = 4;
 * @return {?proto.gauge.messages.ProtoTable}
 */
proto.gauge.messages.Parameter.prototype.getTable = function() {
  return /** @type{?proto.gauge.messages.ProtoTable} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.ProtoTable, 4));
};


/**
 * @param {?proto.gauge.messages.ProtoTable|undefined} value
 * @return {!proto.gauge.messages.Parameter} returns this
*/
proto.gauge.messages.Parameter.prototype.setTable = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.Parameter} returns this
 */
proto.gauge.messages.Parameter.prototype.clearTable = function() {
  return this.setTable(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.Parameter.prototype.hasTable = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.ProtoComment.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.ProtoComment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.ProtoComment} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ProtoComment.toObject = function(includeInstance, msg) {
  var f, obj = {
    text: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.ProtoComment}
 */
proto.gauge.messages.ProtoComment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.ProtoComment;
  return proto.gauge.messages.ProtoComment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.ProtoComment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.ProtoComment}
 */
proto.gauge.messages.ProtoComment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.ProtoComment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.ProtoComment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.ProtoComment} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ProtoComment.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string text = 1;
 * @return {string}
 */
proto.gauge.messages.ProtoComment.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.ProtoComment} returns this
 */
proto.gauge.messages.ProtoComment.prototype.setText = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gauge.messages.ProtoTable.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.ProtoTable.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.ProtoTable.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.ProtoTable} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ProtoTable.toObject = function(includeInstance, msg) {
  var f, obj = {
    headers: (f = msg.getHeaders()) && proto.gauge.messages.ProtoTableRow.toObject(includeInstance, f),
    rowsList: jspb.Message.toObjectList(msg.getRowsList(),
    proto.gauge.messages.ProtoTableRow.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.ProtoTable}
 */
proto.gauge.messages.ProtoTable.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.ProtoTable;
  return proto.gauge.messages.ProtoTable.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.ProtoTable} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.ProtoTable}
 */
proto.gauge.messages.ProtoTable.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gauge.messages.ProtoTableRow;
      reader.readMessage(value,proto.gauge.messages.ProtoTableRow.deserializeBinaryFromReader);
      msg.setHeaders(value);
      break;
    case 2:
      var value = new proto.gauge.messages.ProtoTableRow;
      reader.readMessage(value,proto.gauge.messages.ProtoTableRow.deserializeBinaryFromReader);
      msg.addRows(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.ProtoTable.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.ProtoTable.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.ProtoTable} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ProtoTable.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeaders();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gauge.messages.ProtoTableRow.serializeBinaryToWriter
    );
  }
  f = message.getRowsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.gauge.messages.ProtoTableRow.serializeBinaryToWriter
    );
  }
};


/**
 * optional ProtoTableRow headers = 1;
 * @return {?proto.gauge.messages.ProtoTableRow}
 */
proto.gauge.messages.ProtoTable.prototype.getHeaders = function() {
  return /** @type{?proto.gauge.messages.ProtoTableRow} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.ProtoTableRow, 1));
};


/**
 * @param {?proto.gauge.messages.ProtoTableRow|undefined} value
 * @return {!proto.gauge.messages.ProtoTable} returns this
*/
proto.gauge.messages.ProtoTable.prototype.setHeaders = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.ProtoTable} returns this
 */
proto.gauge.messages.ProtoTable.prototype.clearHeaders = function() {
  return this.setHeaders(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.ProtoTable.prototype.hasHeaders = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated ProtoTableRow rows = 2;
 * @return {!Array<!proto.gauge.messages.ProtoTableRow>}
 */
proto.gauge.messages.ProtoTable.prototype.getRowsList = function() {
  return /** @type{!Array<!proto.gauge.messages.ProtoTableRow>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gauge.messages.ProtoTableRow, 2));
};


/**
 * @param {!Array<!proto.gauge.messages.ProtoTableRow>} value
 * @return {!proto.gauge.messages.ProtoTable} returns this
*/
proto.gauge.messages.ProtoTable.prototype.setRowsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.gauge.messages.ProtoTableRow=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ProtoTableRow}
 */
proto.gauge.messages.ProtoTable.prototype.addRows = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.gauge.messages.ProtoTableRow, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoTable} returns this
 */
proto.gauge.messages.ProtoTable.prototype.clearRowsList = function() {
  return this.setRowsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gauge.messages.ProtoTableRow.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.ProtoTableRow.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.ProtoTableRow.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.ProtoTableRow} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ProtoTableRow.toObject = function(includeInstance, msg) {
  var f, obj = {
    cellsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.ProtoTableRow}
 */
proto.gauge.messages.ProtoTableRow.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.ProtoTableRow;
  return proto.gauge.messages.ProtoTableRow.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.ProtoTableRow} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.ProtoTableRow}
 */
proto.gauge.messages.ProtoTableRow.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addCells(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.ProtoTableRow.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.ProtoTableRow.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.ProtoTableRow} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ProtoTableRow.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCellsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string cells = 1;
 * @return {!Array<string>}
 */
proto.gauge.messages.ProtoTableRow.prototype.getCellsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gauge.messages.ProtoTableRow} returns this
 */
proto.gauge.messages.ProtoTableRow.prototype.setCellsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ProtoTableRow} returns this
 */
proto.gauge.messages.ProtoTableRow.prototype.addCells = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoTableRow} returns this
 */
proto.gauge.messages.ProtoTableRow.prototype.clearCellsList = function() {
  return this.setCellsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.ProtoStepExecutionResult.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.ProtoStepExecutionResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.ProtoStepExecutionResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ProtoStepExecutionResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    executionresult: (f = msg.getExecutionresult()) && proto.gauge.messages.ProtoExecutionResult.toObject(includeInstance, f),
    prehookfailure: (f = msg.getPrehookfailure()) && proto.gauge.messages.ProtoHookFailure.toObject(includeInstance, f),
    posthookfailure: (f = msg.getPosthookfailure()) && proto.gauge.messages.ProtoHookFailure.toObject(includeInstance, f),
    skipped: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    skippedreason: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.ProtoStepExecutionResult}
 */
proto.gauge.messages.ProtoStepExecutionResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.ProtoStepExecutionResult;
  return proto.gauge.messages.ProtoStepExecutionResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.ProtoStepExecutionResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.ProtoStepExecutionResult}
 */
proto.gauge.messages.ProtoStepExecutionResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gauge.messages.ProtoExecutionResult;
      reader.readMessage(value,proto.gauge.messages.ProtoExecutionResult.deserializeBinaryFromReader);
      msg.setExecutionresult(value);
      break;
    case 2:
      var value = new proto.gauge.messages.ProtoHookFailure;
      reader.readMessage(value,proto.gauge.messages.ProtoHookFailure.deserializeBinaryFromReader);
      msg.setPrehookfailure(value);
      break;
    case 3:
      var value = new proto.gauge.messages.ProtoHookFailure;
      reader.readMessage(value,proto.gauge.messages.ProtoHookFailure.deserializeBinaryFromReader);
      msg.setPosthookfailure(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSkipped(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSkippedreason(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.ProtoStepExecutionResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.ProtoStepExecutionResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.ProtoStepExecutionResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ProtoStepExecutionResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExecutionresult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gauge.messages.ProtoExecutionResult.serializeBinaryToWriter
    );
  }
  f = message.getPrehookfailure();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gauge.messages.ProtoHookFailure.serializeBinaryToWriter
    );
  }
  f = message.getPosthookfailure();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.gauge.messages.ProtoHookFailure.serializeBinaryToWriter
    );
  }
  f = message.getSkipped();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getSkippedreason();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional ProtoExecutionResult executionResult = 1;
 * @return {?proto.gauge.messages.ProtoExecutionResult}
 */
proto.gauge.messages.ProtoStepExecutionResult.prototype.getExecutionresult = function() {
  return /** @type{?proto.gauge.messages.ProtoExecutionResult} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.ProtoExecutionResult, 1));
};


/**
 * @param {?proto.gauge.messages.ProtoExecutionResult|undefined} value
 * @return {!proto.gauge.messages.ProtoStepExecutionResult} returns this
*/
proto.gauge.messages.ProtoStepExecutionResult.prototype.setExecutionresult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.ProtoStepExecutionResult} returns this
 */
proto.gauge.messages.ProtoStepExecutionResult.prototype.clearExecutionresult = function() {
  return this.setExecutionresult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.ProtoStepExecutionResult.prototype.hasExecutionresult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ProtoHookFailure preHookFailure = 2;
 * @return {?proto.gauge.messages.ProtoHookFailure}
 */
proto.gauge.messages.ProtoStepExecutionResult.prototype.getPrehookfailure = function() {
  return /** @type{?proto.gauge.messages.ProtoHookFailure} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.ProtoHookFailure, 2));
};


/**
 * @param {?proto.gauge.messages.ProtoHookFailure|undefined} value
 * @return {!proto.gauge.messages.ProtoStepExecutionResult} returns this
*/
proto.gauge.messages.ProtoStepExecutionResult.prototype.setPrehookfailure = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.ProtoStepExecutionResult} returns this
 */
proto.gauge.messages.ProtoStepExecutionResult.prototype.clearPrehookfailure = function() {
  return this.setPrehookfailure(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.ProtoStepExecutionResult.prototype.hasPrehookfailure = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ProtoHookFailure postHookFailure = 3;
 * @return {?proto.gauge.messages.ProtoHookFailure}
 */
proto.gauge.messages.ProtoStepExecutionResult.prototype.getPosthookfailure = function() {
  return /** @type{?proto.gauge.messages.ProtoHookFailure} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.ProtoHookFailure, 3));
};


/**
 * @param {?proto.gauge.messages.ProtoHookFailure|undefined} value
 * @return {!proto.gauge.messages.ProtoStepExecutionResult} returns this
*/
proto.gauge.messages.ProtoStepExecutionResult.prototype.setPosthookfailure = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.ProtoStepExecutionResult} returns this
 */
proto.gauge.messages.ProtoStepExecutionResult.prototype.clearPosthookfailure = function() {
  return this.setPosthookfailure(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.ProtoStepExecutionResult.prototype.hasPosthookfailure = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool skipped = 4;
 * @return {boolean}
 */
proto.gauge.messages.ProtoStepExecutionResult.prototype.getSkipped = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gauge.messages.ProtoStepExecutionResult} returns this
 */
proto.gauge.messages.ProtoStepExecutionResult.prototype.setSkipped = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional string skippedReason = 5;
 * @return {string}
 */
proto.gauge.messages.ProtoStepExecutionResult.prototype.getSkippedreason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.ProtoStepExecutionResult} returns this
 */
proto.gauge.messages.ProtoStepExecutionResult.prototype.setSkippedreason = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gauge.messages.ProtoExecutionResult.repeatedFields_ = [7,10,12];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.ProtoExecutionResult.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.ProtoExecutionResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.ProtoExecutionResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ProtoExecutionResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    failed: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    recoverableerror: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    errormessage: jspb.Message.getFieldWithDefault(msg, 3, ""),
    stacktrace: jspb.Message.getFieldWithDefault(msg, 4, ""),
    screenshot: msg.getScreenshot_asB64(),
    executiontime: jspb.Message.getFieldWithDefault(msg, 6, 0),
    messageList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
    errortype: jspb.Message.getFieldWithDefault(msg, 8, 0),
    failurescreenshot: msg.getFailurescreenshot_asB64(),
    screenshotsList: msg.getScreenshotsList_asB64(),
    failurescreenshotfile: jspb.Message.getFieldWithDefault(msg, 11, ""),
    screenshotfilesList: (f = jspb.Message.getRepeatedField(msg, 12)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.ProtoExecutionResult}
 */
proto.gauge.messages.ProtoExecutionResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.ProtoExecutionResult;
  return proto.gauge.messages.ProtoExecutionResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.ProtoExecutionResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.ProtoExecutionResult}
 */
proto.gauge.messages.ProtoExecutionResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFailed(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRecoverableerror(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrormessage(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setStacktrace(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setScreenshot(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExecutiontime(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addMessage(value);
      break;
    case 8:
      var value = /** @type {!proto.gauge.messages.ProtoExecutionResult.ErrorType} */ (reader.readEnum());
      msg.setErrortype(value);
      break;
    case 9:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFailurescreenshot(value);
      break;
    case 10:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addScreenshots(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setFailurescreenshotfile(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.addScreenshotfiles(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.ProtoExecutionResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.ProtoExecutionResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.ProtoExecutionResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ProtoExecutionResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFailed();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getRecoverableerror();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getErrormessage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStacktrace();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getScreenshot_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = message.getExecutiontime();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getMessageList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
  f = message.getErrortype();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getFailurescreenshot_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      9,
      f
    );
  }
  f = message.getScreenshotsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      10,
      f
    );
  }
  f = message.getFailurescreenshotfile();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getScreenshotfilesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      12,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.gauge.messages.ProtoExecutionResult.ErrorType = {
  ASSERTION: 0,
  VERIFICATION: 1
};

/**
 * optional bool failed = 1;
 * @return {boolean}
 */
proto.gauge.messages.ProtoExecutionResult.prototype.getFailed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gauge.messages.ProtoExecutionResult} returns this
 */
proto.gauge.messages.ProtoExecutionResult.prototype.setFailed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool recoverableError = 2;
 * @return {boolean}
 */
proto.gauge.messages.ProtoExecutionResult.prototype.getRecoverableerror = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gauge.messages.ProtoExecutionResult} returns this
 */
proto.gauge.messages.ProtoExecutionResult.prototype.setRecoverableerror = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string errorMessage = 3;
 * @return {string}
 */
proto.gauge.messages.ProtoExecutionResult.prototype.getErrormessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.ProtoExecutionResult} returns this
 */
proto.gauge.messages.ProtoExecutionResult.prototype.setErrormessage = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string stackTrace = 4;
 * @return {string}
 */
proto.gauge.messages.ProtoExecutionResult.prototype.getStacktrace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.ProtoExecutionResult} returns this
 */
proto.gauge.messages.ProtoExecutionResult.prototype.setStacktrace = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bytes screenShot = 5;
 * @return {!(string|Uint8Array)}
 */
proto.gauge.messages.ProtoExecutionResult.prototype.getScreenshot = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes screenShot = 5;
 * This is a type-conversion wrapper around `getScreenshot()`
 * @return {string}
 */
proto.gauge.messages.ProtoExecutionResult.prototype.getScreenshot_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getScreenshot()));
};


/**
 * optional bytes screenShot = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getScreenshot()`
 * @return {!Uint8Array}
 */
proto.gauge.messages.ProtoExecutionResult.prototype.getScreenshot_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getScreenshot()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.gauge.messages.ProtoExecutionResult} returns this
 */
proto.gauge.messages.ProtoExecutionResult.prototype.setScreenshot = function(value) {
  return jspb.Message.setProto3BytesField(this, 5, value);
};


/**
 * optional int64 executionTime = 6;
 * @return {number}
 */
proto.gauge.messages.ProtoExecutionResult.prototype.getExecutiontime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.gauge.messages.ProtoExecutionResult} returns this
 */
proto.gauge.messages.ProtoExecutionResult.prototype.setExecutiontime = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * repeated string message = 7;
 * @return {!Array<string>}
 */
proto.gauge.messages.ProtoExecutionResult.prototype.getMessageList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gauge.messages.ProtoExecutionResult} returns this
 */
proto.gauge.messages.ProtoExecutionResult.prototype.setMessageList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ProtoExecutionResult} returns this
 */
proto.gauge.messages.ProtoExecutionResult.prototype.addMessage = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoExecutionResult} returns this
 */
proto.gauge.messages.ProtoExecutionResult.prototype.clearMessageList = function() {
  return this.setMessageList([]);
};


/**
 * optional ErrorType errorType = 8;
 * @return {!proto.gauge.messages.ProtoExecutionResult.ErrorType}
 */
proto.gauge.messages.ProtoExecutionResult.prototype.getErrortype = function() {
  return /** @type {!proto.gauge.messages.ProtoExecutionResult.ErrorType} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.gauge.messages.ProtoExecutionResult.ErrorType} value
 * @return {!proto.gauge.messages.ProtoExecutionResult} returns this
 */
proto.gauge.messages.ProtoExecutionResult.prototype.setErrortype = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional bytes failureScreenshot = 9;
 * @return {!(string|Uint8Array)}
 */
proto.gauge.messages.ProtoExecutionResult.prototype.getFailurescreenshot = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * optional bytes failureScreenshot = 9;
 * This is a type-conversion wrapper around `getFailurescreenshot()`
 * @return {string}
 */
proto.gauge.messages.ProtoExecutionResult.prototype.getFailurescreenshot_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFailurescreenshot()));
};


/**
 * optional bytes failureScreenshot = 9;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFailurescreenshot()`
 * @return {!Uint8Array}
 */
proto.gauge.messages.ProtoExecutionResult.prototype.getFailurescreenshot_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFailurescreenshot()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.gauge.messages.ProtoExecutionResult} returns this
 */
proto.gauge.messages.ProtoExecutionResult.prototype.setFailurescreenshot = function(value) {
  return jspb.Message.setProto3BytesField(this, 9, value);
};


/**
 * repeated bytes screenshots = 10;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.gauge.messages.ProtoExecutionResult.prototype.getScreenshotsList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * repeated bytes screenshots = 10;
 * This is a type-conversion wrapper around `getScreenshotsList()`
 * @return {!Array<string>}
 */
proto.gauge.messages.ProtoExecutionResult.prototype.getScreenshotsList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getScreenshotsList()));
};


/**
 * repeated bytes screenshots = 10;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getScreenshotsList()`
 * @return {!Array<!Uint8Array>}
 */
proto.gauge.messages.ProtoExecutionResult.prototype.getScreenshotsList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getScreenshotsList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.gauge.messages.ProtoExecutionResult} returns this
 */
proto.gauge.messages.ProtoExecutionResult.prototype.setScreenshotsList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ProtoExecutionResult} returns this
 */
proto.gauge.messages.ProtoExecutionResult.prototype.addScreenshots = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoExecutionResult} returns this
 */
proto.gauge.messages.ProtoExecutionResult.prototype.clearScreenshotsList = function() {
  return this.setScreenshotsList([]);
};


/**
 * optional string failureScreenshotFile = 11;
 * @return {string}
 */
proto.gauge.messages.ProtoExecutionResult.prototype.getFailurescreenshotfile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.ProtoExecutionResult} returns this
 */
proto.gauge.messages.ProtoExecutionResult.prototype.setFailurescreenshotfile = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * repeated string screenshotFiles = 12;
 * @return {!Array<string>}
 */
proto.gauge.messages.ProtoExecutionResult.prototype.getScreenshotfilesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 12));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gauge.messages.ProtoExecutionResult} returns this
 */
proto.gauge.messages.ProtoExecutionResult.prototype.setScreenshotfilesList = function(value) {
  return jspb.Message.setField(this, 12, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ProtoExecutionResult} returns this
 */
proto.gauge.messages.ProtoExecutionResult.prototype.addScreenshotfiles = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 12, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoExecutionResult} returns this
 */
proto.gauge.messages.ProtoExecutionResult.prototype.clearScreenshotfilesList = function() {
  return this.setScreenshotfilesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.ProtoHookFailure.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.ProtoHookFailure.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.ProtoHookFailure} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ProtoHookFailure.toObject = function(includeInstance, msg) {
  var f, obj = {
    stacktrace: jspb.Message.getFieldWithDefault(msg, 1, ""),
    errormessage: jspb.Message.getFieldWithDefault(msg, 2, ""),
    screenshot: msg.getScreenshot_asB64(),
    tablerowindex: jspb.Message.getFieldWithDefault(msg, 4, 0),
    failurescreenshot: msg.getFailurescreenshot_asB64(),
    failurescreenshotfile: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.ProtoHookFailure}
 */
proto.gauge.messages.ProtoHookFailure.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.ProtoHookFailure;
  return proto.gauge.messages.ProtoHookFailure.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.ProtoHookFailure} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.ProtoHookFailure}
 */
proto.gauge.messages.ProtoHookFailure.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStacktrace(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrormessage(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setScreenshot(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTablerowindex(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFailurescreenshot(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setFailurescreenshotfile(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.ProtoHookFailure.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.ProtoHookFailure.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.ProtoHookFailure} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ProtoHookFailure.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStacktrace();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getErrormessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getScreenshot_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getTablerowindex();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getFailurescreenshot_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = message.getFailurescreenshotfile();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string stackTrace = 1;
 * @return {string}
 */
proto.gauge.messages.ProtoHookFailure.prototype.getStacktrace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.ProtoHookFailure} returns this
 */
proto.gauge.messages.ProtoHookFailure.prototype.setStacktrace = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string errorMessage = 2;
 * @return {string}
 */
proto.gauge.messages.ProtoHookFailure.prototype.getErrormessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.ProtoHookFailure} returns this
 */
proto.gauge.messages.ProtoHookFailure.prototype.setErrormessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes screenShot = 3;
 * @return {!(string|Uint8Array)}
 */
proto.gauge.messages.ProtoHookFailure.prototype.getScreenshot = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes screenShot = 3;
 * This is a type-conversion wrapper around `getScreenshot()`
 * @return {string}
 */
proto.gauge.messages.ProtoHookFailure.prototype.getScreenshot_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getScreenshot()));
};


/**
 * optional bytes screenShot = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getScreenshot()`
 * @return {!Uint8Array}
 */
proto.gauge.messages.ProtoHookFailure.prototype.getScreenshot_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getScreenshot()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.gauge.messages.ProtoHookFailure} returns this
 */
proto.gauge.messages.ProtoHookFailure.prototype.setScreenshot = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional int32 tableRowIndex = 4;
 * @return {number}
 */
proto.gauge.messages.ProtoHookFailure.prototype.getTablerowindex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.gauge.messages.ProtoHookFailure} returns this
 */
proto.gauge.messages.ProtoHookFailure.prototype.setTablerowindex = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bytes failureScreenshot = 5;
 * @return {!(string|Uint8Array)}
 */
proto.gauge.messages.ProtoHookFailure.prototype.getFailurescreenshot = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes failureScreenshot = 5;
 * This is a type-conversion wrapper around `getFailurescreenshot()`
 * @return {string}
 */
proto.gauge.messages.ProtoHookFailure.prototype.getFailurescreenshot_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFailurescreenshot()));
};


/**
 * optional bytes failureScreenshot = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFailurescreenshot()`
 * @return {!Uint8Array}
 */
proto.gauge.messages.ProtoHookFailure.prototype.getFailurescreenshot_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFailurescreenshot()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.gauge.messages.ProtoHookFailure} returns this
 */
proto.gauge.messages.ProtoHookFailure.prototype.setFailurescreenshot = function(value) {
  return jspb.Message.setProto3BytesField(this, 5, value);
};


/**
 * optional string failureScreenshotFile = 6;
 * @return {string}
 */
proto.gauge.messages.ProtoHookFailure.prototype.getFailurescreenshotfile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.ProtoHookFailure} returns this
 */
proto.gauge.messages.ProtoHookFailure.prototype.setFailurescreenshotfile = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gauge.messages.ProtoSuiteResult.repeatedFields_ = [1,13,14,15,16,17,18,21,22];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.ProtoSuiteResult.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.ProtoSuiteResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.ProtoSuiteResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ProtoSuiteResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    specresultsList: jspb.Message.toObjectList(msg.getSpecresultsList(),
    proto.gauge.messages.ProtoSpecResult.toObject, includeInstance),
    prehookfailure: (f = msg.getPrehookfailure()) && proto.gauge.messages.ProtoHookFailure.toObject(includeInstance, f),
    posthookfailure: (f = msg.getPosthookfailure()) && proto.gauge.messages.ProtoHookFailure.toObject(includeInstance, f),
    failed: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    specsfailedcount: jspb.Message.getFieldWithDefault(msg, 5, 0),
    executiontime: jspb.Message.getFieldWithDefault(msg, 6, 0),
    successrate: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    environment: jspb.Message.getFieldWithDefault(msg, 8, ""),
    tags: jspb.Message.getFieldWithDefault(msg, 9, ""),
    projectname: jspb.Message.getFieldWithDefault(msg, 10, ""),
    timestamp: jspb.Message.getFieldWithDefault(msg, 11, ""),
    specsskippedcount: jspb.Message.getFieldWithDefault(msg, 12, 0),
    prehookmessagesList: (f = jspb.Message.getRepeatedField(msg, 13)) == null ? undefined : f,
    posthookmessagesList: (f = jspb.Message.getRepeatedField(msg, 14)) == null ? undefined : f,
    prehookmessageList: (f = jspb.Message.getRepeatedField(msg, 15)) == null ? undefined : f,
    posthookmessageList: (f = jspb.Message.getRepeatedField(msg, 16)) == null ? undefined : f,
    prehookscreenshotsList: msg.getPrehookscreenshotsList_asB64(),
    posthookscreenshotsList: msg.getPosthookscreenshotsList_asB64(),
    chunked: jspb.Message.getBooleanFieldWithDefault(msg, 19, false),
    chunksize: jspb.Message.getFieldWithDefault(msg, 20, 0),
    prehookscreenshotfilesList: (f = jspb.Message.getRepeatedField(msg, 21)) == null ? undefined : f,
    posthookscreenshotfilesList: (f = jspb.Message.getRepeatedField(msg, 22)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.ProtoSuiteResult}
 */
proto.gauge.messages.ProtoSuiteResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.ProtoSuiteResult;
  return proto.gauge.messages.ProtoSuiteResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.ProtoSuiteResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.ProtoSuiteResult}
 */
proto.gauge.messages.ProtoSuiteResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gauge.messages.ProtoSpecResult;
      reader.readMessage(value,proto.gauge.messages.ProtoSpecResult.deserializeBinaryFromReader);
      msg.addSpecresults(value);
      break;
    case 2:
      var value = new proto.gauge.messages.ProtoHookFailure;
      reader.readMessage(value,proto.gauge.messages.ProtoHookFailure.deserializeBinaryFromReader);
      msg.setPrehookfailure(value);
      break;
    case 3:
      var value = new proto.gauge.messages.ProtoHookFailure;
      reader.readMessage(value,proto.gauge.messages.ProtoHookFailure.deserializeBinaryFromReader);
      msg.setPosthookfailure(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFailed(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSpecsfailedcount(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExecutiontime(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSuccessrate(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setEnvironment(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setTags(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectname(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimestamp(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSpecsskippedcount(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.addPrehookmessages(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.addPosthookmessages(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.addPrehookmessage(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.addPosthookmessage(value);
      break;
    case 17:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addPrehookscreenshots(value);
      break;
    case 18:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addPosthookscreenshots(value);
      break;
    case 19:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setChunked(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setChunksize(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.addPrehookscreenshotfiles(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.addPosthookscreenshotfiles(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.ProtoSuiteResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.ProtoSuiteResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.ProtoSuiteResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ProtoSuiteResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSpecresultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.gauge.messages.ProtoSpecResult.serializeBinaryToWriter
    );
  }
  f = message.getPrehookfailure();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gauge.messages.ProtoHookFailure.serializeBinaryToWriter
    );
  }
  f = message.getPosthookfailure();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.gauge.messages.ProtoHookFailure.serializeBinaryToWriter
    );
  }
  f = message.getFailed();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getSpecsfailedcount();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getExecutiontime();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getSuccessrate();
  if (f !== 0.0) {
    writer.writeFloat(
      7,
      f
    );
  }
  f = message.getEnvironment();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getTags();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getProjectname();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getTimestamp();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getSpecsskippedcount();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getPrehookmessagesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      13,
      f
    );
  }
  f = message.getPosthookmessagesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      14,
      f
    );
  }
  f = message.getPrehookmessageList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      15,
      f
    );
  }
  f = message.getPosthookmessageList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      16,
      f
    );
  }
  f = message.getPrehookscreenshotsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      17,
      f
    );
  }
  f = message.getPosthookscreenshotsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      18,
      f
    );
  }
  f = message.getChunked();
  if (f) {
    writer.writeBool(
      19,
      f
    );
  }
  f = message.getChunksize();
  if (f !== 0) {
    writer.writeInt64(
      20,
      f
    );
  }
  f = message.getPrehookscreenshotfilesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      21,
      f
    );
  }
  f = message.getPosthookscreenshotfilesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      22,
      f
    );
  }
};


/**
 * repeated ProtoSpecResult specResults = 1;
 * @return {!Array<!proto.gauge.messages.ProtoSpecResult>}
 */
proto.gauge.messages.ProtoSuiteResult.prototype.getSpecresultsList = function() {
  return /** @type{!Array<!proto.gauge.messages.ProtoSpecResult>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gauge.messages.ProtoSpecResult, 1));
};


/**
 * @param {!Array<!proto.gauge.messages.ProtoSpecResult>} value
 * @return {!proto.gauge.messages.ProtoSuiteResult} returns this
*/
proto.gauge.messages.ProtoSuiteResult.prototype.setSpecresultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.gauge.messages.ProtoSpecResult=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ProtoSpecResult}
 */
proto.gauge.messages.ProtoSuiteResult.prototype.addSpecresults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.gauge.messages.ProtoSpecResult, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoSuiteResult} returns this
 */
proto.gauge.messages.ProtoSuiteResult.prototype.clearSpecresultsList = function() {
  return this.setSpecresultsList([]);
};


/**
 * optional ProtoHookFailure preHookFailure = 2;
 * @return {?proto.gauge.messages.ProtoHookFailure}
 */
proto.gauge.messages.ProtoSuiteResult.prototype.getPrehookfailure = function() {
  return /** @type{?proto.gauge.messages.ProtoHookFailure} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.ProtoHookFailure, 2));
};


/**
 * @param {?proto.gauge.messages.ProtoHookFailure|undefined} value
 * @return {!proto.gauge.messages.ProtoSuiteResult} returns this
*/
proto.gauge.messages.ProtoSuiteResult.prototype.setPrehookfailure = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.ProtoSuiteResult} returns this
 */
proto.gauge.messages.ProtoSuiteResult.prototype.clearPrehookfailure = function() {
  return this.setPrehookfailure(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.ProtoSuiteResult.prototype.hasPrehookfailure = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ProtoHookFailure postHookFailure = 3;
 * @return {?proto.gauge.messages.ProtoHookFailure}
 */
proto.gauge.messages.ProtoSuiteResult.prototype.getPosthookfailure = function() {
  return /** @type{?proto.gauge.messages.ProtoHookFailure} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.ProtoHookFailure, 3));
};


/**
 * @param {?proto.gauge.messages.ProtoHookFailure|undefined} value
 * @return {!proto.gauge.messages.ProtoSuiteResult} returns this
*/
proto.gauge.messages.ProtoSuiteResult.prototype.setPosthookfailure = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.ProtoSuiteResult} returns this
 */
proto.gauge.messages.ProtoSuiteResult.prototype.clearPosthookfailure = function() {
  return this.setPosthookfailure(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.ProtoSuiteResult.prototype.hasPosthookfailure = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool failed = 4;
 * @return {boolean}
 */
proto.gauge.messages.ProtoSuiteResult.prototype.getFailed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gauge.messages.ProtoSuiteResult} returns this
 */
proto.gauge.messages.ProtoSuiteResult.prototype.setFailed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional int32 specsFailedCount = 5;
 * @return {number}
 */
proto.gauge.messages.ProtoSuiteResult.prototype.getSpecsfailedcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.gauge.messages.ProtoSuiteResult} returns this
 */
proto.gauge.messages.ProtoSuiteResult.prototype.setSpecsfailedcount = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 executionTime = 6;
 * @return {number}
 */
proto.gauge.messages.ProtoSuiteResult.prototype.getExecutiontime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.gauge.messages.ProtoSuiteResult} returns this
 */
proto.gauge.messages.ProtoSuiteResult.prototype.setExecutiontime = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional float successRate = 7;
 * @return {number}
 */
proto.gauge.messages.ProtoSuiteResult.prototype.getSuccessrate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.gauge.messages.ProtoSuiteResult} returns this
 */
proto.gauge.messages.ProtoSuiteResult.prototype.setSuccessrate = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional string environment = 8;
 * @return {string}
 */
proto.gauge.messages.ProtoSuiteResult.prototype.getEnvironment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.ProtoSuiteResult} returns this
 */
proto.gauge.messages.ProtoSuiteResult.prototype.setEnvironment = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string tags = 9;
 * @return {string}
 */
proto.gauge.messages.ProtoSuiteResult.prototype.getTags = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.ProtoSuiteResult} returns this
 */
proto.gauge.messages.ProtoSuiteResult.prototype.setTags = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string projectName = 10;
 * @return {string}
 */
proto.gauge.messages.ProtoSuiteResult.prototype.getProjectname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.ProtoSuiteResult} returns this
 */
proto.gauge.messages.ProtoSuiteResult.prototype.setProjectname = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string timestamp = 11;
 * @return {string}
 */
proto.gauge.messages.ProtoSuiteResult.prototype.getTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.ProtoSuiteResult} returns this
 */
proto.gauge.messages.ProtoSuiteResult.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional int32 specsSkippedCount = 12;
 * @return {number}
 */
proto.gauge.messages.ProtoSuiteResult.prototype.getSpecsskippedcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.gauge.messages.ProtoSuiteResult} returns this
 */
proto.gauge.messages.ProtoSuiteResult.prototype.setSpecsskippedcount = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * repeated string preHookMessages = 13;
 * @return {!Array<string>}
 */
proto.gauge.messages.ProtoSuiteResult.prototype.getPrehookmessagesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 13));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gauge.messages.ProtoSuiteResult} returns this
 */
proto.gauge.messages.ProtoSuiteResult.prototype.setPrehookmessagesList = function(value) {
  return jspb.Message.setField(this, 13, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ProtoSuiteResult} returns this
 */
proto.gauge.messages.ProtoSuiteResult.prototype.addPrehookmessages = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 13, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoSuiteResult} returns this
 */
proto.gauge.messages.ProtoSuiteResult.prototype.clearPrehookmessagesList = function() {
  return this.setPrehookmessagesList([]);
};


/**
 * repeated string postHookMessages = 14;
 * @return {!Array<string>}
 */
proto.gauge.messages.ProtoSuiteResult.prototype.getPosthookmessagesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 14));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gauge.messages.ProtoSuiteResult} returns this
 */
proto.gauge.messages.ProtoSuiteResult.prototype.setPosthookmessagesList = function(value) {
  return jspb.Message.setField(this, 14, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ProtoSuiteResult} returns this
 */
proto.gauge.messages.ProtoSuiteResult.prototype.addPosthookmessages = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 14, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoSuiteResult} returns this
 */
proto.gauge.messages.ProtoSuiteResult.prototype.clearPosthookmessagesList = function() {
  return this.setPosthookmessagesList([]);
};


/**
 * repeated string preHookMessage = 15;
 * @return {!Array<string>}
 */
proto.gauge.messages.ProtoSuiteResult.prototype.getPrehookmessageList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 15));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gauge.messages.ProtoSuiteResult} returns this
 */
proto.gauge.messages.ProtoSuiteResult.prototype.setPrehookmessageList = function(value) {
  return jspb.Message.setField(this, 15, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ProtoSuiteResult} returns this
 */
proto.gauge.messages.ProtoSuiteResult.prototype.addPrehookmessage = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 15, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoSuiteResult} returns this
 */
proto.gauge.messages.ProtoSuiteResult.prototype.clearPrehookmessageList = function() {
  return this.setPrehookmessageList([]);
};


/**
 * repeated string postHookMessage = 16;
 * @return {!Array<string>}
 */
proto.gauge.messages.ProtoSuiteResult.prototype.getPosthookmessageList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 16));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gauge.messages.ProtoSuiteResult} returns this
 */
proto.gauge.messages.ProtoSuiteResult.prototype.setPosthookmessageList = function(value) {
  return jspb.Message.setField(this, 16, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ProtoSuiteResult} returns this
 */
proto.gauge.messages.ProtoSuiteResult.prototype.addPosthookmessage = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 16, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoSuiteResult} returns this
 */
proto.gauge.messages.ProtoSuiteResult.prototype.clearPosthookmessageList = function() {
  return this.setPosthookmessageList([]);
};


/**
 * repeated bytes preHookScreenshots = 17;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.gauge.messages.ProtoSuiteResult.prototype.getPrehookscreenshotsList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 17));
};


/**
 * repeated bytes preHookScreenshots = 17;
 * This is a type-conversion wrapper around `getPrehookscreenshotsList()`
 * @return {!Array<string>}
 */
proto.gauge.messages.ProtoSuiteResult.prototype.getPrehookscreenshotsList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getPrehookscreenshotsList()));
};


/**
 * repeated bytes preHookScreenshots = 17;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPrehookscreenshotsList()`
 * @return {!Array<!Uint8Array>}
 */
proto.gauge.messages.ProtoSuiteResult.prototype.getPrehookscreenshotsList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getPrehookscreenshotsList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.gauge.messages.ProtoSuiteResult} returns this
 */
proto.gauge.messages.ProtoSuiteResult.prototype.setPrehookscreenshotsList = function(value) {
  return jspb.Message.setField(this, 17, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ProtoSuiteResult} returns this
 */
proto.gauge.messages.ProtoSuiteResult.prototype.addPrehookscreenshots = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 17, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoSuiteResult} returns this
 */
proto.gauge.messages.ProtoSuiteResult.prototype.clearPrehookscreenshotsList = function() {
  return this.setPrehookscreenshotsList([]);
};


/**
 * repeated bytes postHookScreenshots = 18;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.gauge.messages.ProtoSuiteResult.prototype.getPosthookscreenshotsList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 18));
};


/**
 * repeated bytes postHookScreenshots = 18;
 * This is a type-conversion wrapper around `getPosthookscreenshotsList()`
 * @return {!Array<string>}
 */
proto.gauge.messages.ProtoSuiteResult.prototype.getPosthookscreenshotsList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getPosthookscreenshotsList()));
};


/**
 * repeated bytes postHookScreenshots = 18;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPosthookscreenshotsList()`
 * @return {!Array<!Uint8Array>}
 */
proto.gauge.messages.ProtoSuiteResult.prototype.getPosthookscreenshotsList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getPosthookscreenshotsList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.gauge.messages.ProtoSuiteResult} returns this
 */
proto.gauge.messages.ProtoSuiteResult.prototype.setPosthookscreenshotsList = function(value) {
  return jspb.Message.setField(this, 18, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ProtoSuiteResult} returns this
 */
proto.gauge.messages.ProtoSuiteResult.prototype.addPosthookscreenshots = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 18, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoSuiteResult} returns this
 */
proto.gauge.messages.ProtoSuiteResult.prototype.clearPosthookscreenshotsList = function() {
  return this.setPosthookscreenshotsList([]);
};


/**
 * optional bool chunked = 19;
 * @return {boolean}
 */
proto.gauge.messages.ProtoSuiteResult.prototype.getChunked = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 19, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gauge.messages.ProtoSuiteResult} returns this
 */
proto.gauge.messages.ProtoSuiteResult.prototype.setChunked = function(value) {
  return jspb.Message.setProto3BooleanField(this, 19, value);
};


/**
 * optional int64 chunkSize = 20;
 * @return {number}
 */
proto.gauge.messages.ProtoSuiteResult.prototype.getChunksize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.gauge.messages.ProtoSuiteResult} returns this
 */
proto.gauge.messages.ProtoSuiteResult.prototype.setChunksize = function(value) {
  return jspb.Message.setProto3IntField(this, 20, value);
};


/**
 * repeated string preHookScreenshotFiles = 21;
 * @return {!Array<string>}
 */
proto.gauge.messages.ProtoSuiteResult.prototype.getPrehookscreenshotfilesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 21));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gauge.messages.ProtoSuiteResult} returns this
 */
proto.gauge.messages.ProtoSuiteResult.prototype.setPrehookscreenshotfilesList = function(value) {
  return jspb.Message.setField(this, 21, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ProtoSuiteResult} returns this
 */
proto.gauge.messages.ProtoSuiteResult.prototype.addPrehookscreenshotfiles = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 21, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoSuiteResult} returns this
 */
proto.gauge.messages.ProtoSuiteResult.prototype.clearPrehookscreenshotfilesList = function() {
  return this.setPrehookscreenshotfilesList([]);
};


/**
 * repeated string postHookScreenshotFiles = 22;
 * @return {!Array<string>}
 */
proto.gauge.messages.ProtoSuiteResult.prototype.getPosthookscreenshotfilesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 22));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gauge.messages.ProtoSuiteResult} returns this
 */
proto.gauge.messages.ProtoSuiteResult.prototype.setPosthookscreenshotfilesList = function(value) {
  return jspb.Message.setField(this, 22, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ProtoSuiteResult} returns this
 */
proto.gauge.messages.ProtoSuiteResult.prototype.addPosthookscreenshotfiles = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 22, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoSuiteResult} returns this
 */
proto.gauge.messages.ProtoSuiteResult.prototype.clearPosthookscreenshotfilesList = function() {
  return this.setPosthookscreenshotfilesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gauge.messages.ProtoSpecResult.repeatedFields_ = [5,9,10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.ProtoSpecResult.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.ProtoSpecResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.ProtoSpecResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ProtoSpecResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    protospec: (f = msg.getProtospec()) && proto.gauge.messages.ProtoSpec.toObject(includeInstance, f),
    scenariocount: jspb.Message.getFieldWithDefault(msg, 2, 0),
    scenariofailedcount: jspb.Message.getFieldWithDefault(msg, 3, 0),
    failed: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    faileddatatablerowsList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    executiontime: jspb.Message.getFieldWithDefault(msg, 6, 0),
    skipped: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    scenarioskippedcount: jspb.Message.getFieldWithDefault(msg, 8, 0),
    skippeddatatablerowsList: (f = jspb.Message.getRepeatedField(msg, 9)) == null ? undefined : f,
    errorsList: jspb.Message.toObjectList(msg.getErrorsList(),
    proto.gauge.messages.Error.toObject, includeInstance),
    timestamp: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.ProtoSpecResult}
 */
proto.gauge.messages.ProtoSpecResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.ProtoSpecResult;
  return proto.gauge.messages.ProtoSpecResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.ProtoSpecResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.ProtoSpecResult}
 */
proto.gauge.messages.ProtoSpecResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gauge.messages.ProtoSpec;
      reader.readMessage(value,proto.gauge.messages.ProtoSpec.deserializeBinaryFromReader);
      msg.setProtospec(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setScenariocount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setScenariofailedcount(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFailed(value);
      break;
    case 5:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addFaileddatatablerows(values[i]);
      }
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExecutiontime(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSkipped(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setScenarioskippedcount(value);
      break;
    case 9:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addSkippeddatatablerows(values[i]);
      }
      break;
    case 10:
      var value = new proto.gauge.messages.Error;
      reader.readMessage(value,proto.gauge.messages.Error.deserializeBinaryFromReader);
      msg.addErrors(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.ProtoSpecResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.ProtoSpecResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.ProtoSpecResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ProtoSpecResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProtospec();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gauge.messages.ProtoSpec.serializeBinaryToWriter
    );
  }
  f = message.getScenariocount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getScenariofailedcount();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getFailed();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getFaileddatatablerowsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      5,
      f
    );
  }
  f = message.getExecutiontime();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getSkipped();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getScenarioskippedcount();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getSkippeddatatablerowsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      9,
      f
    );
  }
  f = message.getErrorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.gauge.messages.Error.serializeBinaryToWriter
    );
  }
  f = message.getTimestamp();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional ProtoSpec protoSpec = 1;
 * @return {?proto.gauge.messages.ProtoSpec}
 */
proto.gauge.messages.ProtoSpecResult.prototype.getProtospec = function() {
  return /** @type{?proto.gauge.messages.ProtoSpec} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.ProtoSpec, 1));
};


/**
 * @param {?proto.gauge.messages.ProtoSpec|undefined} value
 * @return {!proto.gauge.messages.ProtoSpecResult} returns this
*/
proto.gauge.messages.ProtoSpecResult.prototype.setProtospec = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.ProtoSpecResult} returns this
 */
proto.gauge.messages.ProtoSpecResult.prototype.clearProtospec = function() {
  return this.setProtospec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.ProtoSpecResult.prototype.hasProtospec = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 scenarioCount = 2;
 * @return {number}
 */
proto.gauge.messages.ProtoSpecResult.prototype.getScenariocount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.gauge.messages.ProtoSpecResult} returns this
 */
proto.gauge.messages.ProtoSpecResult.prototype.setScenariocount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 scenarioFailedCount = 3;
 * @return {number}
 */
proto.gauge.messages.ProtoSpecResult.prototype.getScenariofailedcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.gauge.messages.ProtoSpecResult} returns this
 */
proto.gauge.messages.ProtoSpecResult.prototype.setScenariofailedcount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool failed = 4;
 * @return {boolean}
 */
proto.gauge.messages.ProtoSpecResult.prototype.getFailed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gauge.messages.ProtoSpecResult} returns this
 */
proto.gauge.messages.ProtoSpecResult.prototype.setFailed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * repeated int32 failedDataTableRows = 5;
 * @return {!Array<number>}
 */
proto.gauge.messages.ProtoSpecResult.prototype.getFaileddatatablerowsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.gauge.messages.ProtoSpecResult} returns this
 */
proto.gauge.messages.ProtoSpecResult.prototype.setFaileddatatablerowsList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ProtoSpecResult} returns this
 */
proto.gauge.messages.ProtoSpecResult.prototype.addFaileddatatablerows = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoSpecResult} returns this
 */
proto.gauge.messages.ProtoSpecResult.prototype.clearFaileddatatablerowsList = function() {
  return this.setFaileddatatablerowsList([]);
};


/**
 * optional int64 executionTime = 6;
 * @return {number}
 */
proto.gauge.messages.ProtoSpecResult.prototype.getExecutiontime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.gauge.messages.ProtoSpecResult} returns this
 */
proto.gauge.messages.ProtoSpecResult.prototype.setExecutiontime = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional bool skipped = 7;
 * @return {boolean}
 */
proto.gauge.messages.ProtoSpecResult.prototype.getSkipped = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gauge.messages.ProtoSpecResult} returns this
 */
proto.gauge.messages.ProtoSpecResult.prototype.setSkipped = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional int32 scenarioSkippedCount = 8;
 * @return {number}
 */
proto.gauge.messages.ProtoSpecResult.prototype.getScenarioskippedcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.gauge.messages.ProtoSpecResult} returns this
 */
proto.gauge.messages.ProtoSpecResult.prototype.setScenarioskippedcount = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * repeated int32 skippedDataTableRows = 9;
 * @return {!Array<number>}
 */
proto.gauge.messages.ProtoSpecResult.prototype.getSkippeddatatablerowsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 9));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.gauge.messages.ProtoSpecResult} returns this
 */
proto.gauge.messages.ProtoSpecResult.prototype.setSkippeddatatablerowsList = function(value) {
  return jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ProtoSpecResult} returns this
 */
proto.gauge.messages.ProtoSpecResult.prototype.addSkippeddatatablerows = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoSpecResult} returns this
 */
proto.gauge.messages.ProtoSpecResult.prototype.clearSkippeddatatablerowsList = function() {
  return this.setSkippeddatatablerowsList([]);
};


/**
 * repeated Error errors = 10;
 * @return {!Array<!proto.gauge.messages.Error>}
 */
proto.gauge.messages.ProtoSpecResult.prototype.getErrorsList = function() {
  return /** @type{!Array<!proto.gauge.messages.Error>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gauge.messages.Error, 10));
};


/**
 * @param {!Array<!proto.gauge.messages.Error>} value
 * @return {!proto.gauge.messages.ProtoSpecResult} returns this
*/
proto.gauge.messages.ProtoSpecResult.prototype.setErrorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.gauge.messages.Error=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.Error}
 */
proto.gauge.messages.ProtoSpecResult.prototype.addErrors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.gauge.messages.Error, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoSpecResult} returns this
 */
proto.gauge.messages.ProtoSpecResult.prototype.clearErrorsList = function() {
  return this.setErrorsList([]);
};


/**
 * optional string timestamp = 11;
 * @return {string}
 */
proto.gauge.messages.ProtoSpecResult.prototype.getTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.ProtoSpecResult} returns this
 */
proto.gauge.messages.ProtoSpecResult.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.ProtoScenarioResult.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.ProtoScenarioResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.ProtoScenarioResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ProtoScenarioResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    protoitem: (f = msg.getProtoitem()) && proto.gauge.messages.ProtoItem.toObject(includeInstance, f),
    executiontime: jspb.Message.getFieldWithDefault(msg, 2, 0),
    timestamp: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.ProtoScenarioResult}
 */
proto.gauge.messages.ProtoScenarioResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.ProtoScenarioResult;
  return proto.gauge.messages.ProtoScenarioResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.ProtoScenarioResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.ProtoScenarioResult}
 */
proto.gauge.messages.ProtoScenarioResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gauge.messages.ProtoItem;
      reader.readMessage(value,proto.gauge.messages.ProtoItem.deserializeBinaryFromReader);
      msg.setProtoitem(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExecutiontime(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.ProtoScenarioResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.ProtoScenarioResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.ProtoScenarioResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ProtoScenarioResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProtoitem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gauge.messages.ProtoItem.serializeBinaryToWriter
    );
  }
  f = message.getExecutiontime();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getTimestamp();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional ProtoItem protoItem = 1;
 * @return {?proto.gauge.messages.ProtoItem}
 */
proto.gauge.messages.ProtoScenarioResult.prototype.getProtoitem = function() {
  return /** @type{?proto.gauge.messages.ProtoItem} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.ProtoItem, 1));
};


/**
 * @param {?proto.gauge.messages.ProtoItem|undefined} value
 * @return {!proto.gauge.messages.ProtoScenarioResult} returns this
*/
proto.gauge.messages.ProtoScenarioResult.prototype.setProtoitem = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.ProtoScenarioResult} returns this
 */
proto.gauge.messages.ProtoScenarioResult.prototype.clearProtoitem = function() {
  return this.setProtoitem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.ProtoScenarioResult.prototype.hasProtoitem = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 executionTime = 2;
 * @return {number}
 */
proto.gauge.messages.ProtoScenarioResult.prototype.getExecutiontime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.gauge.messages.ProtoScenarioResult} returns this
 */
proto.gauge.messages.ProtoScenarioResult.prototype.setExecutiontime = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string timestamp = 3;
 * @return {string}
 */
proto.gauge.messages.ProtoScenarioResult.prototype.getTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.ProtoScenarioResult} returns this
 */
proto.gauge.messages.ProtoScenarioResult.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.ProtoStepResult.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.ProtoStepResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.ProtoStepResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ProtoStepResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    protoitem: (f = msg.getProtoitem()) && proto.gauge.messages.ProtoItem.toObject(includeInstance, f),
    executiontime: jspb.Message.getFieldWithDefault(msg, 2, 0),
    timestamp: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.ProtoStepResult}
 */
proto.gauge.messages.ProtoStepResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.ProtoStepResult;
  return proto.gauge.messages.ProtoStepResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.ProtoStepResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.ProtoStepResult}
 */
proto.gauge.messages.ProtoStepResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gauge.messages.ProtoItem;
      reader.readMessage(value,proto.gauge.messages.ProtoItem.deserializeBinaryFromReader);
      msg.setProtoitem(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExecutiontime(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.ProtoStepResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.ProtoStepResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.ProtoStepResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ProtoStepResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProtoitem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gauge.messages.ProtoItem.serializeBinaryToWriter
    );
  }
  f = message.getExecutiontime();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getTimestamp();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional ProtoItem protoItem = 1;
 * @return {?proto.gauge.messages.ProtoItem}
 */
proto.gauge.messages.ProtoStepResult.prototype.getProtoitem = function() {
  return /** @type{?proto.gauge.messages.ProtoItem} */ (
    jspb.Message.getWrapperField(this, proto.gauge.messages.ProtoItem, 1));
};


/**
 * @param {?proto.gauge.messages.ProtoItem|undefined} value
 * @return {!proto.gauge.messages.ProtoStepResult} returns this
*/
proto.gauge.messages.ProtoStepResult.prototype.setProtoitem = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gauge.messages.ProtoStepResult} returns this
 */
proto.gauge.messages.ProtoStepResult.prototype.clearProtoitem = function() {
  return this.setProtoitem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gauge.messages.ProtoStepResult.prototype.hasProtoitem = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 executionTime = 2;
 * @return {number}
 */
proto.gauge.messages.ProtoStepResult.prototype.getExecutiontime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.gauge.messages.ProtoStepResult} returns this
 */
proto.gauge.messages.ProtoStepResult.prototype.setExecutiontime = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string timestamp = 3;
 * @return {string}
 */
proto.gauge.messages.ProtoStepResult.prototype.getTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.ProtoStepResult} returns this
 */
proto.gauge.messages.ProtoStepResult.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.Error.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.Error.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.Error} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.Error.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    filename: jspb.Message.getFieldWithDefault(msg, 2, ""),
    linenumber: jspb.Message.getFieldWithDefault(msg, 3, 0),
    message: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.Error}
 */
proto.gauge.messages.Error.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.Error;
  return proto.gauge.messages.Error.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.Error} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.Error}
 */
proto.gauge.messages.Error.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.gauge.messages.Error.ErrorType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilename(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLinenumber(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.Error.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.Error.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.Error} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.Error.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getFilename();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLinenumber();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.gauge.messages.Error.ErrorType = {
  PARSE_ERROR: 0,
  VALIDATION_ERROR: 1
};

/**
 * optional ErrorType type = 1;
 * @return {!proto.gauge.messages.Error.ErrorType}
 */
proto.gauge.messages.Error.prototype.getType = function() {
  return /** @type {!proto.gauge.messages.Error.ErrorType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.gauge.messages.Error.ErrorType} value
 * @return {!proto.gauge.messages.Error} returns this
 */
proto.gauge.messages.Error.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string filename = 2;
 * @return {string}
 */
proto.gauge.messages.Error.prototype.getFilename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.Error} returns this
 */
proto.gauge.messages.Error.prototype.setFilename = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 lineNumber = 3;
 * @return {number}
 */
proto.gauge.messages.Error.prototype.getLinenumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.gauge.messages.Error} returns this
 */
proto.gauge.messages.Error.prototype.setLinenumber = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string message = 4;
 * @return {string}
 */
proto.gauge.messages.Error.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.Error} returns this
 */
proto.gauge.messages.Error.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gauge.messages.ProtoStepValue.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gauge.messages.ProtoStepValue.prototype.toObject = function(opt_includeInstance) {
  return proto.gauge.messages.ProtoStepValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gauge.messages.ProtoStepValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ProtoStepValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    stepvalue: jspb.Message.getFieldWithDefault(msg, 1, ""),
    parameterizedstepvalue: jspb.Message.getFieldWithDefault(msg, 2, ""),
    parametersList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gauge.messages.ProtoStepValue}
 */
proto.gauge.messages.ProtoStepValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gauge.messages.ProtoStepValue;
  return proto.gauge.messages.ProtoStepValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gauge.messages.ProtoStepValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gauge.messages.ProtoStepValue}
 */
proto.gauge.messages.ProtoStepValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStepvalue(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setParameterizedstepvalue(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addParameters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gauge.messages.ProtoStepValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gauge.messages.ProtoStepValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gauge.messages.ProtoStepValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gauge.messages.ProtoStepValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStepvalue();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getParameterizedstepvalue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getParametersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional string stepValue = 1;
 * @return {string}
 */
proto.gauge.messages.ProtoStepValue.prototype.getStepvalue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.ProtoStepValue} returns this
 */
proto.gauge.messages.ProtoStepValue.prototype.setStepvalue = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string parameterizedStepValue = 2;
 * @return {string}
 */
proto.gauge.messages.ProtoStepValue.prototype.getParameterizedstepvalue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gauge.messages.ProtoStepValue} returns this
 */
proto.gauge.messages.ProtoStepValue.prototype.setParameterizedstepvalue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string parameters = 3;
 * @return {!Array<string>}
 */
proto.gauge.messages.ProtoStepValue.prototype.getParametersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.gauge.messages.ProtoStepValue} returns this
 */
proto.gauge.messages.ProtoStepValue.prototype.setParametersList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.gauge.messages.ProtoStepValue} returns this
 */
proto.gauge.messages.ProtoStepValue.prototype.addParameters = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gauge.messages.ProtoStepValue} returns this
 */
proto.gauge.messages.ProtoStepValue.prototype.clearParametersList = function() {
  return this.setParametersList([]);
};


/**
 * @enum {number}
 */
proto.gauge.messages.ExecutionStatus = {
  NOTEXECUTED: 0,
  PASSED: 1,
  FAILED: 2,
  SKIPPED: 3
};

goog.object.extend(exports, proto.gauge.messages);
