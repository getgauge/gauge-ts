name: Release

on: deployment

jobs:
  release:
    if: github.event.deployment.environment == 'production'
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
      NPM_TOKEN: '${{ secrets.NPM_TOKEN }}'
      CI: true

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup git
        run: |
          git config --global user.name "$(git --no-pager log --format=format:'%an' -n 1)"
          git config --global user.email "$(git --no-pager log --format=format:'%ae' -n 1)"

      - run: Install dependencies
          npm install

      - name: Package
        working-directory: gauge-ts
        run: |
          npm build
          ./build.sh package


      - name: Deploy on github
        working-directory: gauge-ts
        run: |
          cd artifacts
          version=$(ls gauge-ts* | head -1 | sed "s/\.[^\.]*$//" | sed "s/gauge-ts-//" | sed "s/-[a-z]*\.[a-z0-9_]*$//");
          if [ -z "$version" ]; then
              echo "Gauge version is not set"
              exit 1
          fi

          echo -e "gauge-ts v$version\n\n" > desc.txt
          release_description=$(ruby -e "$(curl -sSfL https://github.com/getgauge/gauge/raw/master/build/create_release_text.rb)" getgauge gauge-ts)
          echo "$release_description" >> desc.txt
          echo "Creating new draft for release v$version"

          gh release create "v$version" ./desc.txt
          sleep 10

          echo "Start uploading assets..."
          for i in `ls $artifacts`; do
              gh release upload "v$version" $i
          done

          cat desc.txt
          rm -rf desc.txt

      - name: Deploy npm
        working-directory: gauge-ts
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm publish --access=public
